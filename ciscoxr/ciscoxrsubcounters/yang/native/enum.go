/*
Package native is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was false
in this case).

This package was generated by /usr/local/google/home/singhavnish/go/pkg/mod/github.com/openconfig/ygot@v0.33.0/genutil/names.go
using the following YANG input files:
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ifmgr-cfg.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-infra-statsd-oper-sub1.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-infra-statsd-oper.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ip-iarm-datatypes.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ipv4-arp-oper-sub1.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ipv4-arp-oper-sub2.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ipv4-arp-oper-sub3.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ipv4-arp-oper.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ipv4-io-oper-sub1.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ipv4-io-oper-sub2.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ipv4-io-oper.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ipv6-nd-oper-sub1.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-ipv6-nd-oper.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-subscriber-infra-tmplmgr-cfg.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-types.yang
  - yang/vendor/cisco/xr/2431/cisco-semver.yang
  - yang/vendor/cisco/xr/2431/ietf-inet-types.yang

Imported modules were sourced from:
  - yang/vendor/cisco/xr/2431/...
*/
package native

import (
	"github.com/openconfig/ygot/ygot"
)

// E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args. An additional value named
// Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args) IsYANGGoEnum() {
}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args.
func (E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args.
func (e E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args")
}

const (
	// Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_UNSET corresponds to the value UNSET of Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args
	Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_UNSET E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args = 0
	// Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_default_values corresponds to the value default_values of Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args
	Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_default_values E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args = 1
	// Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_specify_half_life corresponds to the value specify_half_life of Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args
	Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_specify_half_life E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args = 2
	// Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_specify_all corresponds to the value specify_all of Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args
	Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_specify_all E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args = 5
	// Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_specify_rp corresponds to the value specify_rp of Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args
	Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args_specify_rp E_Cisco_IOS_XRIfmgrCfg_InterfaceConfigurations_InterfaceConfiguration_Dampening_Args = 6
)

// E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum. An additional value named
// Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum.
func (E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum.
func (e E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum")
}

const (
	// Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_UNSET corresponds to the value UNSET of Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum
	Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_UNSET E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum = 0
	// Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_default corresponds to the value default of Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum
	Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_default E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum = 1
	// Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_point_to_point corresponds to the value point_to_point of Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum
	Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_point_to_point E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum = 2
	// Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_multipoint corresponds to the value multipoint of Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum
	Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_multipoint E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum = 3
	// Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_l2_transport corresponds to the value l2_transport of Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum
	Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum_l2_transport E_Cisco_IOS_XRIfmgrCfg_InterfaceModeEnum = 4
)

// E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIfmgrCfg_LinkStatusEnum. An additional value named
// Cisco_IOS_XRIfmgrCfg_LinkStatusEnum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIfmgrCfg_LinkStatusEnum implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIfmgrCfg_LinkStatusEnum can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIfmgrCfg_LinkStatusEnum.
func (E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum.
func (e E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum")
}

const (
	// Cisco_IOS_XRIfmgrCfg_LinkStatusEnum_UNSET corresponds to the value UNSET of Cisco_IOS_XRIfmgrCfg_LinkStatusEnum
	Cisco_IOS_XRIfmgrCfg_LinkStatusEnum_UNSET E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum = 0
	// Cisco_IOS_XRIfmgrCfg_LinkStatusEnum_default corresponds to the value default of Cisco_IOS_XRIfmgrCfg_LinkStatusEnum
	Cisco_IOS_XRIfmgrCfg_LinkStatusEnum_default E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum = 1
	// Cisco_IOS_XRIfmgrCfg_LinkStatusEnum_disable corresponds to the value disable of Cisco_IOS_XRIfmgrCfg_LinkStatusEnum
	Cisco_IOS_XRIfmgrCfg_LinkStatusEnum_disable E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum = 2
	// Cisco_IOS_XRIfmgrCfg_LinkStatusEnum_software_interfaces corresponds to the value software_interfaces of Cisco_IOS_XRIfmgrCfg_LinkStatusEnum
	Cisco_IOS_XRIfmgrCfg_LinkStatusEnum_software_interfaces E_Cisco_IOS_XRIfmgrCfg_LinkStatusEnum = 3
)

// E_Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum. An additional value named
// Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum.
func (E_Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum.
func (e E_Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum")
}

const (
	// Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum_UNSET corresponds to the value UNSET of Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum
	Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum_UNSET E_Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum = 0
	// Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum_normal corresponds to the value normal of Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum
	Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum_normal E_Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum = 1
	// Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum_maintenance corresponds to the value maintenance of Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum
	Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum_maintenance E_Cisco_IOS_XRIfmgrCfg_SecondaryAdminStateEnum = 2
)

// E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap. An additional value named
// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap.
func (e E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_UNSET E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap = 0
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_none corresponds to the value none of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_none E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap = 1
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_arpa corresponds to the value arpa of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_arpa E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap = 2
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_snap corresponds to the value snap of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_snap E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap = 3
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_ieee802_1q corresponds to the value ieee802_1q of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_ieee802_1q E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap = 4
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_srp corresponds to the value srp of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_srp E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap = 5
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_srpa corresponds to the value srpa of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_srpa E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap = 6
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_srpb corresponds to the value srpb of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap_srpb E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEncap = 7
)

// E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry. An additional value named
// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry.
func (e E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry_UNSET E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry = 0
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry_null corresponds to the value null of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry_null E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry = 1
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry_static corresponds to the value static of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry_static E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry = 2
	// Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry_alias corresponds to the value alias of Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry
	Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry_alias E_Cisco_IOS_XRIpv4ArpOper_ArpGmpBagEntry = 3
)

// E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_ArpImOperBag. An additional value named
// Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_ArpImOperBag implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_ArpImOperBag can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_ArpImOperBag.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag.
func (e E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_ArpImOperBag
	Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_UNSET E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag = 0
	// Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_im_oper_none corresponds to the value im_oper_none of Cisco_IOS_XRIpv4ArpOper_ArpImOperBag
	Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_im_oper_none E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag = 1
	// Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_im_oper_caps_add corresponds to the value im_oper_caps_add of Cisco_IOS_XRIpv4ArpOper_ArpImOperBag
	Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_im_oper_caps_add E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag = 2
	// Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_im_oper_caps_rem corresponds to the value im_oper_caps_rem of Cisco_IOS_XRIpv4ArpOper_ArpImOperBag
	Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_im_oper_caps_rem E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag = 3
	// Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_im_oper_init_data corresponds to the value im_oper_init_data of Cisco_IOS_XRIpv4ArpOper_ArpImOperBag
	Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_im_oper_init_data E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag = 4
	// Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_im_oper_last corresponds to the value im_oper_last of Cisco_IOS_XRIpv4ArpOper_ArpImOperBag
	Cisco_IOS_XRIpv4ArpOper_ArpImOperBag_im_oper_last E_Cisco_IOS_XRIpv4ArpOper_ArpImOperBag = 5
)

// E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase. An additional value named
// Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase.
func (e E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase
	Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_UNSET E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase = 0
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_phase_not_started corresponds to the value phase_not_started of Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase
	Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_phase_not_started E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase = 1
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_phase_load corresponds to the value phase_load of Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase
	Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_phase_load E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase = 2
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_phase_run corresponds to the value phase_run of Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase
	Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_phase_run E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase = 3
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_phase_completed corresponds to the value phase_completed of Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase
	Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_phase_completed E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase = 4
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_phase_aborted corresponds to the value phase_aborted of Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase
	Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase_phase_aborted E_Cisco_IOS_XRIpv4ArpOper_ArpIssuPhase = 5
)

// E_Cisco_IOS_XRIpv4ArpOper_ArpIssuRole is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_ArpIssuRole. An additional value named
// Cisco_IOS_XRIpv4ArpOper_ArpIssuRole_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_ArpIssuRole int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_ArpIssuRole implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_ArpIssuRole can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpIssuRole) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_ArpIssuRole.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpIssuRole) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_ArpIssuRole.
func (e E_Cisco_IOS_XRIpv4ArpOper_ArpIssuRole) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_ArpIssuRole")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuRole_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_ArpIssuRole
	Cisco_IOS_XRIpv4ArpOper_ArpIssuRole_UNSET E_Cisco_IOS_XRIpv4ArpOper_ArpIssuRole = 0
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuRole_role_primary corresponds to the value role_primary of Cisco_IOS_XRIpv4ArpOper_ArpIssuRole
	Cisco_IOS_XRIpv4ArpOper_ArpIssuRole_role_primary E_Cisco_IOS_XRIpv4ArpOper_ArpIssuRole = 1
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuRole_role_secondary corresponds to the value role_secondary of Cisco_IOS_XRIpv4ArpOper_ArpIssuRole
	Cisco_IOS_XRIpv4ArpOper_ArpIssuRole_role_secondary E_Cisco_IOS_XRIpv4ArpOper_ArpIssuRole = 2
)

// E_Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion. An additional value named
// Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion.
func (e E_Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion
	Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion_UNSET E_Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion = 0
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion_version1 corresponds to the value version1 of Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion
	Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion_version1 E_Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion = 1
	// Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion_version2 corresponds to the value version2 of Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion
	Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion_version2 E_Cisco_IOS_XRIpv4ArpOper_ArpIssuVersion = 2
)

// E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag. An additional value named
// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag.
func (e E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag
	Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_UNSET E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag = 0
	// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_invalid corresponds to the value state_invalid of Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag
	Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_invalid E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag = 1
	// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_init corresponds to the value state_init of Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag
	Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_init E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag = 2
	// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_retry corresponds to the value state_retry of Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag
	Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_retry E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag = 3
	// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_connect corresponds to the value state_connect of Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag
	Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_connect E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag = 4
	// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_listen corresponds to the value state_listen of Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag
	Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_listen E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag = 5
	// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_reg corresponds to the value state_reg of Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag
	Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_reg E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag = 6
	// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_clenaup corresponds to the value state_clenaup of Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag
	Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_clenaup E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag = 7
	// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_connected corresponds to the value state_connected of Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag
	Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_connected E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag = 8
	// Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_estab corresponds to the value state_estab of Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag
	Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag_state_estab E_Cisco_IOS_XRIpv4ArpOper_ArpPeerStatusBag = 9
)

// E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus. An additional value named
// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus.
func (E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus.
func (e E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_UNSET E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 0
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_none corresponds to the value status_none of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_none E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 1
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolution_request corresponds to the value status_resolution_request of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolution_request E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 2
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_reply corresponds to the value status_resolved_reply of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_reply E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 3
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_grat_arp corresponds to the value status_resolved_grat_arp of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_grat_arp E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 4
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_request corresponds to the value status_resolved_request of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_request E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 5
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_lc_sync corresponds to the value status_resolved_lc_sync of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_lc_sync E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 6
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_lc_sync_purge_delay corresponds to the value status_resolved_lc_sync_purge_delay of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_lc_sync_purge_delay E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 7
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_client corresponds to the value status_resolved_client of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_client E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 8
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_removed_client corresponds to the value status_removed_client of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_removed_client E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 9
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_already_resolved corresponds to the value status_already_resolved of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_already_resolved E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 10
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_failed corresponds to the value status_failed of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_failed E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 11
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_interface_down corresponds to the value status_dropped_interface_down of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_interface_down E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 12
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_broadcast_disabled corresponds to the value status_dropped_broadcast_disabled of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_broadcast_disabled E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 13
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_interface_unavailable corresponds to the value status_dropped_interface_unavailable of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_interface_unavailable E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 14
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_bad_subnet corresponds to the value status_dropped_bad_subnet of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_bad_subnet E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 15
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_dynamic_learning_disabled corresponds to the value status_dropped_dynamic_learning_disabled of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_dynamic_learning_disabled E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 16
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_out_of_subnet_disabled corresponds to the value status_dropped_out_of_subnet_disabled of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_out_of_subnet_disabled E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 17
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_removed_client_sweep corresponds to the value status_removed_client_sweep of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_removed_client_sweep E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 18
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_added_client corresponds to the value status_added_client of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_added_client E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 19
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_added_v1 corresponds to the value status_added_v1 of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_added_v1 E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 20
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_removed_v1 corresponds to the value status_removed_v1 of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_removed_v1 E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 21
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_peer_sync corresponds to the value status_resolved_peer_sync of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_resolved_peer_sync E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 22
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_unsolicited_pak corresponds to the value status_dropped_unsolicited_pak of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_unsolicited_pak E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 23
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_drop_adjacency_added corresponds to the value status_drop_adjacency_added of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_drop_adjacency_added E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 24
	// Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_exceeding_cache_limit corresponds to the value status_dropped_exceeding_cache_limit of Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus
	Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus_status_dropped_exceeding_cache_limit E_Cisco_IOS_XRIpv4ArpOper_ArpResolutionHistoryStatus = 25
)

// E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap. An additional value named
// Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap.
func (E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap.
func (e E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap
	Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_UNSET E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap = 0
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_none corresponds to the value none of Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap
	Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_none E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap = 1
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_arpa corresponds to the value arpa of Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap
	Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_arpa E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap = 2
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_snap corresponds to the value snap of Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap
	Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_snap E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap = 3
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_ieee802_1q corresponds to the value ieee802_1q of Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap
	Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_ieee802_1q E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap = 4
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_srp corresponds to the value srp of Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap
	Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_srp E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap = 5
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_srpa corresponds to the value srpa of Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap
	Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_srpa E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap = 6
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_srpb corresponds to the value srpb of Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap
	Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap_srpb E_Cisco_IOS_XRIpv4ArpOper_IpArpBagEncap = 7
)

// E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags. An additional value named
// Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags.
func (E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags.
func (e E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags
	Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_UNSET E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags = 0
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_none corresponds to the value flag_none of Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags
	Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_none E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags = 1
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_dynamic corresponds to the value flag_dynamic of Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags
	Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_dynamic E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags = 2
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_evpn_sync corresponds to the value flag_evpn_sync of Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags
	Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_evpn_sync E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags = 3
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_host_delete corresponds to the value flag_host_delete of Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags
	Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_host_delete E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags = 4
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_evpn_remote corresponds to the value flag_evpn_remote of Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags
	Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_evpn_remote E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags = 5
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_evpn_remote_immutable corresponds to the value flag_evpn_remote_immutable of Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags
	Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_evpn_remote_immutable E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags = 6
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_max corresponds to the value flag_max of Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags
	Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags_flag_max E_Cisco_IOS_XRIpv4ArpOper_IpArpBagFlags = 7
)

// E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia. An additional value named
// Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia.
func (E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia.
func (e E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia
	Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia_UNSET E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia = 0
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia_media_arpa corresponds to the value media_arpa of Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia
	Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia_media_arpa E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia = 1
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia_media_srp corresponds to the value media_srp of Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia
	Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia_media_srp E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia = 2
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia_media_unknown corresponds to the value media_unknown of Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia
	Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia_media_unknown E_Cisco_IOS_XRIpv4ArpOper_IpArpBagMedia = 3
)

// E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_IpArpBagState. An additional value named
// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_IpArpBagState implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_IpArpBagState can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_IpArpBagState.
func (E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState.
func (e E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_UNSET E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 0
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_none corresponds to the value state_none of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_none E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 1
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_interface corresponds to the value state_interface of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_interface E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 2
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_standby corresponds to the value state_standby of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_standby E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 3
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_static corresponds to the value state_static of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_static E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 4
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_alias corresponds to the value state_alias of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_alias E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 5
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_mobile corresponds to the value state_mobile of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_mobile E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 6
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_incomplete corresponds to the value state_incomplete of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_incomplete E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 7
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_deleted corresponds to the value state_deleted of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_deleted E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 8
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_dynamic corresponds to the value state_dynamic of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_dynamic E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 9
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_probe corresponds to the value state_probe of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_probe E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 10
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_purge_delayed corresponds to the value state_purge_delayed of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_purge_delayed E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 11
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_dhcp corresponds to the value state_dhcp of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_dhcp E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 12
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_vxlan corresponds to the value state_vxlan of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_vxlan E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 13
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_evpn_sync corresponds to the value state_evpn_sync of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_evpn_sync E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 14
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_sat corresponds to the value state_sat of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_sat E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 15
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_r_sync corresponds to the value state_r_sync of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_r_sync E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 16
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_drop_adj corresponds to the value state_drop_adj of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_drop_adj E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 17
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_stale corresponds to the value state_stale of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_stale E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 18
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_evpn_remote corresponds to the value state_evpn_remote of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_evpn_remote E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 19
	// Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_max corresponds to the value state_max of Cisco_IOS_XRIpv4ArpOper_IpArpBagState
	Cisco_IOS_XRIpv4ArpOper_IpArpBagState_state_max E_Cisco_IOS_XRIpv4ArpOper_IpArpBagState = 20
)

// E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState. An additional value named
// Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState.
func (E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState.
func (e E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState")
}

const (
	// Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState
	Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_UNSET E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState = 0
	// Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_unknown corresponds to the value unknown of Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState
	Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_unknown E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState = 1
	// Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_not_tracked corresponds to the value not_tracked of Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState
	Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_not_tracked E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState = 2
	// Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_bfd_sess_up corresponds to the value bfd_sess_up of Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState
	Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_bfd_sess_up E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState = 3
	// Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_bfd_sess_down corresponds to the value bfd_sess_down of Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState
	Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_bfd_sess_down E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState = 4
	// Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_pending corresponds to the value pending of Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState
	Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState_pending E_Cisco_IOS_XRIpv4ArpOper_IpArpHostTrackState = 5
)

// E_Cisco_IOS_XRIpv4IoOper_ImStateEnum is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4IoOper_ImStateEnum. An additional value named
// Cisco_IOS_XRIpv4IoOper_ImStateEnum_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4IoOper_ImStateEnum int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4IoOper_ImStateEnum implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4IoOper_ImStateEnum can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4IoOper_ImStateEnum) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4IoOper_ImStateEnum.
func (E_Cisco_IOS_XRIpv4IoOper_ImStateEnum) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4IoOper_ImStateEnum.
func (e E_Cisco_IOS_XRIpv4IoOper_ImStateEnum) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4IoOper_ImStateEnum")
}

const (
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_UNSET E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 0
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_not_ready corresponds to the value im_state_not_ready of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_not_ready E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 1
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_admin_down corresponds to the value im_state_admin_down of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_admin_down E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 2
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_down corresponds to the value im_state_down of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_down E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 3
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_up corresponds to the value im_state_up of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_up E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 4
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_shutdown corresponds to the value im_state_shutdown of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_shutdown E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 5
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_err_disable corresponds to the value im_state_err_disable of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_err_disable E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 6
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_down_immediate corresponds to the value im_state_down_immediate of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_down_immediate E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 7
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_down_immediate_admin corresponds to the value im_state_down_immediate_admin of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_down_immediate_admin E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 8
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_down_graceful corresponds to the value im_state_down_graceful of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_down_graceful E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 9
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_begin_shutdown corresponds to the value im_state_begin_shutdown of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_begin_shutdown E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 10
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_end_shutdown corresponds to the value im_state_end_shutdown of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_end_shutdown E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 11
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_begin_error_disable corresponds to the value im_state_begin_error_disable of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_begin_error_disable E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 12
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_end_error_disable corresponds to the value im_state_end_error_disable of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_end_error_disable E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 13
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_begin_down_graceful corresponds to the value im_state_begin_down_graceful of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_begin_down_graceful E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 14
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_reset corresponds to the value im_state_reset of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_reset E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 15
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_operational corresponds to the value im_state_operational of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_operational E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 16
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_not_operational corresponds to the value im_state_not_operational of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_not_operational E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 17
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_unknown corresponds to the value im_state_unknown of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_unknown E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 18
	// Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_last corresponds to the value im_state_last of Cisco_IOS_XRIpv4IoOper_ImStateEnum
	Cisco_IOS_XRIpv4IoOper_ImStateEnum_im_state_last E_Cisco_IOS_XRIpv4IoOper_ImStateEnum = 19
)

// E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig. An additional value named
// Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig.
func (E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig.
func (e E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig")
}

const (
	// Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig
	Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig_UNSET E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig = 0
	// Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig_ipv4_ma_oper_client_none corresponds to the value ipv4_ma_oper_client_none of Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig
	Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig_ipv4_ma_oper_client_none E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig = 1
	// Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig_ipv4_ma_oper_non_oc_client corresponds to the value ipv4_ma_oper_non_oc_client of Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig
	Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig_ipv4_ma_oper_non_oc_client E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig = 2
	// Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig_ipv4_ma_oper_oc_client corresponds to the value ipv4_ma_oper_oc_client of Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig
	Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig_ipv4_ma_oper_oc_client E_Cisco_IOS_XRIpv4IoOper_Ipv4MaOperConfig = 3
)

// E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4IoOper_Ipv4MaState. An additional value named
// Cisco_IOS_XRIpv4IoOper_Ipv4MaState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4IoOper_Ipv4MaState implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4IoOper_Ipv4MaState can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4IoOper_Ipv4MaState.
func (E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState.
func (e E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState")
}

const (
	// Cisco_IOS_XRIpv4IoOper_Ipv4MaState_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4IoOper_Ipv4MaState
	Cisco_IOS_XRIpv4IoOper_Ipv4MaState_UNSET E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState = 0
	// Cisco_IOS_XRIpv4IoOper_Ipv4MaState_unknown corresponds to the value unknown of Cisco_IOS_XRIpv4IoOper_Ipv4MaState
	Cisco_IOS_XRIpv4IoOper_Ipv4MaState_unknown E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState = 1
	// Cisco_IOS_XRIpv4IoOper_Ipv4MaState_shutdown corresponds to the value shutdown of Cisco_IOS_XRIpv4IoOper_Ipv4MaState
	Cisco_IOS_XRIpv4IoOper_Ipv4MaState_shutdown E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState = 2
	// Cisco_IOS_XRIpv4IoOper_Ipv4MaState_down corresponds to the value down of Cisco_IOS_XRIpv4IoOper_Ipv4MaState
	Cisco_IOS_XRIpv4IoOper_Ipv4MaState_down E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState = 3
	// Cisco_IOS_XRIpv4IoOper_Ipv4MaState_up corresponds to the value up of Cisco_IOS_XRIpv4IoOper_Ipv4MaState
	Cisco_IOS_XRIpv4IoOper_Ipv4MaState_up E_Cisco_IOS_XRIpv4IoOper_Ipv4MaState = 4
)

// E_Cisco_IOS_XRIpv4IoOper_RpfMode is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv4IoOper_RpfMode. An additional value named
// Cisco_IOS_XRIpv4IoOper_RpfMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv4IoOper_RpfMode int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv4IoOper_RpfMode implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv4IoOper_RpfMode can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv4IoOper_RpfMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv4IoOper_RpfMode.
func (E_Cisco_IOS_XRIpv4IoOper_RpfMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv4IoOper_RpfMode.
func (e E_Cisco_IOS_XRIpv4IoOper_RpfMode) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv4IoOper_RpfMode")
}

const (
	// Cisco_IOS_XRIpv4IoOper_RpfMode_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv4IoOper_RpfMode
	Cisco_IOS_XRIpv4IoOper_RpfMode_UNSET E_Cisco_IOS_XRIpv4IoOper_RpfMode = 0
	// Cisco_IOS_XRIpv4IoOper_RpfMode_strict corresponds to the value strict of Cisco_IOS_XRIpv4IoOper_RpfMode
	Cisco_IOS_XRIpv4IoOper_RpfMode_strict E_Cisco_IOS_XRIpv4IoOper_RpfMode = 1
	// Cisco_IOS_XRIpv4IoOper_RpfMode_loose corresponds to the value loose of Cisco_IOS_XRIpv4IoOper_RpfMode
	Cisco_IOS_XRIpv4IoOper_RpfMode_loose E_Cisco_IOS_XRIpv4IoOper_RpfMode = 2
)

// E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState. An additional value named
// Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState.
func (e E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState")
}

const (
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState_UNSET E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState = 0
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState_run corresponds to the value run of Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState_run E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState = 1
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState_error corresponds to the value error of Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState_error E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState = 2
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState_wait corresponds to the value wait of Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState_wait E_Cisco_IOS_XRIpv6NdOper_Ipv6NdBndlState = 3
)

// E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap. An additional value named
// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap.
func (e E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap")
}

const (
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_UNSET E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 0
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_none corresponds to the value none of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_none E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 1
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_arpa corresponds to the value arpa of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_arpa E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 2
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_snap corresponds to the value snap of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_snap E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 3
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_ieee802_1q corresponds to the value ieee802_1q of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_ieee802_1q E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 4
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_srp corresponds to the value srp of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_srp E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 5
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_srpa corresponds to the value srpa of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_srpa E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 6
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_srpb corresponds to the value srpb of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_srpb E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 7
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_ppp corresponds to the value ppp of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_ppp E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 8
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_hdlc corresponds to the value hdlc of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_hdlc E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 9
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_chdlc corresponds to the value chdlc of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_chdlc E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 10
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_dot1q corresponds to the value dot1q of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_dot1q E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 11
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_fr corresponds to the value fr of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_fr E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 12
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_gre corresponds to the value gre of Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap
	Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap_gre E_Cisco_IOS_XRIpv6NdOper_Ipv6NdMediaEncap = 13
)

// E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin. An additional value named
// Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin.
func (e E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin")
}

const (
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin
	Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin_UNSET E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin = 0
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin_other corresponds to the value other of Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin
	Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin_other E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin = 1
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin_static corresponds to the value static of Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin
	Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin_static E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin = 2
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin_dynamic corresponds to the value dynamic of Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin
	Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin_dynamic E_Cisco_IOS_XRIpv6NdOper_Ipv6NdNeighborOrigin = 3
)

// E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv6NdOper_Ipv6NdShState. An additional value named
// Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdShState implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdShState can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv6NdOper_Ipv6NdShState.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState.
func (e E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState")
}

const (
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv6NdOper_Ipv6NdShState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_UNSET E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState = 0
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_incomplete corresponds to the value incomplete of Cisco_IOS_XRIpv6NdOper_Ipv6NdShState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_incomplete E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState = 1
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_reachable corresponds to the value reachable of Cisco_IOS_XRIpv6NdOper_Ipv6NdShState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_reachable E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState = 2
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_stale corresponds to the value stale of Cisco_IOS_XRIpv6NdOper_Ipv6NdShState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_stale E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState = 3
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_glean corresponds to the value glean of Cisco_IOS_XRIpv6NdOper_Ipv6NdShState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_glean E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState = 4
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_delay corresponds to the value delay of Cisco_IOS_XRIpv6NdOper_Ipv6NdShState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_delay E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState = 5
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_probe corresponds to the value probe of Cisco_IOS_XRIpv6NdOper_Ipv6NdShState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_probe E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState = 6
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_delete corresponds to the value delete of Cisco_IOS_XRIpv6NdOper_Ipv6NdShState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShState_delete E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShState = 7
)

// E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags. An additional value named
// Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags.
func (e E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags")
}

const (
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags_UNSET E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags = 0
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags_no_flags corresponds to the value no_flags of Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags_no_flags E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags = 1
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags_final_ra corresponds to the value final_ra of Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags_final_ra E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrFlags = 2
)

// E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState is a derived int64 type which is used to represent
// the enumerated node Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState. An additional value named
// Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState int64

// IsYANGGoEnum ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState implements the yang.GoEnum
// interface. This ensures that Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState can be identified as a
// mapped type for a YANG enumeration.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState.
func (E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

// String returns a logging-friendly string for E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState.
func (e E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState) String() string {
	return ygot.EnumLogString(e, int64(e), "E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState")
}

const (
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState_UNSET corresponds to the value UNSET of Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState_UNSET E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState = 0
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState_deleted corresponds to the value deleted of Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState_deleted E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState = 1
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState_standby corresponds to the value standby of Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState_standby E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState = 2
	// Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState_active corresponds to the value active of Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState
	Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState_active E_Cisco_IOS_XRIpv6NdOper_Ipv6NdShVrState = 3
)
