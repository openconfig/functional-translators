/*
Package openconfig is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was false
in this case).

This package was generated by /usr/local/google/home/singhavnish/go/pkg/mod/github.com/openconfig/ygot@v0.33.0/genutil/names.go
using the following YANG input files:
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/platform/openconfig-platform-common.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-pipeline-counters.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/types/openconfig-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/...
*/
package openconfig

import (
	"fmt"
	"reflect"

	"github.com/openconfig/ygot/ygot"
	"github.com/openconfig/ygot/ytypes"
)

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/drop/queueing-block YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock struct {
	ΛMetadata []ygot.Annotation                                                                                    `path:"@" ygotAnnotation:"true"`
	State     *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State `path:"state" module:"openconfig-platform-pipeline-counters"`
	ΛState    []ygot.Annotation                                                                                    `path:"@state" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock) IsYANGGoStruct() {
}

// GetOrCreateState retrieves the value of the State field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock) GetOrCreateState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State {
	if t.State != nil {
		return t.State
	}
	t.State = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State{}
	return t.State
}

// GetState returns the value of the State struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock. If the receiver or the field State is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock) GetState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State {
	if t != nil && t.State != nil {
		return t.State
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/drop/queueing-block/state YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State struct {
	ΛMetadata         []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	IncorrectState    *uint64           `path:"incorrect-state" module:"openconfig-platform-pipeline-counters"`
	ΛIncorrectState   []ygot.Annotation `path:"@incorrect-state" ygotAnnotation:"true"`
	LookupQueue       *uint64           `path:"lookup-queue" module:"openconfig-platform-pipeline-counters"`
	ΛLookupQueue      []ygot.Annotation `path:"@lookup-queue" ygotAnnotation:"true"`
	MemoryLimit       *uint64           `path:"memory-limit" module:"openconfig-platform-pipeline-counters"`
	ΛMemoryLimit      []ygot.Annotation `path:"@memory-limit" ygotAnnotation:"true"`
	Oversubscription  *uint64           `path:"oversubscription" module:"openconfig-platform-pipeline-counters"`
	ΛOversubscription []ygot.Annotation `path:"@oversubscription" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_QueueingBlock_State) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_State represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/drop/state YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_State struct {
	ΛMetadata                  []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	AdverseAggregate           *uint64           `path:"adverse-aggregate" module:"openconfig-platform-pipeline-counters"`
	ΛAdverseAggregate          []ygot.Annotation `path:"@adverse-aggregate" ygotAnnotation:"true"`
	CongestionAggregate        *uint64           `path:"congestion-aggregate" module:"openconfig-platform-pipeline-counters"`
	ΛCongestionAggregate       []ygot.Annotation `path:"@congestion-aggregate" ygotAnnotation:"true"`
	NoRoute                    *uint64           `path:"no-route" module:"openconfig-platform-pipeline-counters"`
	ΛNoRoute                   []ygot.Annotation `path:"@no-route" ygotAnnotation:"true"`
	PacketProcessingAggregate  *uint64           `path:"packet-processing-aggregate" module:"openconfig-platform-pipeline-counters"`
	ΛPacketProcessingAggregate []ygot.Annotation `path:"@packet-processing-aggregate" ygotAnnotation:"true"`
	UrpfAggregate              *uint64           `path:"urpf-aggregate" module:"openconfig-platform-pipeline-counters"`
	ΛUrpfAggregate             []ygot.Annotation `path:"@urpf-aggregate" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_State implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_State) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_State) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_State"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_State) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_State) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_State.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_State) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_Vendor represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/drop/vendor YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_Vendor struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_Vendor implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_Vendor) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_Vendor) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_Vendor"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_Vendor) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_Vendor) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_Vendor.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Drop_Vendor) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors struct {
	ΛMetadata           []ygot.Annotation                                                                                     `path:"@" ygotAnnotation:"true"`
	FabricBlock         *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock        `path:"fabric-block" module:"openconfig-platform-pipeline-counters"`
	ΛFabricBlock        []ygot.Annotation                                                                                     `path:"@fabric-block" ygotAnnotation:"true"`
	HostInterfaceBlock  *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock `path:"host-interface-block" module:"openconfig-platform-pipeline-counters"`
	ΛHostInterfaceBlock []ygot.Annotation                                                                                     `path:"@host-interface-block" ygotAnnotation:"true"`
	InterfaceBlock      *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock     `path:"interface-block" module:"openconfig-platform-pipeline-counters"`
	ΛInterfaceBlock     []ygot.Annotation                                                                                     `path:"@interface-block" ygotAnnotation:"true"`
	LookupBlock         *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock        `path:"lookup-block" module:"openconfig-platform-pipeline-counters"`
	ΛLookupBlock        []ygot.Annotation                                                                                     `path:"@lookup-block" ygotAnnotation:"true"`
	QueueingBlock       *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock      `path:"queueing-block" module:"openconfig-platform-pipeline-counters"`
	ΛQueueingBlock      []ygot.Annotation                                                                                     `path:"@queueing-block" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) IsYANGGoStruct() {
}

// GetOrCreateFabricBlock retrieves the value of the FabricBlock field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) GetOrCreateFabricBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock {
	if t.FabricBlock != nil {
		return t.FabricBlock
	}
	t.FabricBlock = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock{}
	return t.FabricBlock
}

// GetOrCreateHostInterfaceBlock retrieves the value of the HostInterfaceBlock field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) GetOrCreateHostInterfaceBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock {
	if t.HostInterfaceBlock != nil {
		return t.HostInterfaceBlock
	}
	t.HostInterfaceBlock = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock{}
	return t.HostInterfaceBlock
}

// GetOrCreateInterfaceBlock retrieves the value of the InterfaceBlock field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) GetOrCreateInterfaceBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock {
	if t.InterfaceBlock != nil {
		return t.InterfaceBlock
	}
	t.InterfaceBlock = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock{}
	return t.InterfaceBlock
}

// GetOrCreateLookupBlock retrieves the value of the LookupBlock field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) GetOrCreateLookupBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock {
	if t.LookupBlock != nil {
		return t.LookupBlock
	}
	t.LookupBlock = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock{}
	return t.LookupBlock
}

// GetOrCreateQueueingBlock retrieves the value of the QueueingBlock field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) GetOrCreateQueueingBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock {
	if t.QueueingBlock != nil {
		return t.QueueingBlock
	}
	t.QueueingBlock = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock{}
	return t.QueueingBlock
}

// GetFabricBlock returns the value of the FabricBlock struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors. If the receiver or the field FabricBlock is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) GetFabricBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock {
	if t != nil && t.FabricBlock != nil {
		return t.FabricBlock
	}
	return nil
}

// GetHostInterfaceBlock returns the value of the HostInterfaceBlock struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors. If the receiver or the field HostInterfaceBlock is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) GetHostInterfaceBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock {
	if t != nil && t.HostInterfaceBlock != nil {
		return t.HostInterfaceBlock
	}
	return nil
}

// GetInterfaceBlock returns the value of the InterfaceBlock struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors. If the receiver or the field InterfaceBlock is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) GetInterfaceBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock {
	if t != nil && t.InterfaceBlock != nil {
		return t.InterfaceBlock
	}
	return nil
}

// GetLookupBlock returns the value of the LookupBlock struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors. If the receiver or the field LookupBlock is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) GetLookupBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock {
	if t != nil && t.LookupBlock != nil {
		return t.LookupBlock
	}
	return nil
}

// GetQueueingBlock returns the value of the QueueingBlock struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors. If the receiver or the field QueueingBlock is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) GetQueueingBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock {
	if t != nil && t.QueueingBlock != nil {
		return t.QueueingBlock
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/fabric-block YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock struct {
	ΛMetadata         []ygot.Annotation                                                                                                          `path:"@" ygotAnnotation:"true"`
	FabricBlockError  map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError `path:"fabric-block-error" module:"openconfig-platform-pipeline-counters"`
	ΛFabricBlockError []ygot.Annotation                                                                                                          `path:"@fabric-block-error" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) IsYANGGoStruct() {
}

// NewFabricBlockError creates a new entry in the FabricBlockError list of the
// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock struct. The keys of the list are populated from the input
// arguments.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) NewFabricBlockError(Name string) (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FabricBlockError == nil {
		t.FabricBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError)
	}

	key := Name

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.FabricBlockError[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list FabricBlockError", key)
	}

	t.FabricBlockError[key] = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError{
		Name: &Name,
	}

	return t.FabricBlockError[key], nil
}

// RenameFabricBlockError renames an entry in the list FabricBlockError within
// the OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) RenameFabricBlockError(oldK, newK string) error {
	if _, ok := t.FabricBlockError[newK]; ok {
		return fmt.Errorf("key %v already exists in FabricBlockError", newK)
	}

	e, ok := t.FabricBlockError[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in FabricBlockError", oldK)
	}
	e.Name = &newK

	t.FabricBlockError[newK] = e
	delete(t.FabricBlockError, oldK)
	return nil
}

// GetOrCreateFabricBlockErrorMap returns the list (map) from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock.
//
// It initializes the field if not already initialized.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) GetOrCreateFabricBlockErrorMap() map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError {
	if t.FabricBlockError == nil {
		t.FabricBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError)
	}
	return t.FabricBlockError
}

// GetOrCreateFabricBlockError retrieves the value with the specified keys from
// the receiver OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) GetOrCreateFabricBlockError(Name string) *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError {

	key := Name

	if v, ok := t.FabricBlockError[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewFabricBlockError(Name)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateFabricBlockError got unexpected error: %v", err))
	}
	return v
}

// GetFabricBlockError retrieves the value with the specified key from
// the FabricBlockError map field of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) GetFabricBlockError(Name string) *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError {

	if t == nil {
		return nil
	}

	key := Name

	if lm, ok := t.FabricBlockError[key]; ok {
		return lm
	}
	return nil
}

// DeleteFabricBlockError deletes the value with the specified keys from
// the receiver OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock. If there is no such element, the function
// is a no-op.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) DeleteFabricBlockError(Name string) {
	key := Name

	delete(t.FabricBlockError, key)
}

// AppendFabricBlockError appends the supplied OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError struct to the
// list FabricBlockError of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock. If the key value(s) specified in
// the supplied OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError already exist in the list, an error is
// returned.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) AppendFabricBlockError(v *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError) error {
	if v.Name == nil {
		return fmt.Errorf("invalid nil key received for Name")
	}

	key := *v.Name

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FabricBlockError == nil {
		t.FabricBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError)
	}

	if _, ok := t.FabricBlockError[key]; ok {
		return fmt.Errorf("duplicate key for list FabricBlockError %v", key)
	}

	t.FabricBlockError[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/fabric-block/fabric-block-error YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError struct {
	ΛMetadata []ygot.Annotation                                                                                                     `path:"@" ygotAnnotation:"true"`
	Name      *string                                                                                                               `path:"name" module:"openconfig-platform-pipeline-counters"`
	ΛName     []ygot.Annotation                                                                                                     `path:"@name" ygotAnnotation:"true"`
	State     *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State `path:"state" module:"openconfig-platform-pipeline-counters"`
	ΛState    []ygot.Annotation                                                                                                     `path:"@state" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError) IsYANGGoStruct() {
}

// GetOrCreateState retrieves the value of the State field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError) GetOrCreateState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State {
	if t.State != nil {
		return t.State
	}
	t.State = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State{}
	return t.State
}

// GetState returns the value of the State struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError. If the receiver or the field State is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError) GetState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State {
	if t != nil && t.State != nil {
		return t.State
	}
	return nil
}

// ΛListKeyMap returns the keys of the OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError struct, which is a YANG list entry.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError) ΛListKeyMap() (map[string]interface{}, error) {
	if t.Name == nil {
		return nil, fmt.Errorf("nil value for key Name")
	}

	return map[string]interface{}{
		"name": *t.Name,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/fabric-block/fabric-block-error/state YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State struct {
	ΛMetadata  []ygot.Annotation                                                                                                               `path:"@" ygotAnnotation:"true"`
	Action     []E_OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State_Action `path:"action" module:"openconfig-platform-pipeline-counters"`
	ΛAction    []ygot.Annotation                                                                                                               `path:"@action" ygotAnnotation:"true"`
	Active     *bool                                                                                                                           `path:"active" module:"openconfig-platform-pipeline-counters"`
	ΛActive    []ygot.Annotation                                                                                                               `path:"@active" ygotAnnotation:"true"`
	Count      *uint64                                                                                                                         `path:"count" module:"openconfig-platform-pipeline-counters"`
	ΛCount     []ygot.Annotation                                                                                                               `path:"@count" ygotAnnotation:"true"`
	Level      E_OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State_Level    `path:"level" module:"openconfig-platform-pipeline-counters"`
	ΛLevel     []ygot.Annotation                                                                                                               `path:"@level" ygotAnnotation:"true"`
	Name       *string                                                                                                                         `path:"name" module:"openconfig-platform-pipeline-counters"`
	ΛName      []ygot.Annotation                                                                                                               `path:"@name" ygotAnnotation:"true"`
	Threshold  *uint64                                                                                                                         `path:"threshold" module:"openconfig-platform-pipeline-counters"`
	ΛThreshold []ygot.Annotation                                                                                                               `path:"@threshold" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/host-interface-block YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock struct {
	ΛMetadata           []ygot.Annotation                                                                                                                   `path:"@" ygotAnnotation:"true"`
	HostInterfaceError  map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError `path:"host-interface-error" module:"openconfig-platform-pipeline-counters"`
	ΛHostInterfaceError []ygot.Annotation                                                                                                                   `path:"@host-interface-error" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) IsYANGGoStruct() {
}

// NewHostInterfaceError creates a new entry in the HostInterfaceError list of the
// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock struct. The keys of the list are populated from the input
// arguments.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) NewHostInterfaceError(Name string) (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.HostInterfaceError == nil {
		t.HostInterfaceError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError)
	}

	key := Name

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.HostInterfaceError[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list HostInterfaceError", key)
	}

	t.HostInterfaceError[key] = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError{
		Name: &Name,
	}

	return t.HostInterfaceError[key], nil
}

// RenameHostInterfaceError renames an entry in the list HostInterfaceError within
// the OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) RenameHostInterfaceError(oldK, newK string) error {
	if _, ok := t.HostInterfaceError[newK]; ok {
		return fmt.Errorf("key %v already exists in HostInterfaceError", newK)
	}

	e, ok := t.HostInterfaceError[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in HostInterfaceError", oldK)
	}
	e.Name = &newK

	t.HostInterfaceError[newK] = e
	delete(t.HostInterfaceError, oldK)
	return nil
}

// GetOrCreateHostInterfaceErrorMap returns the list (map) from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock.
//
// It initializes the field if not already initialized.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) GetOrCreateHostInterfaceErrorMap() map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError {
	if t.HostInterfaceError == nil {
		t.HostInterfaceError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError)
	}
	return t.HostInterfaceError
}

// GetOrCreateHostInterfaceError retrieves the value with the specified keys from
// the receiver OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) GetOrCreateHostInterfaceError(Name string) *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError {

	key := Name

	if v, ok := t.HostInterfaceError[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewHostInterfaceError(Name)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateHostInterfaceError got unexpected error: %v", err))
	}
	return v
}

// GetHostInterfaceError retrieves the value with the specified key from
// the HostInterfaceError map field of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) GetHostInterfaceError(Name string) *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError {

	if t == nil {
		return nil
	}

	key := Name

	if lm, ok := t.HostInterfaceError[key]; ok {
		return lm
	}
	return nil
}

// DeleteHostInterfaceError deletes the value with the specified keys from
// the receiver OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock. If there is no such element, the function
// is a no-op.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) DeleteHostInterfaceError(Name string) {
	key := Name

	delete(t.HostInterfaceError, key)
}

// AppendHostInterfaceError appends the supplied OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError struct to the
// list HostInterfaceError of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock. If the key value(s) specified in
// the supplied OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError already exist in the list, an error is
// returned.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) AppendHostInterfaceError(v *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError) error {
	if v.Name == nil {
		return fmt.Errorf("invalid nil key received for Name")
	}

	key := *v.Name

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.HostInterfaceError == nil {
		t.HostInterfaceError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError)
	}

	if _, ok := t.HostInterfaceError[key]; ok {
		return fmt.Errorf("duplicate key for list HostInterfaceError %v", key)
	}

	t.HostInterfaceError[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/host-interface-block/host-interface-error YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError struct {
	ΛMetadata []ygot.Annotation                                                                                                              `path:"@" ygotAnnotation:"true"`
	Name      *string                                                                                                                        `path:"name" module:"openconfig-platform-pipeline-counters"`
	ΛName     []ygot.Annotation                                                                                                              `path:"@name" ygotAnnotation:"true"`
	State     *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State `path:"state" module:"openconfig-platform-pipeline-counters"`
	ΛState    []ygot.Annotation                                                                                                              `path:"@state" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError) IsYANGGoStruct() {
}

// GetOrCreateState retrieves the value of the State field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError) GetOrCreateState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State {
	if t.State != nil {
		return t.State
	}
	t.State = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State{}
	return t.State
}

// GetState returns the value of the State struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError. If the receiver or the field State is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError) GetState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State {
	if t != nil && t.State != nil {
		return t.State
	}
	return nil
}

// ΛListKeyMap returns the keys of the OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError struct, which is a YANG list entry.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError) ΛListKeyMap() (map[string]interface{}, error) {
	if t.Name == nil {
		return nil, fmt.Errorf("nil value for key Name")
	}

	return map[string]interface{}{
		"name": *t.Name,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/host-interface-block/host-interface-error/state YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State struct {
	ΛMetadata  []ygot.Annotation                                                                                                               `path:"@" ygotAnnotation:"true"`
	Action     []E_OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State_Action `path:"action" module:"openconfig-platform-pipeline-counters"`
	ΛAction    []ygot.Annotation                                                                                                               `path:"@action" ygotAnnotation:"true"`
	Active     *bool                                                                                                                           `path:"active" module:"openconfig-platform-pipeline-counters"`
	ΛActive    []ygot.Annotation                                                                                                               `path:"@active" ygotAnnotation:"true"`
	Count      *uint64                                                                                                                         `path:"count" module:"openconfig-platform-pipeline-counters"`
	ΛCount     []ygot.Annotation                                                                                                               `path:"@count" ygotAnnotation:"true"`
	Level      E_OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State_Level    `path:"level" module:"openconfig-platform-pipeline-counters"`
	ΛLevel     []ygot.Annotation                                                                                                               `path:"@level" ygotAnnotation:"true"`
	Name       *string                                                                                                                         `path:"name" module:"openconfig-platform-pipeline-counters"`
	ΛName      []ygot.Annotation                                                                                                               `path:"@name" ygotAnnotation:"true"`
	Threshold  *uint64                                                                                                                         `path:"threshold" module:"openconfig-platform-pipeline-counters"`
	ΛThreshold []ygot.Annotation                                                                                                               `path:"@threshold" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_HostInterfaceBlock_HostInterfaceError_State) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/interface-block YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock struct {
	ΛMetadata            []ygot.Annotation                                                                                                                `path:"@" ygotAnnotation:"true"`
	InterfaceBlockError  map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError `path:"interface-block-error" module:"openconfig-platform-pipeline-counters"`
	ΛInterfaceBlockError []ygot.Annotation                                                                                                                `path:"@interface-block-error" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) IsYANGGoStruct() {
}

// NewInterfaceBlockError creates a new entry in the InterfaceBlockError list of the
// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock struct. The keys of the list are populated from the input
// arguments.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) NewInterfaceBlockError(Name string) (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.InterfaceBlockError == nil {
		t.InterfaceBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError)
	}

	key := Name

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.InterfaceBlockError[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list InterfaceBlockError", key)
	}

	t.InterfaceBlockError[key] = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError{
		Name: &Name,
	}

	return t.InterfaceBlockError[key], nil
}

// RenameInterfaceBlockError renames an entry in the list InterfaceBlockError within
// the OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) RenameInterfaceBlockError(oldK, newK string) error {
	if _, ok := t.InterfaceBlockError[newK]; ok {
		return fmt.Errorf("key %v already exists in InterfaceBlockError", newK)
	}

	e, ok := t.InterfaceBlockError[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in InterfaceBlockError", oldK)
	}
	e.Name = &newK

	t.InterfaceBlockError[newK] = e
	delete(t.InterfaceBlockError, oldK)
	return nil
}

// GetOrCreateInterfaceBlockErrorMap returns the list (map) from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock.
//
// It initializes the field if not already initialized.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) GetOrCreateInterfaceBlockErrorMap() map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError {
	if t.InterfaceBlockError == nil {
		t.InterfaceBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError)
	}
	return t.InterfaceBlockError
}

// GetOrCreateInterfaceBlockError retrieves the value with the specified keys from
// the receiver OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) GetOrCreateInterfaceBlockError(Name string) *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError {

	key := Name

	if v, ok := t.InterfaceBlockError[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewInterfaceBlockError(Name)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateInterfaceBlockError got unexpected error: %v", err))
	}
	return v
}

// GetInterfaceBlockError retrieves the value with the specified key from
// the InterfaceBlockError map field of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) GetInterfaceBlockError(Name string) *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError {

	if t == nil {
		return nil
	}

	key := Name

	if lm, ok := t.InterfaceBlockError[key]; ok {
		return lm
	}
	return nil
}

// DeleteInterfaceBlockError deletes the value with the specified keys from
// the receiver OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock. If there is no such element, the function
// is a no-op.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) DeleteInterfaceBlockError(Name string) {
	key := Name

	delete(t.InterfaceBlockError, key)
}

// AppendInterfaceBlockError appends the supplied OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError struct to the
// list InterfaceBlockError of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock. If the key value(s) specified in
// the supplied OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError already exist in the list, an error is
// returned.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) AppendInterfaceBlockError(v *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError) error {
	if v.Name == nil {
		return fmt.Errorf("invalid nil key received for Name")
	}

	key := *v.Name

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.InterfaceBlockError == nil {
		t.InterfaceBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError)
	}

	if _, ok := t.InterfaceBlockError[key]; ok {
		return fmt.Errorf("duplicate key for list InterfaceBlockError %v", key)
	}

	t.InterfaceBlockError[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/interface-block/interface-block-error YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError struct {
	ΛMetadata []ygot.Annotation                                                                                                           `path:"@" ygotAnnotation:"true"`
	Name      *string                                                                                                                     `path:"name" module:"openconfig-platform-pipeline-counters"`
	ΛName     []ygot.Annotation                                                                                                           `path:"@name" ygotAnnotation:"true"`
	State     *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State `path:"state" module:"openconfig-platform-pipeline-counters"`
	ΛState    []ygot.Annotation                                                                                                           `path:"@state" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError) IsYANGGoStruct() {
}

// GetOrCreateState retrieves the value of the State field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError) GetOrCreateState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State {
	if t.State != nil {
		return t.State
	}
	t.State = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State{}
	return t.State
}

// GetState returns the value of the State struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError. If the receiver or the field State is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError) GetState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State {
	if t != nil && t.State != nil {
		return t.State
	}
	return nil
}

// ΛListKeyMap returns the keys of the OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError struct, which is a YANG list entry.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError) ΛListKeyMap() (map[string]interface{}, error) {
	if t.Name == nil {
		return nil, fmt.Errorf("nil value for key Name")
	}

	return map[string]interface{}{
		"name": *t.Name,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/interface-block/interface-block-error/state YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State struct {
	ΛMetadata  []ygot.Annotation                                                                                                               `path:"@" ygotAnnotation:"true"`
	Action     []E_OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State_Action `path:"action" module:"openconfig-platform-pipeline-counters"`
	ΛAction    []ygot.Annotation                                                                                                               `path:"@action" ygotAnnotation:"true"`
	Active     *bool                                                                                                                           `path:"active" module:"openconfig-platform-pipeline-counters"`
	ΛActive    []ygot.Annotation                                                                                                               `path:"@active" ygotAnnotation:"true"`
	Count      *uint64                                                                                                                         `path:"count" module:"openconfig-platform-pipeline-counters"`
	ΛCount     []ygot.Annotation                                                                                                               `path:"@count" ygotAnnotation:"true"`
	Level      E_OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State_Level    `path:"level" module:"openconfig-platform-pipeline-counters"`
	ΛLevel     []ygot.Annotation                                                                                                               `path:"@level" ygotAnnotation:"true"`
	Name       *string                                                                                                                         `path:"name" module:"openconfig-platform-pipeline-counters"`
	ΛName      []ygot.Annotation                                                                                                               `path:"@name" ygotAnnotation:"true"`
	Threshold  *uint64                                                                                                                         `path:"threshold" module:"openconfig-platform-pipeline-counters"`
	ΛThreshold []ygot.Annotation                                                                                                               `path:"@threshold" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_InterfaceBlock_InterfaceBlockError_State) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/lookup-block YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock struct {
	ΛMetadata         []ygot.Annotation                                                                                                          `path:"@" ygotAnnotation:"true"`
	LookupBlockError  map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError `path:"lookup-block-error" module:"openconfig-platform-pipeline-counters"`
	ΛLookupBlockError []ygot.Annotation                                                                                                          `path:"@lookup-block-error" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) IsYANGGoStruct() {
}

// NewLookupBlockError creates a new entry in the LookupBlockError list of the
// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock struct. The keys of the list are populated from the input
// arguments.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) NewLookupBlockError(Name string) (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.LookupBlockError == nil {
		t.LookupBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError)
	}

	key := Name

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.LookupBlockError[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list LookupBlockError", key)
	}

	t.LookupBlockError[key] = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError{
		Name: &Name,
	}

	return t.LookupBlockError[key], nil
}

// RenameLookupBlockError renames an entry in the list LookupBlockError within
// the OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) RenameLookupBlockError(oldK, newK string) error {
	if _, ok := t.LookupBlockError[newK]; ok {
		return fmt.Errorf("key %v already exists in LookupBlockError", newK)
	}

	e, ok := t.LookupBlockError[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in LookupBlockError", oldK)
	}
	e.Name = &newK

	t.LookupBlockError[newK] = e
	delete(t.LookupBlockError, oldK)
	return nil
}

// GetOrCreateLookupBlockErrorMap returns the list (map) from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock.
//
// It initializes the field if not already initialized.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) GetOrCreateLookupBlockErrorMap() map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError {
	if t.LookupBlockError == nil {
		t.LookupBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError)
	}
	return t.LookupBlockError
}

// GetOrCreateLookupBlockError retrieves the value with the specified keys from
// the receiver OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) GetOrCreateLookupBlockError(Name string) *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError {

	key := Name

	if v, ok := t.LookupBlockError[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewLookupBlockError(Name)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateLookupBlockError got unexpected error: %v", err))
	}
	return v
}

// GetLookupBlockError retrieves the value with the specified key from
// the LookupBlockError map field of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) GetLookupBlockError(Name string) *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError {

	if t == nil {
		return nil
	}

	key := Name

	if lm, ok := t.LookupBlockError[key]; ok {
		return lm
	}
	return nil
}

// DeleteLookupBlockError deletes the value with the specified keys from
// the receiver OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock. If there is no such element, the function
// is a no-op.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) DeleteLookupBlockError(Name string) {
	key := Name

	delete(t.LookupBlockError, key)
}

// AppendLookupBlockError appends the supplied OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError struct to the
// list LookupBlockError of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock. If the key value(s) specified in
// the supplied OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError already exist in the list, an error is
// returned.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) AppendLookupBlockError(v *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError) error {
	if v.Name == nil {
		return fmt.Errorf("invalid nil key received for Name")
	}

	key := *v.Name

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.LookupBlockError == nil {
		t.LookupBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError)
	}

	if _, ok := t.LookupBlockError[key]; ok {
		return fmt.Errorf("duplicate key for list LookupBlockError %v", key)
	}

	t.LookupBlockError[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/lookup-block/lookup-block-error YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError struct {
	ΛMetadata []ygot.Annotation                                                                                                     `path:"@" ygotAnnotation:"true"`
	Name      *string                                                                                                               `path:"name" module:"openconfig-platform-pipeline-counters"`
	ΛName     []ygot.Annotation                                                                                                     `path:"@name" ygotAnnotation:"true"`
	State     *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State `path:"state" module:"openconfig-platform-pipeline-counters"`
	ΛState    []ygot.Annotation                                                                                                     `path:"@state" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError) IsYANGGoStruct() {
}

// GetOrCreateState retrieves the value of the State field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError) GetOrCreateState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State {
	if t.State != nil {
		return t.State
	}
	t.State = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State{}
	return t.State
}

// GetState returns the value of the State struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError. If the receiver or the field State is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError) GetState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State {
	if t != nil && t.State != nil {
		return t.State
	}
	return nil
}

// ΛListKeyMap returns the keys of the OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError struct, which is a YANG list entry.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError) ΛListKeyMap() (map[string]interface{}, error) {
	if t.Name == nil {
		return nil, fmt.Errorf("nil value for key Name")
	}

	return map[string]interface{}{
		"name": *t.Name,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/lookup-block/lookup-block-error/state YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State struct {
	ΛMetadata  []ygot.Annotation                                                                                                               `path:"@" ygotAnnotation:"true"`
	Action     []E_OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State_Action `path:"action" module:"openconfig-platform-pipeline-counters"`
	ΛAction    []ygot.Annotation                                                                                                               `path:"@action" ygotAnnotation:"true"`
	Active     *bool                                                                                                                           `path:"active" module:"openconfig-platform-pipeline-counters"`
	ΛActive    []ygot.Annotation                                                                                                               `path:"@active" ygotAnnotation:"true"`
	Count      *uint64                                                                                                                         `path:"count" module:"openconfig-platform-pipeline-counters"`
	ΛCount     []ygot.Annotation                                                                                                               `path:"@count" ygotAnnotation:"true"`
	Level      E_OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State_Level    `path:"level" module:"openconfig-platform-pipeline-counters"`
	ΛLevel     []ygot.Annotation                                                                                                               `path:"@level" ygotAnnotation:"true"`
	Name       *string                                                                                                                         `path:"name" module:"openconfig-platform-pipeline-counters"`
	ΛName      []ygot.Annotation                                                                                                               `path:"@name" ygotAnnotation:"true"`
	Threshold  *uint64                                                                                                                         `path:"threshold" module:"openconfig-platform-pipeline-counters"`
	ΛThreshold []ygot.Annotation                                                                                                               `path:"@threshold" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_LookupBlock_LookupBlockError_State) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/queueing-block YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock struct {
	ΛMetadata           []ygot.Annotation                                                                                                              `path:"@" ygotAnnotation:"true"`
	QueueingBlockError  map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError `path:"queueing-block-error" module:"openconfig-platform-pipeline-counters"`
	ΛQueueingBlockError []ygot.Annotation                                                                                                              `path:"@queueing-block-error" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) IsYANGGoStruct() {
}

// NewQueueingBlockError creates a new entry in the QueueingBlockError list of the
// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock struct. The keys of the list are populated from the input
// arguments.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) NewQueueingBlockError(Name string) (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.QueueingBlockError == nil {
		t.QueueingBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError)
	}

	key := Name

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.QueueingBlockError[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list QueueingBlockError", key)
	}

	t.QueueingBlockError[key] = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError{
		Name: &Name,
	}

	return t.QueueingBlockError[key], nil
}

// RenameQueueingBlockError renames an entry in the list QueueingBlockError within
// the OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) RenameQueueingBlockError(oldK, newK string) error {
	if _, ok := t.QueueingBlockError[newK]; ok {
		return fmt.Errorf("key %v already exists in QueueingBlockError", newK)
	}

	e, ok := t.QueueingBlockError[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in QueueingBlockError", oldK)
	}
	e.Name = &newK

	t.QueueingBlockError[newK] = e
	delete(t.QueueingBlockError, oldK)
	return nil
}

// GetOrCreateQueueingBlockErrorMap returns the list (map) from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock.
//
// It initializes the field if not already initialized.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) GetOrCreateQueueingBlockErrorMap() map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError {
	if t.QueueingBlockError == nil {
		t.QueueingBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError)
	}
	return t.QueueingBlockError
}

// GetOrCreateQueueingBlockError retrieves the value with the specified keys from
// the receiver OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) GetOrCreateQueueingBlockError(Name string) *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError {

	key := Name

	if v, ok := t.QueueingBlockError[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewQueueingBlockError(Name)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateQueueingBlockError got unexpected error: %v", err))
	}
	return v
}

// GetQueueingBlockError retrieves the value with the specified key from
// the QueueingBlockError map field of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) GetQueueingBlockError(Name string) *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError {

	if t == nil {
		return nil
	}

	key := Name

	if lm, ok := t.QueueingBlockError[key]; ok {
		return lm
	}
	return nil
}

// DeleteQueueingBlockError deletes the value with the specified keys from
// the receiver OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock. If there is no such element, the function
// is a no-op.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) DeleteQueueingBlockError(Name string) {
	key := Name

	delete(t.QueueingBlockError, key)
}

// AppendQueueingBlockError appends the supplied OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError struct to the
// list QueueingBlockError of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock. If the key value(s) specified in
// the supplied OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError already exist in the list, an error is
// returned.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) AppendQueueingBlockError(v *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError) error {
	if v.Name == nil {
		return fmt.Errorf("invalid nil key received for Name")
	}

	key := *v.Name

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.QueueingBlockError == nil {
		t.QueueingBlockError = make(map[string]*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError)
	}

	if _, ok := t.QueueingBlockError[key]; ok {
		return fmt.Errorf("duplicate key for list QueueingBlockError %v", key)
	}

	t.QueueingBlockError[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/queueing-block/queueing-block-error YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError struct {
	ΛMetadata []ygot.Annotation                                                                                                         `path:"@" ygotAnnotation:"true"`
	Name      *string                                                                                                                   `path:"name" module:"openconfig-platform-pipeline-counters"`
	ΛName     []ygot.Annotation                                                                                                         `path:"@name" ygotAnnotation:"true"`
	State     *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State `path:"state" module:"openconfig-platform-pipeline-counters"`
	ΛState    []ygot.Annotation                                                                                                         `path:"@state" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError) IsYANGGoStruct() {
}

// GetOrCreateState retrieves the value of the State field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError) GetOrCreateState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State {
	if t.State != nil {
		return t.State
	}
	t.State = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State{}
	return t.State
}

// GetState returns the value of the State struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError. If the receiver or the field State is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError) GetState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State {
	if t != nil && t.State != nil {
		return t.State
	}
	return nil
}

// ΛListKeyMap returns the keys of the OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError struct, which is a YANG list entry.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError) ΛListKeyMap() (map[string]interface{}, error) {
	if t.Name == nil {
		return nil, fmt.Errorf("nil value for key Name")
	}

	return map[string]interface{}{
		"name": *t.Name,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/errors/queueing-block/queueing-block-error/state YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State struct {
	ΛMetadata  []ygot.Annotation                                                                                                               `path:"@" ygotAnnotation:"true"`
	Action     []E_OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State_Action `path:"action" module:"openconfig-platform-pipeline-counters"`
	ΛAction    []ygot.Annotation                                                                                                               `path:"@action" ygotAnnotation:"true"`
	Active     *bool                                                                                                                           `path:"active" module:"openconfig-platform-pipeline-counters"`
	ΛActive    []ygot.Annotation                                                                                                               `path:"@active" ygotAnnotation:"true"`
	Count      *uint64                                                                                                                         `path:"count" module:"openconfig-platform-pipeline-counters"`
	ΛCount     []ygot.Annotation                                                                                                               `path:"@count" ygotAnnotation:"true"`
	Level      E_OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_FabricBlock_FabricBlockError_State_Level    `path:"level" module:"openconfig-platform-pipeline-counters"`
	ΛLevel     []ygot.Annotation                                                                                                               `path:"@level" ygotAnnotation:"true"`
	Name       *string                                                                                                                         `path:"name" module:"openconfig-platform-pipeline-counters"`
	ΛName      []ygot.Annotation                                                                                                               `path:"@name" ygotAnnotation:"true"`
	Threshold  *uint64                                                                                                                         `path:"threshold" module:"openconfig-platform-pipeline-counters"`
	ΛThreshold []ygot.Annotation                                                                                                               `path:"@threshold" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Errors_QueueingBlock_QueueingBlockError_State) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/packet YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet struct {
	ΛMetadata           []ygot.Annotation                                                                                     `path:"@" ygotAnnotation:"true"`
	FabricBlock         *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock        `path:"fabric-block" module:"openconfig-platform-pipeline-counters"`
	ΛFabricBlock        []ygot.Annotation                                                                                     `path:"@fabric-block" ygotAnnotation:"true"`
	HostInterfaceBlock  *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_HostInterfaceBlock `path:"host-interface-block" module:"openconfig-platform-pipeline-counters"`
	ΛHostInterfaceBlock []ygot.Annotation                                                                                     `path:"@host-interface-block" ygotAnnotation:"true"`
	InterfaceBlock      *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_InterfaceBlock     `path:"interface-block" module:"openconfig-platform-pipeline-counters"`
	ΛInterfaceBlock     []ygot.Annotation                                                                                     `path:"@interface-block" ygotAnnotation:"true"`
	LookupBlock         *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_LookupBlock        `path:"lookup-block" module:"openconfig-platform-pipeline-counters"`
	ΛLookupBlock        []ygot.Annotation                                                                                     `path:"@lookup-block" ygotAnnotation:"true"`
	QueueingBlock       *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_QueueingBlock      `path:"queueing-block" module:"openconfig-platform-pipeline-counters"`
	ΛQueueingBlock      []ygot.Annotation                                                                                     `path:"@queueing-block" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) IsYANGGoStruct() {
}

// GetOrCreateFabricBlock retrieves the value of the FabricBlock field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) GetOrCreateFabricBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock {
	if t.FabricBlock != nil {
		return t.FabricBlock
	}
	t.FabricBlock = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock{}
	return t.FabricBlock
}

// GetOrCreateHostInterfaceBlock retrieves the value of the HostInterfaceBlock field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) GetOrCreateHostInterfaceBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_HostInterfaceBlock {
	if t.HostInterfaceBlock != nil {
		return t.HostInterfaceBlock
	}
	t.HostInterfaceBlock = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_HostInterfaceBlock{}
	return t.HostInterfaceBlock
}

// GetOrCreateInterfaceBlock retrieves the value of the InterfaceBlock field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) GetOrCreateInterfaceBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_InterfaceBlock {
	if t.InterfaceBlock != nil {
		return t.InterfaceBlock
	}
	t.InterfaceBlock = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_InterfaceBlock{}
	return t.InterfaceBlock
}

// GetOrCreateLookupBlock retrieves the value of the LookupBlock field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) GetOrCreateLookupBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_LookupBlock {
	if t.LookupBlock != nil {
		return t.LookupBlock
	}
	t.LookupBlock = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_LookupBlock{}
	return t.LookupBlock
}

// GetOrCreateQueueingBlock retrieves the value of the QueueingBlock field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) GetOrCreateQueueingBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_QueueingBlock {
	if t.QueueingBlock != nil {
		return t.QueueingBlock
	}
	t.QueueingBlock = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_QueueingBlock{}
	return t.QueueingBlock
}

// GetFabricBlock returns the value of the FabricBlock struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet. If the receiver or the field FabricBlock is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) GetFabricBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock {
	if t != nil && t.FabricBlock != nil {
		return t.FabricBlock
	}
	return nil
}

// GetHostInterfaceBlock returns the value of the HostInterfaceBlock struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet. If the receiver or the field HostInterfaceBlock is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) GetHostInterfaceBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_HostInterfaceBlock {
	if t != nil && t.HostInterfaceBlock != nil {
		return t.HostInterfaceBlock
	}
	return nil
}

// GetInterfaceBlock returns the value of the InterfaceBlock struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet. If the receiver or the field InterfaceBlock is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) GetInterfaceBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_InterfaceBlock {
	if t != nil && t.InterfaceBlock != nil {
		return t.InterfaceBlock
	}
	return nil
}

// GetLookupBlock returns the value of the LookupBlock struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet. If the receiver or the field LookupBlock is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) GetLookupBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_LookupBlock {
	if t != nil && t.LookupBlock != nil {
		return t.LookupBlock
	}
	return nil
}

// GetQueueingBlock returns the value of the QueueingBlock struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet. If the receiver or the field QueueingBlock is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) GetQueueingBlock() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_QueueingBlock {
	if t != nil && t.QueueingBlock != nil {
		return t.QueueingBlock
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/packet/fabric-block YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock struct {
	ΛMetadata []ygot.Annotation                                                                                    `path:"@" ygotAnnotation:"true"`
	State     *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State `path:"state" module:"openconfig-platform-pipeline-counters"`
	ΛState    []ygot.Annotation                                                                                    `path:"@state" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock) IsYANGGoStruct() {
}

// GetOrCreateState retrieves the value of the State field
// or returns the existing field if it already exists.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock) GetOrCreateState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State {
	if t.State != nil {
		return t.State
	}
	t.State = &OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State{}
	return t.State
}

// GetState returns the value of the State struct pointer
// from OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock. If the receiver or the field State is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock) GetState() *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State {
	if t != nil && t.State != nil {
		return t.State
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}

// OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State represents the /openconfig-platform/components/component/integrated-circuit/pipeline-counters/packet/fabric-block/state YANG schema element.
type OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State struct {
	ΛMetadata               []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	InBytes                 *uint64           `path:"in-bytes" module:"openconfig-platform-pipeline-counters"`
	ΛInBytes                []ygot.Annotation `path:"@in-bytes" ygotAnnotation:"true"`
	InCells                 *uint64           `path:"in-cells" module:"openconfig-platform-pipeline-counters"`
	ΛInCells                []ygot.Annotation `path:"@in-cells" ygotAnnotation:"true"`
	InHighPriorityCells     *uint64           `path:"in-high-priority-cells" module:"openconfig-platform-pipeline-counters"`
	ΛInHighPriorityCells    []ygot.Annotation `path:"@in-high-priority-cells" ygotAnnotation:"true"`
	InHighPriorityPackets   *uint64           `path:"in-high-priority-packets" module:"openconfig-platform-pipeline-counters"`
	ΛInHighPriorityPackets  []ygot.Annotation `path:"@in-high-priority-packets" ygotAnnotation:"true"`
	InLowPriorityCells      *uint64           `path:"in-low-priority-cells" module:"openconfig-platform-pipeline-counters"`
	ΛInLowPriorityCells     []ygot.Annotation `path:"@in-low-priority-cells" ygotAnnotation:"true"`
	InLowPriorityPackets    *uint64           `path:"in-low-priority-packets" module:"openconfig-platform-pipeline-counters"`
	ΛInLowPriorityPackets   []ygot.Annotation `path:"@in-low-priority-packets" ygotAnnotation:"true"`
	InPackets               *uint64           `path:"in-packets" module:"openconfig-platform-pipeline-counters"`
	ΛInPackets              []ygot.Annotation `path:"@in-packets" ygotAnnotation:"true"`
	OutBytes                *uint64           `path:"out-bytes" module:"openconfig-platform-pipeline-counters"`
	ΛOutBytes               []ygot.Annotation `path:"@out-bytes" ygotAnnotation:"true"`
	OutCells                *uint64           `path:"out-cells" module:"openconfig-platform-pipeline-counters"`
	ΛOutCells               []ygot.Annotation `path:"@out-cells" ygotAnnotation:"true"`
	OutHighPriorityCells    *uint64           `path:"out-high-priority-cells" module:"openconfig-platform-pipeline-counters"`
	ΛOutHighPriorityCells   []ygot.Annotation `path:"@out-high-priority-cells" ygotAnnotation:"true"`
	OutHighPriorityPackets  *uint64           `path:"out-high-priority-packets" module:"openconfig-platform-pipeline-counters"`
	ΛOutHighPriorityPackets []ygot.Annotation `path:"@out-high-priority-packets" ygotAnnotation:"true"`
	OutLowPriorityCells     *uint64           `path:"out-low-priority-cells" module:"openconfig-platform-pipeline-counters"`
	ΛOutLowPriorityCells    []ygot.Annotation `path:"@out-low-priority-cells" ygotAnnotation:"true"`
	OutLowPriorityPackets   *uint64           `path:"out-low-priority-packets" module:"openconfig-platform-pipeline-counters"`
	ΛOutLowPriorityPackets  []ygot.Annotation `path:"@out-low-priority-packets" ygotAnnotation:"true"`
	OutPackets              *uint64           `path:"out-packets" module:"openconfig-platform-pipeline-counters"`
	ΛOutPackets             []ygot.Annotation `path:"@out-packets" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State.
func (*OpenconfigPlatform_Components_Component_IntegratedCircuit_PipelineCounters_Packet_FabricBlock_State) ΛBelongingModule() string {
	return "openconfig-platform-pipeline-counters"
}
