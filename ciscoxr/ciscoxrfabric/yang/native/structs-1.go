/*
Package native is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was false
in this case).

This package was generated by /usr/local/google/home/singhavnish/go/pkg/mod/github.com/openconfig/ygot@v0.33.0/genutil/names.go
using the following YANG input files:
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-switch-oper.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-switch-oper-sub1.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-fabric-plane-health-oper.yang
  - yang/vendor/cisco/xr/2431/Cisco-IOS-XR-fabric-plane-health-oper-sub1.yang
  - yang/vendor/cisco/xr/2431/cisco-semver.yang
  - yang/vendor/cisco/xr/2431/ietf-inet-types.yang

Imported modules were sourced from:
  - yang/vendor/cisco/xr/2431/...
*/
package native

import (
	"fmt"
	"reflect"

	"github.com/openconfig/ygot/ygot"
	"github.com/openconfig/ygot/ytypes"
)

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-location-instances/data-integrity-error-info-hw-table-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                                                                                               `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-location-instances/data-integrity-error-info-hw-table-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                                                                                                       `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-location-instances/data-integrity-error-info-hw-table-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-location-instances/data-integrity-error-info-hw-table-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                           `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-location-instances/data-integrity-error-info-hw-table-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-location-instances/data-integrity-error-info-hw-table-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                       `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                                                                                                       `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                       `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                       `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                                                                                                       `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                       `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-location-instances/data-integrity-error-info-hw-table-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-location-instances/data-integrity-error-info-hw-table-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLocationInstances_DataIntegrityErrorInfoHwTableLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers struct {
	DataIntegrityErrorInfoHwTableLogTableNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber `path:"data-integrity-error-info-hw-table-log-table-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoHwTableLogTableNumber creates a new entry in the DataIntegrityErrorInfoHwTableLogTableNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) NewDataIntegrityErrorInfoHwTableLogTableNumber(LogTable uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoHwTableLogTableNumber == nil {
		t.DataIntegrityErrorInfoHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber)
	}

	key := LogTable

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoHwTableLogTableNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoHwTableLogTableNumber", key)
	}

	t.DataIntegrityErrorInfoHwTableLogTableNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber{
		LogTable: &LogTable,
	}

	return t.DataIntegrityErrorInfoHwTableLogTableNumber[key], nil
}

// RenameDataIntegrityErrorInfoHwTableLogTableNumber renames an entry in the list DataIntegrityErrorInfoHwTableLogTableNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) RenameDataIntegrityErrorInfoHwTableLogTableNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorInfoHwTableLogTableNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoHwTableLogTableNumber", newK)
	}

	e, ok := t.DataIntegrityErrorInfoHwTableLogTableNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoHwTableLogTableNumber", oldK)
	}
	e.LogTable = &newK

	t.DataIntegrityErrorInfoHwTableLogTableNumber[newK] = e
	delete(t.DataIntegrityErrorInfoHwTableLogTableNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoHwTableLogTableNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) GetOrCreateDataIntegrityErrorInfoHwTableLogTableNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber {
	if t.DataIntegrityErrorInfoHwTableLogTableNumber == nil {
		t.DataIntegrityErrorInfoHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber)
	}
	return t.DataIntegrityErrorInfoHwTableLogTableNumber
}

// GetOrCreateDataIntegrityErrorInfoHwTableLogTableNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) GetOrCreateDataIntegrityErrorInfoHwTableLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber {

	key := LogTable

	if v, ok := t.DataIntegrityErrorInfoHwTableLogTableNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoHwTableLogTableNumber(LogTable)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoHwTableLogTableNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoHwTableLogTableNumber retrieves the value with the specified key from
// the DataIntegrityErrorInfoHwTableLogTableNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) GetDataIntegrityErrorInfoHwTableLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber {

	if t == nil {
		return nil
	}

	key := LogTable

	if lm, ok := t.DataIntegrityErrorInfoHwTableLogTableNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoHwTableLogTableNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber struct to the
// list DataIntegrityErrorInfoHwTableLogTableNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) AppendDataIntegrityErrorInfoHwTableLogTableNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber) error {
	if v.LogTable == nil {
		return fmt.Errorf("invalid nil key received for LogTable")
	}

	key := *v.LogTable

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoHwTableLogTableNumber == nil {
		t.DataIntegrityErrorInfoHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber)
	}

	if _, ok := t.DataIntegrityErrorInfoHwTableLogTableNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoHwTableLogTableNumber %v", key)
	}

	t.DataIntegrityErrorInfoHwTableLogTableNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers/data-integrity-error-info-hw-table-log-table-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber struct {
	DataIntegrityErrorInfoHwTableLogTableLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances `path:"data-integrity-error-info-hw-table-log-table-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	LogTable                                               *uint32                                                                                                                                                                                                                                                                                                             `path:"log-table" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorInfoHwTableLogTableLocationInstances retrieves the value of the DataIntegrityErrorInfoHwTableLogTableLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber) GetOrCreateDataIntegrityErrorInfoHwTableLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances {
	if t.DataIntegrityErrorInfoHwTableLogTableLocationInstances != nil {
		return t.DataIntegrityErrorInfoHwTableLogTableLocationInstances
	}
	t.DataIntegrityErrorInfoHwTableLogTableLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances{}
	return t.DataIntegrityErrorInfoHwTableLogTableLocationInstances
}

// GetDataIntegrityErrorInfoHwTableLogTableLocationInstances returns the value of the DataIntegrityErrorInfoHwTableLogTableLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber. If the receiver or the field DataIntegrityErrorInfoHwTableLogTableLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber) GetDataIntegrityErrorInfoHwTableLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances {
	if t != nil && t.DataIntegrityErrorInfoHwTableLogTableLocationInstances != nil {
		return t.DataIntegrityErrorInfoHwTableLogTableLocationInstances
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.LogTable == nil {
		return nil, fmt.Errorf("nil value for key LogTable")
	}

	return map[string]interface{}{
		"log-table": *t.LogTable,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers/data-integrity-error-info-hw-table-log-table-number/data-integrity-error-info-hw-table-log-table-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances struct {
	DataIntegrityErrorInfoHwTableLogTableLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance `path:"data-integrity-error-info-hw-table-log-table-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoHwTableLogTableLocationInstance creates a new entry in the DataIntegrityErrorInfoHwTableLogTableLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) NewDataIntegrityErrorInfoHwTableLogTableLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorInfoHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoHwTableLogTableLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoHwTableLogTableLocationInstance", key)
	}

	t.DataIntegrityErrorInfoHwTableLogTableLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorInfoHwTableLogTableLocationInstance[key], nil
}

// RenameDataIntegrityErrorInfoHwTableLogTableLocationInstance renames an entry in the list DataIntegrityErrorInfoHwTableLogTableLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) RenameDataIntegrityErrorInfoHwTableLogTableLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorInfoHwTableLogTableLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoHwTableLogTableLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorInfoHwTableLogTableLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoHwTableLogTableLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorInfoHwTableLogTableLocationInstance[newK] = e
	delete(t.DataIntegrityErrorInfoHwTableLogTableLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoHwTableLogTableLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) GetOrCreateDataIntegrityErrorInfoHwTableLogTableLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance {
	if t.DataIntegrityErrorInfoHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorInfoHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance)
	}
	return t.DataIntegrityErrorInfoHwTableLogTableLocationInstance
}

// GetOrCreateDataIntegrityErrorInfoHwTableLogTableLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) GetOrCreateDataIntegrityErrorInfoHwTableLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorInfoHwTableLogTableLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoHwTableLogTableLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoHwTableLogTableLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoHwTableLogTableLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorInfoHwTableLogTableLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) GetDataIntegrityErrorInfoHwTableLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorInfoHwTableLogTableLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoHwTableLogTableLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance struct to the
// list DataIntegrityErrorInfoHwTableLogTableLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) AppendDataIntegrityErrorInfoHwTableLogTableLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorInfoHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorInfoHwTableLogTableLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoHwTableLogTableLocationInstance %v", key)
	}

	t.DataIntegrityErrorInfoHwTableLogTableLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers/data-integrity-error-info-hw-table-log-table-number/data-integrity-error-info-hw-table-log-table-location-instances/data-integrity-error-info-hw-table-log-table-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                                                                                                                                                                                                        `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers/data-integrity-error-info-hw-table-log-table-number/data-integrity-error-info-hw-table-log-table-location-instances/data-integrity-error-info-hw-table-log-table-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers/data-integrity-error-info-hw-table-log-table-number/data-integrity-error-info-hw-table-log-table-location-instances/data-integrity-error-info-hw-table-log-table-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers/data-integrity-error-info-hw-table-log-table-number/data-integrity-error-info-hw-table-log-table-location-instances/data-integrity-error-info-hw-table-log-table-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                    `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers/data-integrity-error-info-hw-table-log-table-number/data-integrity-error-info-hw-table-log-table-location-instances/data-integrity-error-info-hw-table-log-table-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers/data-integrity-error-info-hw-table-log-table-number/data-integrity-error-info-hw-table-log-table-location-instances/data-integrity-error-info-hw-table-log-table-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers/data-integrity-error-info-hw-table-log-table-number/data-integrity-error-info-hw-table-log-table-location-instances/data-integrity-error-info-hw-table-log-table-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-hw-table-numbers/data-integrity-error-info-hw-table-number/data-integrity-error-info-hw-table-log-table-numbers/data-integrity-error-info-hw-table-log-table-number/data-integrity-error-info-hw-table-log-table-location-instances/data-integrity-error-info-hw-table-log-table-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoHwTableNumbers_DataIntegrityErrorInfoHwTableNumber_DataIntegrityErrorInfoHwTableLogTableNumbers_DataIntegrityErrorInfoHwTableLogTableNumber_DataIntegrityErrorInfoHwTableLogTableLocationInstances_DataIntegrityErrorInfoHwTableLogTableLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances struct {
	DataIntegrityErrorInfoLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance `path:"data-integrity-error-info-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoLocationInstance creates a new entry in the DataIntegrityErrorInfoLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) NewDataIntegrityErrorInfoLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoLocationInstance == nil {
		t.DataIntegrityErrorInfoLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoLocationInstance", key)
	}

	t.DataIntegrityErrorInfoLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorInfoLocationInstance[key], nil
}

// RenameDataIntegrityErrorInfoLocationInstance renames an entry in the list DataIntegrityErrorInfoLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) RenameDataIntegrityErrorInfoLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorInfoLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorInfoLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorInfoLocationInstance[newK] = e
	delete(t.DataIntegrityErrorInfoLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) GetOrCreateDataIntegrityErrorInfoLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance {
	if t.DataIntegrityErrorInfoLocationInstance == nil {
		t.DataIntegrityErrorInfoLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance)
	}
	return t.DataIntegrityErrorInfoLocationInstance
}

// GetOrCreateDataIntegrityErrorInfoLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) GetOrCreateDataIntegrityErrorInfoLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorInfoLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorInfoLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) GetDataIntegrityErrorInfoLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorInfoLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance struct to the
// list DataIntegrityErrorInfoLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) AppendDataIntegrityErrorInfoLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoLocationInstance == nil {
		t.DataIntegrityErrorInfoLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorInfoLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoLocationInstance %v", key)
	}

	t.DataIntegrityErrorInfoLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-location-instances/data-integrity-error-info-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                        `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-location-instances/data-integrity-error-info-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-location-instances/data-integrity-error-info-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-location-instances/data-integrity-error-info-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                    `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-location-instances/data-integrity-error-info-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-location-instances/data-integrity-error-info-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-location-instances/data-integrity-error-info-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-location-instances/data-integrity-error-info-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLocationInstances_DataIntegrityErrorInfoLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers struct {
	DataIntegrityErrorInfoLogTableNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber `path:"data-integrity-error-info-log-table-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoLogTableNumber creates a new entry in the DataIntegrityErrorInfoLogTableNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) NewDataIntegrityErrorInfoLogTableNumber(LogTable uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoLogTableNumber == nil {
		t.DataIntegrityErrorInfoLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber)
	}

	key := LogTable

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoLogTableNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoLogTableNumber", key)
	}

	t.DataIntegrityErrorInfoLogTableNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber{
		LogTable: &LogTable,
	}

	return t.DataIntegrityErrorInfoLogTableNumber[key], nil
}

// RenameDataIntegrityErrorInfoLogTableNumber renames an entry in the list DataIntegrityErrorInfoLogTableNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) RenameDataIntegrityErrorInfoLogTableNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorInfoLogTableNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoLogTableNumber", newK)
	}

	e, ok := t.DataIntegrityErrorInfoLogTableNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoLogTableNumber", oldK)
	}
	e.LogTable = &newK

	t.DataIntegrityErrorInfoLogTableNumber[newK] = e
	delete(t.DataIntegrityErrorInfoLogTableNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoLogTableNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) GetOrCreateDataIntegrityErrorInfoLogTableNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber {
	if t.DataIntegrityErrorInfoLogTableNumber == nil {
		t.DataIntegrityErrorInfoLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber)
	}
	return t.DataIntegrityErrorInfoLogTableNumber
}

// GetOrCreateDataIntegrityErrorInfoLogTableNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) GetOrCreateDataIntegrityErrorInfoLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber {

	key := LogTable

	if v, ok := t.DataIntegrityErrorInfoLogTableNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoLogTableNumber(LogTable)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoLogTableNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoLogTableNumber retrieves the value with the specified key from
// the DataIntegrityErrorInfoLogTableNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) GetDataIntegrityErrorInfoLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber {

	if t == nil {
		return nil
	}

	key := LogTable

	if lm, ok := t.DataIntegrityErrorInfoLogTableNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoLogTableNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber struct to the
// list DataIntegrityErrorInfoLogTableNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) AppendDataIntegrityErrorInfoLogTableNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber) error {
	if v.LogTable == nil {
		return fmt.Errorf("invalid nil key received for LogTable")
	}

	key := *v.LogTable

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoLogTableNumber == nil {
		t.DataIntegrityErrorInfoLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber)
	}

	if _, ok := t.DataIntegrityErrorInfoLogTableNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoLogTableNumber %v", key)
	}

	t.DataIntegrityErrorInfoLogTableNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers/data-integrity-error-info-log-table-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber struct {
	DataIntegrityErrorInfoLogTableLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances `path:"data-integrity-error-info-log-table-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	LogTable                                        *uint32                                                                                                                                                                                                               `path:"log-table" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorInfoLogTableLocationInstances retrieves the value of the DataIntegrityErrorInfoLogTableLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber) GetOrCreateDataIntegrityErrorInfoLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances {
	if t.DataIntegrityErrorInfoLogTableLocationInstances != nil {
		return t.DataIntegrityErrorInfoLogTableLocationInstances
	}
	t.DataIntegrityErrorInfoLogTableLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances{}
	return t.DataIntegrityErrorInfoLogTableLocationInstances
}

// GetDataIntegrityErrorInfoLogTableLocationInstances returns the value of the DataIntegrityErrorInfoLogTableLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber. If the receiver or the field DataIntegrityErrorInfoLogTableLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber) GetDataIntegrityErrorInfoLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances {
	if t != nil && t.DataIntegrityErrorInfoLogTableLocationInstances != nil {
		return t.DataIntegrityErrorInfoLogTableLocationInstances
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.LogTable == nil {
		return nil, fmt.Errorf("nil value for key LogTable")
	}

	return map[string]interface{}{
		"log-table": *t.LogTable,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers/data-integrity-error-info-log-table-number/data-integrity-error-info-log-table-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances struct {
	DataIntegrityErrorInfoLogTableLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance `path:"data-integrity-error-info-log-table-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoLogTableLocationInstance creates a new entry in the DataIntegrityErrorInfoLogTableLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) NewDataIntegrityErrorInfoLogTableLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoLogTableLocationInstance == nil {
		t.DataIntegrityErrorInfoLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoLogTableLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoLogTableLocationInstance", key)
	}

	t.DataIntegrityErrorInfoLogTableLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorInfoLogTableLocationInstance[key], nil
}

// RenameDataIntegrityErrorInfoLogTableLocationInstance renames an entry in the list DataIntegrityErrorInfoLogTableLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) RenameDataIntegrityErrorInfoLogTableLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorInfoLogTableLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoLogTableLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorInfoLogTableLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoLogTableLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorInfoLogTableLocationInstance[newK] = e
	delete(t.DataIntegrityErrorInfoLogTableLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoLogTableLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) GetOrCreateDataIntegrityErrorInfoLogTableLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance {
	if t.DataIntegrityErrorInfoLogTableLocationInstance == nil {
		t.DataIntegrityErrorInfoLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance)
	}
	return t.DataIntegrityErrorInfoLogTableLocationInstance
}

// GetOrCreateDataIntegrityErrorInfoLogTableLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) GetOrCreateDataIntegrityErrorInfoLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorInfoLogTableLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoLogTableLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoLogTableLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoLogTableLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorInfoLogTableLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) GetDataIntegrityErrorInfoLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorInfoLogTableLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoLogTableLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance struct to the
// list DataIntegrityErrorInfoLogTableLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) AppendDataIntegrityErrorInfoLogTableLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoLogTableLocationInstance == nil {
		t.DataIntegrityErrorInfoLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorInfoLogTableLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoLogTableLocationInstance %v", key)
	}

	t.DataIntegrityErrorInfoLogTableLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers/data-integrity-error-info-log-table-number/data-integrity-error-info-log-table-location-instances/data-integrity-error-info-log-table-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                                                                                                   `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers/data-integrity-error-info-log-table-number/data-integrity-error-info-log-table-location-instances/data-integrity-error-info-log-table-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                                                                                                           `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers/data-integrity-error-info-log-table-number/data-integrity-error-info-log-table-location-instances/data-integrity-error-info-log-table-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers/data-integrity-error-info-log-table-number/data-integrity-error-info-log-table-location-instances/data-integrity-error-info-log-table-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                               `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers/data-integrity-error-info-log-table-number/data-integrity-error-info-log-table-location-instances/data-integrity-error-info-log-table-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers/data-integrity-error-info-log-table-number/data-integrity-error-info-log-table-location-instances/data-integrity-error-info-log-table-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                           `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                                                                                                           `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                           `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                           `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                                                                                                           `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                           `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers/data-integrity-error-info-log-table-number/data-integrity-error-info-log-table-location-instances/data-integrity-error-info-log-table-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-log-table-numbers/data-integrity-error-info-log-table-number/data-integrity-error-info-log-table-location-instances/data-integrity-error-info-log-table-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoLogTableNumbers_DataIntegrityErrorInfoLogTableNumber_DataIntegrityErrorInfoLogTableLocationInstances_DataIntegrityErrorInfoLogTableLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers struct {
	DataIntegrityErrorInfoMemTypeNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber `path:"data-integrity-error-info-mem-type-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoMemTypeNumber creates a new entry in the DataIntegrityErrorInfoMemTypeNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) NewDataIntegrityErrorInfoMemTypeNumber(MemType uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeNumber == nil {
		t.DataIntegrityErrorInfoMemTypeNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber)
	}

	key := MemType

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoMemTypeNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoMemTypeNumber", key)
	}

	t.DataIntegrityErrorInfoMemTypeNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber{
		MemType: &MemType,
	}

	return t.DataIntegrityErrorInfoMemTypeNumber[key], nil
}

// RenameDataIntegrityErrorInfoMemTypeNumber renames an entry in the list DataIntegrityErrorInfoMemTypeNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) RenameDataIntegrityErrorInfoMemTypeNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorInfoMemTypeNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoMemTypeNumber", newK)
	}

	e, ok := t.DataIntegrityErrorInfoMemTypeNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoMemTypeNumber", oldK)
	}
	e.MemType = &newK

	t.DataIntegrityErrorInfoMemTypeNumber[newK] = e
	delete(t.DataIntegrityErrorInfoMemTypeNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoMemTypeNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) GetOrCreateDataIntegrityErrorInfoMemTypeNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber {
	if t.DataIntegrityErrorInfoMemTypeNumber == nil {
		t.DataIntegrityErrorInfoMemTypeNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber)
	}
	return t.DataIntegrityErrorInfoMemTypeNumber
}

// GetOrCreateDataIntegrityErrorInfoMemTypeNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) GetOrCreateDataIntegrityErrorInfoMemTypeNumber(MemType uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber {

	key := MemType

	if v, ok := t.DataIntegrityErrorInfoMemTypeNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoMemTypeNumber(MemType)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoMemTypeNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoMemTypeNumber retrieves the value with the specified key from
// the DataIntegrityErrorInfoMemTypeNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) GetDataIntegrityErrorInfoMemTypeNumber(MemType uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber {

	if t == nil {
		return nil
	}

	key := MemType

	if lm, ok := t.DataIntegrityErrorInfoMemTypeNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoMemTypeNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber struct to the
// list DataIntegrityErrorInfoMemTypeNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) AppendDataIntegrityErrorInfoMemTypeNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) error {
	if v.MemType == nil {
		return fmt.Errorf("invalid nil key received for MemType")
	}

	key := *v.MemType

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeNumber == nil {
		t.DataIntegrityErrorInfoMemTypeNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber)
	}

	if _, ok := t.DataIntegrityErrorInfoMemTypeNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoMemTypeNumber %v", key)
	}

	t.DataIntegrityErrorInfoMemTypeNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber struct {
	DataIntegrityErrorInfoMemTypeHwTableNumbers    *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers    `path:"data-integrity-error-info-mem-type-hw-table-numbers" module:"Cisco-IOS-XR-switch-oper"`
	DataIntegrityErrorInfoMemTypeLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances `path:"data-integrity-error-info-mem-type-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	MemType                                        *uint32                                                                                                                                                                                                            `path:"mem-type" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableNumbers retrieves the value of the DataIntegrityErrorInfoMemTypeHwTableNumbers field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers {
	if t.DataIntegrityErrorInfoMemTypeHwTableNumbers != nil {
		return t.DataIntegrityErrorInfoMemTypeHwTableNumbers
	}
	t.DataIntegrityErrorInfoMemTypeHwTableNumbers = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers{}
	return t.DataIntegrityErrorInfoMemTypeHwTableNumbers
}

// GetOrCreateDataIntegrityErrorInfoMemTypeLocationInstances retrieves the value of the DataIntegrityErrorInfoMemTypeLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) GetOrCreateDataIntegrityErrorInfoMemTypeLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances {
	if t.DataIntegrityErrorInfoMemTypeLocationInstances != nil {
		return t.DataIntegrityErrorInfoMemTypeLocationInstances
	}
	t.DataIntegrityErrorInfoMemTypeLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances{}
	return t.DataIntegrityErrorInfoMemTypeLocationInstances
}

// GetDataIntegrityErrorInfoMemTypeHwTableNumbers returns the value of the DataIntegrityErrorInfoMemTypeHwTableNumbers struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber. If the receiver or the field DataIntegrityErrorInfoMemTypeHwTableNumbers is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) GetDataIntegrityErrorInfoMemTypeHwTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers {
	if t != nil && t.DataIntegrityErrorInfoMemTypeHwTableNumbers != nil {
		return t.DataIntegrityErrorInfoMemTypeHwTableNumbers
	}
	return nil
}

// GetDataIntegrityErrorInfoMemTypeLocationInstances returns the value of the DataIntegrityErrorInfoMemTypeLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber. If the receiver or the field DataIntegrityErrorInfoMemTypeLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) GetDataIntegrityErrorInfoMemTypeLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances {
	if t != nil && t.DataIntegrityErrorInfoMemTypeLocationInstances != nil {
		return t.DataIntegrityErrorInfoMemTypeLocationInstances
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.MemType == nil {
		return nil, fmt.Errorf("nil value for key MemType")
	}

	return map[string]interface{}{
		"mem-type": *t.MemType,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers struct {
	DataIntegrityErrorInfoMemTypeHwTableNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber `path:"data-integrity-error-info-mem-type-hw-table-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoMemTypeHwTableNumber creates a new entry in the DataIntegrityErrorInfoMemTypeHwTableNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) NewDataIntegrityErrorInfoMemTypeHwTableNumber(HwTable uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeHwTableNumber == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber)
	}

	key := HwTable

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoMemTypeHwTableNumber", key)
	}

	t.DataIntegrityErrorInfoMemTypeHwTableNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber{
		HwTable: &HwTable,
	}

	return t.DataIntegrityErrorInfoMemTypeHwTableNumber[key], nil
}

// RenameDataIntegrityErrorInfoMemTypeHwTableNumber renames an entry in the list DataIntegrityErrorInfoMemTypeHwTableNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) RenameDataIntegrityErrorInfoMemTypeHwTableNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoMemTypeHwTableNumber", newK)
	}

	e, ok := t.DataIntegrityErrorInfoMemTypeHwTableNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoMemTypeHwTableNumber", oldK)
	}
	e.HwTable = &newK

	t.DataIntegrityErrorInfoMemTypeHwTableNumber[newK] = e
	delete(t.DataIntegrityErrorInfoMemTypeHwTableNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber {
	if t.DataIntegrityErrorInfoMemTypeHwTableNumber == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber)
	}
	return t.DataIntegrityErrorInfoMemTypeHwTableNumber
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableNumber(HwTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber {

	key := HwTable

	if v, ok := t.DataIntegrityErrorInfoMemTypeHwTableNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoMemTypeHwTableNumber(HwTable)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoMemTypeHwTableNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoMemTypeHwTableNumber retrieves the value with the specified key from
// the DataIntegrityErrorInfoMemTypeHwTableNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) GetDataIntegrityErrorInfoMemTypeHwTableNumber(HwTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber {

	if t == nil {
		return nil
	}

	key := HwTable

	if lm, ok := t.DataIntegrityErrorInfoMemTypeHwTableNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoMemTypeHwTableNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber struct to the
// list DataIntegrityErrorInfoMemTypeHwTableNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) AppendDataIntegrityErrorInfoMemTypeHwTableNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) error {
	if v.HwTable == nil {
		return fmt.Errorf("invalid nil key received for HwTable")
	}

	key := *v.HwTable

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeHwTableNumber == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber)
	}

	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoMemTypeHwTableNumber %v", key)
	}

	t.DataIntegrityErrorInfoMemTypeHwTableNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber struct {
	DataIntegrityErrorInfoMemTypeHwTableLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances `path:"data-integrity-error-info-mem-type-hw-table-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers   *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers   `path:"data-integrity-error-info-mem-type-hw-table-log-table-numbers" module:"Cisco-IOS-XR-switch-oper"`
	HwTable                                               *uint32                                                                                                                                                                                                                                                                                                          `path:"hw-table" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLocationInstances retrieves the value of the DataIntegrityErrorInfoMemTypeHwTableLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances {
	if t.DataIntegrityErrorInfoMemTypeHwTableLocationInstances != nil {
		return t.DataIntegrityErrorInfoMemTypeHwTableLocationInstances
	}
	t.DataIntegrityErrorInfoMemTypeHwTableLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances{}
	return t.DataIntegrityErrorInfoMemTypeHwTableLocationInstances
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableNumbers retrieves the value of the DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers {
	if t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers != nil {
		return t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers
	}
	t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers{}
	return t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers
}

// GetDataIntegrityErrorInfoMemTypeHwTableLocationInstances returns the value of the DataIntegrityErrorInfoMemTypeHwTableLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber. If the receiver or the field DataIntegrityErrorInfoMemTypeHwTableLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) GetDataIntegrityErrorInfoMemTypeHwTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances {
	if t != nil && t.DataIntegrityErrorInfoMemTypeHwTableLocationInstances != nil {
		return t.DataIntegrityErrorInfoMemTypeHwTableLocationInstances
	}
	return nil
}

// GetDataIntegrityErrorInfoMemTypeHwTableLogTableNumbers returns the value of the DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber. If the receiver or the field DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) GetDataIntegrityErrorInfoMemTypeHwTableLogTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers {
	if t != nil && t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers != nil {
		return t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.HwTable == nil {
		return nil, fmt.Errorf("nil value for key HwTable")
	}

	return map[string]interface{}{
		"hw-table": *t.HwTable,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances struct {
	DataIntegrityErrorInfoMemTypeHwTableLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance `path:"data-integrity-error-info-mem-type-hw-table-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoMemTypeHwTableLocationInstance creates a new entry in the DataIntegrityErrorInfoMemTypeHwTableLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) NewDataIntegrityErrorInfoMemTypeHwTableLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoMemTypeHwTableLocationInstance", key)
	}

	t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance[key], nil
}

// RenameDataIntegrityErrorInfoMemTypeHwTableLocationInstance renames an entry in the list DataIntegrityErrorInfoMemTypeHwTableLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) RenameDataIntegrityErrorInfoMemTypeHwTableLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoMemTypeHwTableLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoMemTypeHwTableLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance[newK] = e
	delete(t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance {
	if t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance)
	}
	return t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoMemTypeHwTableLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoMemTypeHwTableLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorInfoMemTypeHwTableLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) GetDataIntegrityErrorInfoMemTypeHwTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoMemTypeHwTableLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance struct to the
// list DataIntegrityErrorInfoMemTypeHwTableLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) AppendDataIntegrityErrorInfoMemTypeHwTableLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoMemTypeHwTableLocationInstance %v", key)
	}

	t.DataIntegrityErrorInfoMemTypeHwTableLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-location-instances/data-integrity-error-info-mem-type-hw-table-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                                                                                                                                                                                                    `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-location-instances/data-integrity-error-info-mem-type-hw-table-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                            `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-location-instances/data-integrity-error-info-mem-type-hw-table-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-location-instances/data-integrity-error-info-mem-type-hw-table-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-location-instances/data-integrity-error-info-mem-type-hw-table-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-location-instances/data-integrity-error-info-mem-type-hw-table-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                            `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                            `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                            `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                            `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                            `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                            `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-location-instances/data-integrity-error-info-mem-type-hw-table-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-location-instances/data-integrity-error-info-mem-type-hw-table-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers struct {
	DataIntegrityErrorInfoMemTypeHwTableLogTableNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber `path:"data-integrity-error-info-mem-type-hw-table-log-table-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoMemTypeHwTableLogTableNumber creates a new entry in the DataIntegrityErrorInfoMemTypeHwTableLogTableNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) NewDataIntegrityErrorInfoMemTypeHwTableLogTableNumber(LogTable uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber)
	}

	key := LogTable

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoMemTypeHwTableLogTableNumber", key)
	}

	t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber{
		LogTable: &LogTable,
	}

	return t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber[key], nil
}

// RenameDataIntegrityErrorInfoMemTypeHwTableLogTableNumber renames an entry in the list DataIntegrityErrorInfoMemTypeHwTableLogTableNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) RenameDataIntegrityErrorInfoMemTypeHwTableLogTableNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoMemTypeHwTableLogTableNumber", newK)
	}

	e, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoMemTypeHwTableLogTableNumber", oldK)
	}
	e.LogTable = &newK

	t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber[newK] = e
	delete(t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber {
	if t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber)
	}
	return t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber {

	key := LogTable

	if v, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoMemTypeHwTableLogTableNumber(LogTable)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoMemTypeHwTableLogTableNumber retrieves the value with the specified key from
// the DataIntegrityErrorInfoMemTypeHwTableLogTableNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) GetDataIntegrityErrorInfoMemTypeHwTableLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber {

	if t == nil {
		return nil
	}

	key := LogTable

	if lm, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoMemTypeHwTableLogTableNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber struct to the
// list DataIntegrityErrorInfoMemTypeHwTableLogTableNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) AppendDataIntegrityErrorInfoMemTypeHwTableLogTableNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber) error {
	if v.LogTable == nil {
		return fmt.Errorf("invalid nil key received for LogTable")
	}

	key := *v.LogTable

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber)
	}

	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoMemTypeHwTableLogTableNumber %v", key)
	}

	t.DataIntegrityErrorInfoMemTypeHwTableLogTableNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers/data-integrity-error-info-mem-type-hw-table-log-table-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber struct {
	DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances `path:"data-integrity-error-info-mem-type-hw-table-log-table-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	LogTable                                                      *uint32                                                                                                                                                                                                                                                                                                                                                                                                                         `path:"log-table" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances retrieves the value of the DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances {
	if t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances != nil {
		return t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances
	}
	t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances{}
	return t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances
}

// GetDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances returns the value of the DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber. If the receiver or the field DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber) GetDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances {
	if t != nil && t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances != nil {
		return t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.LogTable == nil {
		return nil, fmt.Errorf("nil value for key LogTable")
	}

	return map[string]interface{}{
		"log-table": *t.LogTable,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers/data-integrity-error-info-mem-type-hw-table-log-table-number/data-integrity-error-info-mem-type-hw-table-log-table-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances struct {
	DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance `path:"data-integrity-error-info-mem-type-hw-table-log-table-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance creates a new entry in the DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) NewDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance", key)
	}

	t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance[key], nil
}

// RenameDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance renames an entry in the list DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) RenameDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance[newK] = e
	delete(t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance {
	if t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance)
	}
	return t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance
}

// GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) GetDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance struct to the
// list DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) AppendDataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance %v", key)
	}

	t.DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers/data-integrity-error-info-mem-type-hw-table-log-table-number/data-integrity-error-info-mem-type-hw-table-log-table-location-instances/data-integrity-error-info-mem-type-hw-table-log-table-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string`path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers/data-integrity-error-info-mem-type-hw-table-log-table-number/data-integrity-error-info-mem-type-hw-table-log-table-location-instances/data-integrity-error-info-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint`path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers/data-integrity-error-info-mem-type-hw-table-log-table-number/data-integrity-error-info-mem-type-hw-table-log-table-location-instances/data-integrity-error-info-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers/data-integrity-error-info-mem-type-hw-table-log-table-number/data-integrity-error-info-mem-type-hw-table-log-table-location-instances/data-integrity-error-info-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint`path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers/data-integrity-error-info-mem-type-hw-table-log-table-number/data-integrity-error-info-mem-type-hw-table-log-table-location-instances/data-integrity-error-info-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers/data-integrity-error-info-mem-type-hw-table-log-table-number/data-integrity-error-info-mem-type-hw-table-log-table-location-instances/data-integrity-error-info-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint`path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint`path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint`path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers/data-integrity-error-info-mem-type-hw-table-log-table-number/data-integrity-error-info-mem-type-hw-table-log-table-location-instances/data-integrity-error-info-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-hw-table-numbers/data-integrity-error-info-mem-type-hw-table-number/data-integrity-error-info-mem-type-hw-table-log-table-numbers/data-integrity-error-info-mem-type-hw-table-log-table-number/data-integrity-error-info-mem-type-hw-table-log-table-location-instances/data-integrity-error-info-mem-type-hw-table-log-table-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeHwTableNumbers_DataIntegrityErrorInfoMemTypeHwTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableNumbers_DataIntegrityErrorInfoMemTypeHwTableLogTableNumber_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorInfoMemTypeHwTableLogTableLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances struct {
	DataIntegrityErrorInfoMemTypeLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance `path:"data-integrity-error-info-mem-type-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorInfoMemTypeLocationInstance creates a new entry in the DataIntegrityErrorInfoMemTypeLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) NewDataIntegrityErrorInfoMemTypeLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeLocationInstance == nil {
		t.DataIntegrityErrorInfoMemTypeLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorInfoMemTypeLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorInfoMemTypeLocationInstance", key)
	}

	t.DataIntegrityErrorInfoMemTypeLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorInfoMemTypeLocationInstance[key], nil
}

// RenameDataIntegrityErrorInfoMemTypeLocationInstance renames an entry in the list DataIntegrityErrorInfoMemTypeLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) RenameDataIntegrityErrorInfoMemTypeLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorInfoMemTypeLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorInfoMemTypeLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorInfoMemTypeLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorInfoMemTypeLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorInfoMemTypeLocationInstance[newK] = e
	delete(t.DataIntegrityErrorInfoMemTypeLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorInfoMemTypeLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) GetOrCreateDataIntegrityErrorInfoMemTypeLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance {
	if t.DataIntegrityErrorInfoMemTypeLocationInstance == nil {
		t.DataIntegrityErrorInfoMemTypeLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance)
	}
	return t.DataIntegrityErrorInfoMemTypeLocationInstance
}

// GetOrCreateDataIntegrityErrorInfoMemTypeLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) GetOrCreateDataIntegrityErrorInfoMemTypeLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorInfoMemTypeLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorInfoMemTypeLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorInfoMemTypeLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorInfoMemTypeLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorInfoMemTypeLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) GetDataIntegrityErrorInfoMemTypeLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorInfoMemTypeLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorInfoMemTypeLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance struct to the
// list DataIntegrityErrorInfoMemTypeLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) AppendDataIntegrityErrorInfoMemTypeLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorInfoMemTypeLocationInstance == nil {
		t.DataIntegrityErrorInfoMemTypeLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorInfoMemTypeLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorInfoMemTypeLocationInstance %v", key)
	}

	t.DataIntegrityErrorInfoMemTypeLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-location-instances/data-integrity-error-info-mem-type-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                                                                                               `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-location-instances/data-integrity-error-info-mem-type-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                                                                                                       `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-location-instances/data-integrity-error-info-mem-type-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-location-instances/data-integrity-error-info-mem-type-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                           `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-location-instances/data-integrity-error-info-mem-type-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-location-instances/data-integrity-error-info-mem-type-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                       `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                                                                                                       `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                       `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                       `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                                                                                                       `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                       `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-location-instances/data-integrity-error-info-mem-type-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-info/data-integrity-error-info-mem-type-numbers/data-integrity-error-info-mem-type-number/data-integrity-error-info-mem-type-location-instances/data-integrity-error-info-mem-type-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorInfo_DataIntegrityErrorInfoMemTypeNumbers_DataIntegrityErrorInfoMemTypeNumber_DataIntegrityErrorInfoMemTypeLocationInstances_DataIntegrityErrorInfoMemTypeLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary struct {
	DataIntegrityErrorSummaryHwTableNumbers    *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers    `path:"data-integrity-error-summary-hw-table-numbers" module:"Cisco-IOS-XR-switch-oper"`
	DataIntegrityErrorSummaryLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances `path:"data-integrity-error-summary-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	DataIntegrityErrorSummaryLogTableNumbers   *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers   `path:"data-integrity-error-summary-log-table-numbers" module:"Cisco-IOS-XR-switch-oper"`
	DataIntegrityErrorSummaryMemTypeNumbers    *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers    `path:"data-integrity-error-summary-mem-type-numbers" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorSummaryHwTableNumbers retrieves the value of the DataIntegrityErrorSummaryHwTableNumbers field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) GetOrCreateDataIntegrityErrorSummaryHwTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers {
	if t.DataIntegrityErrorSummaryHwTableNumbers != nil {
		return t.DataIntegrityErrorSummaryHwTableNumbers
	}
	t.DataIntegrityErrorSummaryHwTableNumbers = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers{}
	return t.DataIntegrityErrorSummaryHwTableNumbers
}

// GetOrCreateDataIntegrityErrorSummaryLocationInstances retrieves the value of the DataIntegrityErrorSummaryLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) GetOrCreateDataIntegrityErrorSummaryLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances {
	if t.DataIntegrityErrorSummaryLocationInstances != nil {
		return t.DataIntegrityErrorSummaryLocationInstances
	}
	t.DataIntegrityErrorSummaryLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances{}
	return t.DataIntegrityErrorSummaryLocationInstances
}

// GetOrCreateDataIntegrityErrorSummaryLogTableNumbers retrieves the value of the DataIntegrityErrorSummaryLogTableNumbers field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) GetOrCreateDataIntegrityErrorSummaryLogTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers {
	if t.DataIntegrityErrorSummaryLogTableNumbers != nil {
		return t.DataIntegrityErrorSummaryLogTableNumbers
	}
	t.DataIntegrityErrorSummaryLogTableNumbers = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers{}
	return t.DataIntegrityErrorSummaryLogTableNumbers
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeNumbers retrieves the value of the DataIntegrityErrorSummaryMemTypeNumbers field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) GetOrCreateDataIntegrityErrorSummaryMemTypeNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers {
	if t.DataIntegrityErrorSummaryMemTypeNumbers != nil {
		return t.DataIntegrityErrorSummaryMemTypeNumbers
	}
	t.DataIntegrityErrorSummaryMemTypeNumbers = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers{}
	return t.DataIntegrityErrorSummaryMemTypeNumbers
}

// GetDataIntegrityErrorSummaryHwTableNumbers returns the value of the DataIntegrityErrorSummaryHwTableNumbers struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary. If the receiver or the field DataIntegrityErrorSummaryHwTableNumbers is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) GetDataIntegrityErrorSummaryHwTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers {
	if t != nil && t.DataIntegrityErrorSummaryHwTableNumbers != nil {
		return t.DataIntegrityErrorSummaryHwTableNumbers
	}
	return nil
}

// GetDataIntegrityErrorSummaryLocationInstances returns the value of the DataIntegrityErrorSummaryLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary. If the receiver or the field DataIntegrityErrorSummaryLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) GetDataIntegrityErrorSummaryLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances {
	if t != nil && t.DataIntegrityErrorSummaryLocationInstances != nil {
		return t.DataIntegrityErrorSummaryLocationInstances
	}
	return nil
}

// GetDataIntegrityErrorSummaryLogTableNumbers returns the value of the DataIntegrityErrorSummaryLogTableNumbers struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary. If the receiver or the field DataIntegrityErrorSummaryLogTableNumbers is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) GetDataIntegrityErrorSummaryLogTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers {
	if t != nil && t.DataIntegrityErrorSummaryLogTableNumbers != nil {
		return t.DataIntegrityErrorSummaryLogTableNumbers
	}
	return nil
}

// GetDataIntegrityErrorSummaryMemTypeNumbers returns the value of the DataIntegrityErrorSummaryMemTypeNumbers struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary. If the receiver or the field DataIntegrityErrorSummaryMemTypeNumbers is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) GetDataIntegrityErrorSummaryMemTypeNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers {
	if t != nil && t.DataIntegrityErrorSummaryMemTypeNumbers != nil {
		return t.DataIntegrityErrorSummaryMemTypeNumbers
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers struct {
	DataIntegrityErrorSummaryHwTableNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber `path:"data-integrity-error-summary-hw-table-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryHwTableNumber creates a new entry in the DataIntegrityErrorSummaryHwTableNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) NewDataIntegrityErrorSummaryHwTableNumber(HwTable uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryHwTableNumber == nil {
		t.DataIntegrityErrorSummaryHwTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber)
	}

	key := HwTable

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryHwTableNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryHwTableNumber", key)
	}

	t.DataIntegrityErrorSummaryHwTableNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber{
		HwTable: &HwTable,
	}

	return t.DataIntegrityErrorSummaryHwTableNumber[key], nil
}

// RenameDataIntegrityErrorSummaryHwTableNumber renames an entry in the list DataIntegrityErrorSummaryHwTableNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) RenameDataIntegrityErrorSummaryHwTableNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorSummaryHwTableNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryHwTableNumber", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryHwTableNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryHwTableNumber", oldK)
	}
	e.HwTable = &newK

	t.DataIntegrityErrorSummaryHwTableNumber[newK] = e
	delete(t.DataIntegrityErrorSummaryHwTableNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryHwTableNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) GetOrCreateDataIntegrityErrorSummaryHwTableNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber {
	if t.DataIntegrityErrorSummaryHwTableNumber == nil {
		t.DataIntegrityErrorSummaryHwTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber)
	}
	return t.DataIntegrityErrorSummaryHwTableNumber
}

// GetOrCreateDataIntegrityErrorSummaryHwTableNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) GetOrCreateDataIntegrityErrorSummaryHwTableNumber(HwTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber {

	key := HwTable

	if v, ok := t.DataIntegrityErrorSummaryHwTableNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryHwTableNumber(HwTable)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryHwTableNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryHwTableNumber retrieves the value with the specified key from
// the DataIntegrityErrorSummaryHwTableNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) GetDataIntegrityErrorSummaryHwTableNumber(HwTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber {

	if t == nil {
		return nil
	}

	key := HwTable

	if lm, ok := t.DataIntegrityErrorSummaryHwTableNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryHwTableNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber struct to the
// list DataIntegrityErrorSummaryHwTableNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) AppendDataIntegrityErrorSummaryHwTableNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) error {
	if v.HwTable == nil {
		return fmt.Errorf("invalid nil key received for HwTable")
	}

	key := *v.HwTable

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryHwTableNumber == nil {
		t.DataIntegrityErrorSummaryHwTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber)
	}

	if _, ok := t.DataIntegrityErrorSummaryHwTableNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryHwTableNumber %v", key)
	}

	t.DataIntegrityErrorSummaryHwTableNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber struct {
	DataIntegrityErrorSummaryHwTableLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances `path:"data-integrity-error-summary-hw-table-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	DataIntegrityErrorSummaryHwTableLogTableNumbers   *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers   `path:"data-integrity-error-summary-hw-table-log-table-numbers" module:"Cisco-IOS-XR-switch-oper"`
	HwTable                                           *uint32                                                                                                                                                                                                                        `path:"hw-table" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorSummaryHwTableLocationInstances retrieves the value of the DataIntegrityErrorSummaryHwTableLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) GetOrCreateDataIntegrityErrorSummaryHwTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances {
	if t.DataIntegrityErrorSummaryHwTableLocationInstances != nil {
		return t.DataIntegrityErrorSummaryHwTableLocationInstances
	}
	t.DataIntegrityErrorSummaryHwTableLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances{}
	return t.DataIntegrityErrorSummaryHwTableLocationInstances
}

// GetOrCreateDataIntegrityErrorSummaryHwTableLogTableNumbers retrieves the value of the DataIntegrityErrorSummaryHwTableLogTableNumbers field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) GetOrCreateDataIntegrityErrorSummaryHwTableLogTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers {
	if t.DataIntegrityErrorSummaryHwTableLogTableNumbers != nil {
		return t.DataIntegrityErrorSummaryHwTableLogTableNumbers
	}
	t.DataIntegrityErrorSummaryHwTableLogTableNumbers = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers{}
	return t.DataIntegrityErrorSummaryHwTableLogTableNumbers
}

// GetDataIntegrityErrorSummaryHwTableLocationInstances returns the value of the DataIntegrityErrorSummaryHwTableLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber. If the receiver or the field DataIntegrityErrorSummaryHwTableLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) GetDataIntegrityErrorSummaryHwTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances {
	if t != nil && t.DataIntegrityErrorSummaryHwTableLocationInstances != nil {
		return t.DataIntegrityErrorSummaryHwTableLocationInstances
	}
	return nil
}

// GetDataIntegrityErrorSummaryHwTableLogTableNumbers returns the value of the DataIntegrityErrorSummaryHwTableLogTableNumbers struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber. If the receiver or the field DataIntegrityErrorSummaryHwTableLogTableNumbers is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) GetDataIntegrityErrorSummaryHwTableLogTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers {
	if t != nil && t.DataIntegrityErrorSummaryHwTableLogTableNumbers != nil {
		return t.DataIntegrityErrorSummaryHwTableLogTableNumbers
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.HwTable == nil {
		return nil, fmt.Errorf("nil value for key HwTable")
	}

	return map[string]interface{}{
		"hw-table": *t.HwTable,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances struct {
	DataIntegrityErrorSummaryHwTableLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance `path:"data-integrity-error-summary-hw-table-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryHwTableLocationInstance creates a new entry in the DataIntegrityErrorSummaryHwTableLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) NewDataIntegrityErrorSummaryHwTableLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryHwTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryHwTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryHwTableLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryHwTableLocationInstance", key)
	}

	t.DataIntegrityErrorSummaryHwTableLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorSummaryHwTableLocationInstance[key], nil
}

// RenameDataIntegrityErrorSummaryHwTableLocationInstance renames an entry in the list DataIntegrityErrorSummaryHwTableLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) RenameDataIntegrityErrorSummaryHwTableLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorSummaryHwTableLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryHwTableLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryHwTableLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryHwTableLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorSummaryHwTableLocationInstance[newK] = e
	delete(t.DataIntegrityErrorSummaryHwTableLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryHwTableLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) GetOrCreateDataIntegrityErrorSummaryHwTableLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance {
	if t.DataIntegrityErrorSummaryHwTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryHwTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance)
	}
	return t.DataIntegrityErrorSummaryHwTableLocationInstance
}

// GetOrCreateDataIntegrityErrorSummaryHwTableLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) GetOrCreateDataIntegrityErrorSummaryHwTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorSummaryHwTableLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryHwTableLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryHwTableLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryHwTableLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorSummaryHwTableLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) GetDataIntegrityErrorSummaryHwTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorSummaryHwTableLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryHwTableLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance struct to the
// list DataIntegrityErrorSummaryHwTableLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) AppendDataIntegrityErrorSummaryHwTableLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryHwTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryHwTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorSummaryHwTableLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryHwTableLocationInstance %v", key)
	}

	t.DataIntegrityErrorSummaryHwTableLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-location-instances/data-integrity-error-summary-hw-table-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                                                                                                              `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-location-instances/data-integrity-error-summary-hw-table-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                                                                                                                      `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-location-instances/data-integrity-error-summary-hw-table-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-location-instances/data-integrity-error-summary-hw-table-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                          `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-location-instances/data-integrity-error-summary-hw-table-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-location-instances/data-integrity-error-summary-hw-table-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                      `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                                                                                                                      `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                                      `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                                      `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                                                                                                                      `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                                      `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-location-instances/data-integrity-error-summary-hw-table-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-location-instances/data-integrity-error-summary-hw-table-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLocationInstances_DataIntegrityErrorSummaryHwTableLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers struct {
	DataIntegrityErrorSummaryHwTableLogTableNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber `path:"data-integrity-error-summary-hw-table-log-table-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryHwTableLogTableNumber creates a new entry in the DataIntegrityErrorSummaryHwTableLogTableNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) NewDataIntegrityErrorSummaryHwTableLogTableNumber(LogTable uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryHwTableLogTableNumber == nil {
		t.DataIntegrityErrorSummaryHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber)
	}

	key := LogTable

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryHwTableLogTableNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryHwTableLogTableNumber", key)
	}

	t.DataIntegrityErrorSummaryHwTableLogTableNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber{
		LogTable: &LogTable,
	}

	return t.DataIntegrityErrorSummaryHwTableLogTableNumber[key], nil
}

// RenameDataIntegrityErrorSummaryHwTableLogTableNumber renames an entry in the list DataIntegrityErrorSummaryHwTableLogTableNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) RenameDataIntegrityErrorSummaryHwTableLogTableNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorSummaryHwTableLogTableNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryHwTableLogTableNumber", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryHwTableLogTableNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryHwTableLogTableNumber", oldK)
	}
	e.LogTable = &newK

	t.DataIntegrityErrorSummaryHwTableLogTableNumber[newK] = e
	delete(t.DataIntegrityErrorSummaryHwTableLogTableNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryHwTableLogTableNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) GetOrCreateDataIntegrityErrorSummaryHwTableLogTableNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber {
	if t.DataIntegrityErrorSummaryHwTableLogTableNumber == nil {
		t.DataIntegrityErrorSummaryHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber)
	}
	return t.DataIntegrityErrorSummaryHwTableLogTableNumber
}

// GetOrCreateDataIntegrityErrorSummaryHwTableLogTableNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) GetOrCreateDataIntegrityErrorSummaryHwTableLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber {

	key := LogTable

	if v, ok := t.DataIntegrityErrorSummaryHwTableLogTableNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryHwTableLogTableNumber(LogTable)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryHwTableLogTableNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryHwTableLogTableNumber retrieves the value with the specified key from
// the DataIntegrityErrorSummaryHwTableLogTableNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) GetDataIntegrityErrorSummaryHwTableLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber {

	if t == nil {
		return nil
	}

	key := LogTable

	if lm, ok := t.DataIntegrityErrorSummaryHwTableLogTableNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryHwTableLogTableNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber struct to the
// list DataIntegrityErrorSummaryHwTableLogTableNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) AppendDataIntegrityErrorSummaryHwTableLogTableNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber) error {
	if v.LogTable == nil {
		return fmt.Errorf("invalid nil key received for LogTable")
	}

	key := *v.LogTable

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryHwTableLogTableNumber == nil {
		t.DataIntegrityErrorSummaryHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber)
	}

	if _, ok := t.DataIntegrityErrorSummaryHwTableLogTableNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryHwTableLogTableNumber %v", key)
	}

	t.DataIntegrityErrorSummaryHwTableLogTableNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers/data-integrity-error-summary-hw-table-log-table-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber struct {
	DataIntegrityErrorSummaryHwTableLogTableLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances `path:"data-integrity-error-summary-hw-table-log-table-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	LogTable                                                  *uint32                                                                                                                                                                                                                                                                                                                               `path:"log-table" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorSummaryHwTableLogTableLocationInstances retrieves the value of the DataIntegrityErrorSummaryHwTableLogTableLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber) GetOrCreateDataIntegrityErrorSummaryHwTableLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances {
	if t.DataIntegrityErrorSummaryHwTableLogTableLocationInstances != nil {
		return t.DataIntegrityErrorSummaryHwTableLogTableLocationInstances
	}
	t.DataIntegrityErrorSummaryHwTableLogTableLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances{}
	return t.DataIntegrityErrorSummaryHwTableLogTableLocationInstances
}

// GetDataIntegrityErrorSummaryHwTableLogTableLocationInstances returns the value of the DataIntegrityErrorSummaryHwTableLogTableLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber. If the receiver or the field DataIntegrityErrorSummaryHwTableLogTableLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber) GetDataIntegrityErrorSummaryHwTableLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances {
	if t != nil && t.DataIntegrityErrorSummaryHwTableLogTableLocationInstances != nil {
		return t.DataIntegrityErrorSummaryHwTableLogTableLocationInstances
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.LogTable == nil {
		return nil, fmt.Errorf("nil value for key LogTable")
	}

	return map[string]interface{}{
		"log-table": *t.LogTable,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers/data-integrity-error-summary-hw-table-log-table-number/data-integrity-error-summary-hw-table-log-table-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances struct {
	DataIntegrityErrorSummaryHwTableLogTableLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance `path:"data-integrity-error-summary-hw-table-log-table-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryHwTableLogTableLocationInstance creates a new entry in the DataIntegrityErrorSummaryHwTableLogTableLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) NewDataIntegrityErrorSummaryHwTableLogTableLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryHwTableLogTableLocationInstance", key)
	}

	t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance[key], nil
}

// RenameDataIntegrityErrorSummaryHwTableLogTableLocationInstance renames an entry in the list DataIntegrityErrorSummaryHwTableLogTableLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) RenameDataIntegrityErrorSummaryHwTableLogTableLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryHwTableLogTableLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryHwTableLogTableLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance[newK] = e
	delete(t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryHwTableLogTableLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) GetOrCreateDataIntegrityErrorSummaryHwTableLogTableLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance {
	if t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance)
	}
	return t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance
}

// GetOrCreateDataIntegrityErrorSummaryHwTableLogTableLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) GetOrCreateDataIntegrityErrorSummaryHwTableLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryHwTableLogTableLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryHwTableLogTableLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryHwTableLogTableLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorSummaryHwTableLogTableLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) GetDataIntegrityErrorSummaryHwTableLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryHwTableLogTableLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance struct to the
// list DataIntegrityErrorSummaryHwTableLogTableLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) AppendDataIntegrityErrorSummaryHwTableLogTableLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryHwTableLogTableLocationInstance %v", key)
	}

	t.DataIntegrityErrorSummaryHwTableLogTableLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers/data-integrity-error-summary-hw-table-log-table-number/data-integrity-error-summary-hw-table-log-table-location-instances/data-integrity-error-summary-hw-table-log-table-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                                                                                                                                                                                                                             `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers/data-integrity-error-summary-hw-table-log-table-number/data-integrity-error-summary-hw-table-log-table-location-instances/data-integrity-error-summary-hw-table-log-table-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                                     `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers/data-integrity-error-summary-hw-table-log-table-number/data-integrity-error-summary-hw-table-log-table-location-instances/data-integrity-error-summary-hw-table-log-table-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers/data-integrity-error-summary-hw-table-log-table-number/data-integrity-error-summary-hw-table-log-table-location-instances/data-integrity-error-summary-hw-table-log-table-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                                         `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers/data-integrity-error-summary-hw-table-log-table-number/data-integrity-error-summary-hw-table-log-table-location-instances/data-integrity-error-summary-hw-table-log-table-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers/data-integrity-error-summary-hw-table-log-table-number/data-integrity-error-summary-hw-table-log-table-location-instances/data-integrity-error-summary-hw-table-log-table-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                                     `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                     `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                     `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                     `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                     `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                     `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers/data-integrity-error-summary-hw-table-log-table-number/data-integrity-error-summary-hw-table-log-table-location-instances/data-integrity-error-summary-hw-table-log-table-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-hw-table-numbers/data-integrity-error-summary-hw-table-number/data-integrity-error-summary-hw-table-log-table-numbers/data-integrity-error-summary-hw-table-log-table-number/data-integrity-error-summary-hw-table-log-table-location-instances/data-integrity-error-summary-hw-table-log-table-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryHwTableNumbers_DataIntegrityErrorSummaryHwTableNumber_DataIntegrityErrorSummaryHwTableLogTableNumbers_DataIntegrityErrorSummaryHwTableLogTableNumber_DataIntegrityErrorSummaryHwTableLogTableLocationInstances_DataIntegrityErrorSummaryHwTableLogTableLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances struct {
	DataIntegrityErrorSummaryLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance `path:"data-integrity-error-summary-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryLocationInstance creates a new entry in the DataIntegrityErrorSummaryLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) NewDataIntegrityErrorSummaryLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryLocationInstance == nil {
		t.DataIntegrityErrorSummaryLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryLocationInstance", key)
	}

	t.DataIntegrityErrorSummaryLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorSummaryLocationInstance[key], nil
}

// RenameDataIntegrityErrorSummaryLocationInstance renames an entry in the list DataIntegrityErrorSummaryLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) RenameDataIntegrityErrorSummaryLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorSummaryLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorSummaryLocationInstance[newK] = e
	delete(t.DataIntegrityErrorSummaryLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) GetOrCreateDataIntegrityErrorSummaryLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance {
	if t.DataIntegrityErrorSummaryLocationInstance == nil {
		t.DataIntegrityErrorSummaryLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance)
	}
	return t.DataIntegrityErrorSummaryLocationInstance
}

// GetOrCreateDataIntegrityErrorSummaryLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) GetOrCreateDataIntegrityErrorSummaryLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorSummaryLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorSummaryLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) GetDataIntegrityErrorSummaryLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorSummaryLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance struct to the
// list DataIntegrityErrorSummaryLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) AppendDataIntegrityErrorSummaryLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryLocationInstance == nil {
		t.DataIntegrityErrorSummaryLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorSummaryLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryLocationInstance %v", key)
	}

	t.DataIntegrityErrorSummaryLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-location-instances/data-integrity-error-summary-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                 `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-location-instances/data-integrity-error-summary-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                         `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-location-instances/data-integrity-error-summary-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-location-instances/data-integrity-error-summary-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                             `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-location-instances/data-integrity-error-summary-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-location-instances/data-integrity-error-summary-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                         `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                         `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                         `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                         `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                         `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                         `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-location-instances/data-integrity-error-summary-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-location-instances/data-integrity-error-summary-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLocationInstances_DataIntegrityErrorSummaryLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers struct {
	DataIntegrityErrorSummaryLogTableNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber `path:"data-integrity-error-summary-log-table-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryLogTableNumber creates a new entry in the DataIntegrityErrorSummaryLogTableNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) NewDataIntegrityErrorSummaryLogTableNumber(LogTable uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryLogTableNumber == nil {
		t.DataIntegrityErrorSummaryLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber)
	}

	key := LogTable

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryLogTableNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryLogTableNumber", key)
	}

	t.DataIntegrityErrorSummaryLogTableNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber{
		LogTable: &LogTable,
	}

	return t.DataIntegrityErrorSummaryLogTableNumber[key], nil
}

// RenameDataIntegrityErrorSummaryLogTableNumber renames an entry in the list DataIntegrityErrorSummaryLogTableNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) RenameDataIntegrityErrorSummaryLogTableNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorSummaryLogTableNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryLogTableNumber", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryLogTableNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryLogTableNumber", oldK)
	}
	e.LogTable = &newK

	t.DataIntegrityErrorSummaryLogTableNumber[newK] = e
	delete(t.DataIntegrityErrorSummaryLogTableNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryLogTableNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) GetOrCreateDataIntegrityErrorSummaryLogTableNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber {
	if t.DataIntegrityErrorSummaryLogTableNumber == nil {
		t.DataIntegrityErrorSummaryLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber)
	}
	return t.DataIntegrityErrorSummaryLogTableNumber
}

// GetOrCreateDataIntegrityErrorSummaryLogTableNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) GetOrCreateDataIntegrityErrorSummaryLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber {

	key := LogTable

	if v, ok := t.DataIntegrityErrorSummaryLogTableNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryLogTableNumber(LogTable)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryLogTableNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryLogTableNumber retrieves the value with the specified key from
// the DataIntegrityErrorSummaryLogTableNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) GetDataIntegrityErrorSummaryLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber {

	if t == nil {
		return nil
	}

	key := LogTable

	if lm, ok := t.DataIntegrityErrorSummaryLogTableNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryLogTableNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber struct to the
// list DataIntegrityErrorSummaryLogTableNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) AppendDataIntegrityErrorSummaryLogTableNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber) error {
	if v.LogTable == nil {
		return fmt.Errorf("invalid nil key received for LogTable")
	}

	key := *v.LogTable

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryLogTableNumber == nil {
		t.DataIntegrityErrorSummaryLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber)
	}

	if _, ok := t.DataIntegrityErrorSummaryLogTableNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryLogTableNumber %v", key)
	}

	t.DataIntegrityErrorSummaryLogTableNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers/data-integrity-error-summary-log-table-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber struct {
	DataIntegrityErrorSummaryLogTableLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances `path:"data-integrity-error-summary-log-table-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	LogTable                                           *uint32                                                                                                                                                                                                                           `path:"log-table" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorSummaryLogTableLocationInstances retrieves the value of the DataIntegrityErrorSummaryLogTableLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber) GetOrCreateDataIntegrityErrorSummaryLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances {
	if t.DataIntegrityErrorSummaryLogTableLocationInstances != nil {
		return t.DataIntegrityErrorSummaryLogTableLocationInstances
	}
	t.DataIntegrityErrorSummaryLogTableLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances{}
	return t.DataIntegrityErrorSummaryLogTableLocationInstances
}

// GetDataIntegrityErrorSummaryLogTableLocationInstances returns the value of the DataIntegrityErrorSummaryLogTableLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber. If the receiver or the field DataIntegrityErrorSummaryLogTableLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber) GetDataIntegrityErrorSummaryLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances {
	if t != nil && t.DataIntegrityErrorSummaryLogTableLocationInstances != nil {
		return t.DataIntegrityErrorSummaryLogTableLocationInstances
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.LogTable == nil {
		return nil, fmt.Errorf("nil value for key LogTable")
	}

	return map[string]interface{}{
		"log-table": *t.LogTable,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers/data-integrity-error-summary-log-table-number/data-integrity-error-summary-log-table-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances struct {
	DataIntegrityErrorSummaryLogTableLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance `path:"data-integrity-error-summary-log-table-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryLogTableLocationInstance creates a new entry in the DataIntegrityErrorSummaryLogTableLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) NewDataIntegrityErrorSummaryLogTableLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryLogTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryLogTableLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryLogTableLocationInstance", key)
	}

	t.DataIntegrityErrorSummaryLogTableLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorSummaryLogTableLocationInstance[key], nil
}

// RenameDataIntegrityErrorSummaryLogTableLocationInstance renames an entry in the list DataIntegrityErrorSummaryLogTableLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) RenameDataIntegrityErrorSummaryLogTableLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorSummaryLogTableLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryLogTableLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryLogTableLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryLogTableLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorSummaryLogTableLocationInstance[newK] = e
	delete(t.DataIntegrityErrorSummaryLogTableLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryLogTableLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) GetOrCreateDataIntegrityErrorSummaryLogTableLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance {
	if t.DataIntegrityErrorSummaryLogTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance)
	}
	return t.DataIntegrityErrorSummaryLogTableLocationInstance
}

// GetOrCreateDataIntegrityErrorSummaryLogTableLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) GetOrCreateDataIntegrityErrorSummaryLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorSummaryLogTableLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryLogTableLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryLogTableLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryLogTableLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorSummaryLogTableLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) GetDataIntegrityErrorSummaryLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorSummaryLogTableLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryLogTableLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance struct to the
// list DataIntegrityErrorSummaryLogTableLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) AppendDataIntegrityErrorSummaryLogTableLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryLogTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorSummaryLogTableLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryLogTableLocationInstance %v", key)
	}

	t.DataIntegrityErrorSummaryLogTableLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers/data-integrity-error-summary-log-table-number/data-integrity-error-summary-log-table-location-instances/data-integrity-error-summary-log-table-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                                                                                                                  `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers/data-integrity-error-summary-log-table-number/data-integrity-error-summary-log-table-location-instances/data-integrity-error-summary-log-table-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                                                                                                                          `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers/data-integrity-error-summary-log-table-number/data-integrity-error-summary-log-table-location-instances/data-integrity-error-summary-log-table-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers/data-integrity-error-summary-log-table-number/data-integrity-error-summary-log-table-location-instances/data-integrity-error-summary-log-table-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                              `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers/data-integrity-error-summary-log-table-number/data-integrity-error-summary-log-table-location-instances/data-integrity-error-summary-log-table-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers/data-integrity-error-summary-log-table-number/data-integrity-error-summary-log-table-location-instances/data-integrity-error-summary-log-table-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                          `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                                                                                                                          `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                                          `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                                          `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                                                                                                                          `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                                          `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers/data-integrity-error-summary-log-table-number/data-integrity-error-summary-log-table-location-instances/data-integrity-error-summary-log-table-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-log-table-numbers/data-integrity-error-summary-log-table-number/data-integrity-error-summary-log-table-location-instances/data-integrity-error-summary-log-table-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryLogTableNumbers_DataIntegrityErrorSummaryLogTableNumber_DataIntegrityErrorSummaryLogTableLocationInstances_DataIntegrityErrorSummaryLogTableLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers struct {
	DataIntegrityErrorSummaryMemTypeNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber `path:"data-integrity-error-summary-mem-type-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryMemTypeNumber creates a new entry in the DataIntegrityErrorSummaryMemTypeNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) NewDataIntegrityErrorSummaryMemTypeNumber(MemType uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeNumber == nil {
		t.DataIntegrityErrorSummaryMemTypeNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber)
	}

	key := MemType

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryMemTypeNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryMemTypeNumber", key)
	}

	t.DataIntegrityErrorSummaryMemTypeNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber{
		MemType: &MemType,
	}

	return t.DataIntegrityErrorSummaryMemTypeNumber[key], nil
}

// RenameDataIntegrityErrorSummaryMemTypeNumber renames an entry in the list DataIntegrityErrorSummaryMemTypeNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) RenameDataIntegrityErrorSummaryMemTypeNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorSummaryMemTypeNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryMemTypeNumber", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryMemTypeNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryMemTypeNumber", oldK)
	}
	e.MemType = &newK

	t.DataIntegrityErrorSummaryMemTypeNumber[newK] = e
	delete(t.DataIntegrityErrorSummaryMemTypeNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) GetOrCreateDataIntegrityErrorSummaryMemTypeNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber {
	if t.DataIntegrityErrorSummaryMemTypeNumber == nil {
		t.DataIntegrityErrorSummaryMemTypeNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber)
	}
	return t.DataIntegrityErrorSummaryMemTypeNumber
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) GetOrCreateDataIntegrityErrorSummaryMemTypeNumber(MemType uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber {

	key := MemType

	if v, ok := t.DataIntegrityErrorSummaryMemTypeNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryMemTypeNumber(MemType)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryMemTypeNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryMemTypeNumber retrieves the value with the specified key from
// the DataIntegrityErrorSummaryMemTypeNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) GetDataIntegrityErrorSummaryMemTypeNumber(MemType uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber {

	if t == nil {
		return nil
	}

	key := MemType

	if lm, ok := t.DataIntegrityErrorSummaryMemTypeNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryMemTypeNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber struct to the
// list DataIntegrityErrorSummaryMemTypeNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) AppendDataIntegrityErrorSummaryMemTypeNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) error {
	if v.MemType == nil {
		return fmt.Errorf("invalid nil key received for MemType")
	}

	key := *v.MemType

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeNumber == nil {
		t.DataIntegrityErrorSummaryMemTypeNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber)
	}

	if _, ok := t.DataIntegrityErrorSummaryMemTypeNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryMemTypeNumber %v", key)
	}

	t.DataIntegrityErrorSummaryMemTypeNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber struct {
	DataIntegrityErrorSummaryMemTypeHwTableNumbers    *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers    `path:"data-integrity-error-summary-mem-type-hw-table-numbers" module:"Cisco-IOS-XR-switch-oper"`
	DataIntegrityErrorSummaryMemTypeLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances `path:"data-integrity-error-summary-mem-type-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	MemType                                           *uint32                                                                                                                                                                                                                        `path:"mem-type" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableNumbers retrieves the value of the DataIntegrityErrorSummaryMemTypeHwTableNumbers field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers {
	if t.DataIntegrityErrorSummaryMemTypeHwTableNumbers != nil {
		return t.DataIntegrityErrorSummaryMemTypeHwTableNumbers
	}
	t.DataIntegrityErrorSummaryMemTypeHwTableNumbers = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers{}
	return t.DataIntegrityErrorSummaryMemTypeHwTableNumbers
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeLocationInstances retrieves the value of the DataIntegrityErrorSummaryMemTypeLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) GetOrCreateDataIntegrityErrorSummaryMemTypeLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances {
	if t.DataIntegrityErrorSummaryMemTypeLocationInstances != nil {
		return t.DataIntegrityErrorSummaryMemTypeLocationInstances
	}
	t.DataIntegrityErrorSummaryMemTypeLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances{}
	return t.DataIntegrityErrorSummaryMemTypeLocationInstances
}

// GetDataIntegrityErrorSummaryMemTypeHwTableNumbers returns the value of the DataIntegrityErrorSummaryMemTypeHwTableNumbers struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber. If the receiver or the field DataIntegrityErrorSummaryMemTypeHwTableNumbers is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) GetDataIntegrityErrorSummaryMemTypeHwTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers {
	if t != nil && t.DataIntegrityErrorSummaryMemTypeHwTableNumbers != nil {
		return t.DataIntegrityErrorSummaryMemTypeHwTableNumbers
	}
	return nil
}

// GetDataIntegrityErrorSummaryMemTypeLocationInstances returns the value of the DataIntegrityErrorSummaryMemTypeLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber. If the receiver or the field DataIntegrityErrorSummaryMemTypeLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) GetDataIntegrityErrorSummaryMemTypeLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances {
	if t != nil && t.DataIntegrityErrorSummaryMemTypeLocationInstances != nil {
		return t.DataIntegrityErrorSummaryMemTypeLocationInstances
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.MemType == nil {
		return nil, fmt.Errorf("nil value for key MemType")
	}

	return map[string]interface{}{
		"mem-type": *t.MemType,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers struct {
	DataIntegrityErrorSummaryMemTypeHwTableNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber `path:"data-integrity-error-summary-mem-type-hw-table-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryMemTypeHwTableNumber creates a new entry in the DataIntegrityErrorSummaryMemTypeHwTableNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) NewDataIntegrityErrorSummaryMemTypeHwTableNumber(HwTable uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeHwTableNumber == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber)
	}

	key := HwTable

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryMemTypeHwTableNumber", key)
	}

	t.DataIntegrityErrorSummaryMemTypeHwTableNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber{
		HwTable: &HwTable,
	}

	return t.DataIntegrityErrorSummaryMemTypeHwTableNumber[key], nil
}

// RenameDataIntegrityErrorSummaryMemTypeHwTableNumber renames an entry in the list DataIntegrityErrorSummaryMemTypeHwTableNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) RenameDataIntegrityErrorSummaryMemTypeHwTableNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryMemTypeHwTableNumber", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryMemTypeHwTableNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryMemTypeHwTableNumber", oldK)
	}
	e.HwTable = &newK

	t.DataIntegrityErrorSummaryMemTypeHwTableNumber[newK] = e
	delete(t.DataIntegrityErrorSummaryMemTypeHwTableNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber {
	if t.DataIntegrityErrorSummaryMemTypeHwTableNumber == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber)
	}
	return t.DataIntegrityErrorSummaryMemTypeHwTableNumber
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableNumber(HwTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber {

	key := HwTable

	if v, ok := t.DataIntegrityErrorSummaryMemTypeHwTableNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryMemTypeHwTableNumber(HwTable)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryMemTypeHwTableNumber retrieves the value with the specified key from
// the DataIntegrityErrorSummaryMemTypeHwTableNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) GetDataIntegrityErrorSummaryMemTypeHwTableNumber(HwTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber {

	if t == nil {
		return nil
	}

	key := HwTable

	if lm, ok := t.DataIntegrityErrorSummaryMemTypeHwTableNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryMemTypeHwTableNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber struct to the
// list DataIntegrityErrorSummaryMemTypeHwTableNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) AppendDataIntegrityErrorSummaryMemTypeHwTableNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) error {
	if v.HwTable == nil {
		return fmt.Errorf("invalid nil key received for HwTable")
	}

	key := *v.HwTable

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeHwTableNumber == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber)
	}

	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryMemTypeHwTableNumber %v", key)
	}

	t.DataIntegrityErrorSummaryMemTypeHwTableNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber struct {
	DataIntegrityErrorSummaryMemTypeHwTableLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances `path:"data-integrity-error-summary-mem-type-hw-table-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers   *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers   `path:"data-integrity-error-summary-mem-type-hw-table-log-table-numbers" module:"Cisco-IOS-XR-switch-oper"`
	HwTable                                                  *uint32                                                                                                                                                                                                                                                                                                                            `path:"hw-table" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLocationInstances retrieves the value of the DataIntegrityErrorSummaryMemTypeHwTableLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances {
	if t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstances != nil {
		return t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstances
	}
	t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances{}
	return t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstances
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers retrieves the value of the DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers {
	if t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers != nil {
		return t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers
	}
	t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers{}
	return t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers
}

// GetDataIntegrityErrorSummaryMemTypeHwTableLocationInstances returns the value of the DataIntegrityErrorSummaryMemTypeHwTableLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber. If the receiver or the field DataIntegrityErrorSummaryMemTypeHwTableLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) GetDataIntegrityErrorSummaryMemTypeHwTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances {
	if t != nil && t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstances != nil {
		return t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstances
	}
	return nil
}

// GetDataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers returns the value of the DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber. If the receiver or the field DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) GetDataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers {
	if t != nil && t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers != nil {
		return t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.HwTable == nil {
		return nil, fmt.Errorf("nil value for key HwTable")
	}

	return map[string]interface{}{
		"hw-table": *t.HwTable,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances struct {
	DataIntegrityErrorSummaryMemTypeHwTableLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance `path:"data-integrity-error-summary-mem-type-hw-table-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryMemTypeHwTableLocationInstance creates a new entry in the DataIntegrityErrorSummaryMemTypeHwTableLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) NewDataIntegrityErrorSummaryMemTypeHwTableLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryMemTypeHwTableLocationInstance", key)
	}

	t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance[key], nil
}

// RenameDataIntegrityErrorSummaryMemTypeHwTableLocationInstance renames an entry in the list DataIntegrityErrorSummaryMemTypeHwTableLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) RenameDataIntegrityErrorSummaryMemTypeHwTableLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryMemTypeHwTableLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryMemTypeHwTableLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance[newK] = e
	delete(t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance {
	if t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance)
	}
	return t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryMemTypeHwTableLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryMemTypeHwTableLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorSummaryMemTypeHwTableLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) GetDataIntegrityErrorSummaryMemTypeHwTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryMemTypeHwTableLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance struct to the
// list DataIntegrityErrorSummaryMemTypeHwTableLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) AppendDataIntegrityErrorSummaryMemTypeHwTableLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryMemTypeHwTableLocationInstance %v", key)
	}

	t.DataIntegrityErrorSummaryMemTypeHwTableLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-location-instances/data-integrity-error-summary-mem-type-hw-table-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                                                                                                                                                                                                                         `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-location-instances/data-integrity-error-summary-mem-type-hw-table-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                                 `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-location-instances/data-integrity-error-summary-mem-type-hw-table-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-location-instances/data-integrity-error-summary-mem-type-hw-table-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                                     `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-location-instances/data-integrity-error-summary-mem-type-hw-table-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-location-instances/data-integrity-error-summary-mem-type-hw-table-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                                 `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                 `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                 `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                 `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                 `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                 `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-location-instances/data-integrity-error-summary-mem-type-hw-table-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-location-instances/data-integrity-error-summary-mem-type-hw-table-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers struct {
	DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber `path:"data-integrity-error-summary-mem-type-hw-table-log-table-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber creates a new entry in the DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) NewDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber(LogTable uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber)
	}

	key := LogTable

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber", key)
	}

	t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber{
		LogTable: &LogTable,
	}

	return t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber[key], nil
}

// RenameDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber renames an entry in the list DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) RenameDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber(oldK, newK uint32) error {
	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber", oldK)
	}
	e.LogTable = &newK

	t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber[newK] = e
	delete(t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber {
	if t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber)
	}
	return t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber {

	key := LogTable

	if v, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber(LogTable)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber retrieves the value with the specified key from
// the DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) GetDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber(LogTable uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber {

	if t == nil {
		return nil
	}

	key := LogTable

	if lm, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber struct to the
// list DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) AppendDataIntegrityErrorSummaryMemTypeHwTableLogTableNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber) error {
	if v.LogTable == nil {
		return fmt.Errorf("invalid nil key received for LogTable")
	}

	key := *v.LogTable

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber)
	}

	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber %v", key)
	}

	t.DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers/data-integrity-error-summary-mem-type-hw-table-log-table-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber struct {
	DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances `path:"data-integrity-error-summary-mem-type-hw-table-log-table-location-instances" module:"Cisco-IOS-XR-switch-oper"`
	LogTable                                                         *uint32                                                                                                                                                                                                                                                                                                                                                                                                                                                 `path:"log-table" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber) IsYANGGoStruct() {
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances retrieves the value of the DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances {
	if t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances != nil {
		return t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances
	}
	t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances{}
	return t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances
}

// GetDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances returns the value of the DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber. If the receiver or the field DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber) GetDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances {
	if t != nil && t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances != nil {
		return t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.LogTable == nil {
		return nil, fmt.Errorf("nil value for key LogTable")
	}

	return map[string]interface{}{
		"log-table": *t.LogTable,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers/data-integrity-error-summary-mem-type-hw-table-log-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances struct {
	DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance `path:"data-integrity-error-summary-mem-type-hw-table-log-table-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance creates a new entry in the DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) NewDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance", key)
	}

	t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance[key], nil
}

// RenameDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance renames an entry in the list DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) RenameDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance[newK] = e
	delete(t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance {
	if t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance)
	}
	return t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) GetDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance struct to the
// list DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) AppendDataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance == nil {
		t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance %v", key)
	}

	t.DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers/data-integrity-error-summary-mem-type-hw-table-log-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-location-instances/data-integrity-error-summary-mem-type-hw-table-log-table-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string`path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers/data-integrity-error-summary-mem-type-hw-table-log-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-location-instances/data-integrity-error-summary-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint`path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers/data-integrity-error-summary-mem-type-hw-table-log-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-location-instances/data-integrity-error-summary-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers/data-integrity-error-summary-mem-type-hw-table-log-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-location-instances/data-integrity-error-summary-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint`path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers/data-integrity-error-summary-mem-type-hw-table-log-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-location-instances/data-integrity-error-summary-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers/data-integrity-error-summary-mem-type-hw-table-log-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-location-instances/data-integrity-error-summary-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint`path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint`path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint`path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint`path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint`path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers/data-integrity-error-summary-mem-type-hw-table-log-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-location-instances/data-integrity-error-summary-mem-type-hw-table-log-table-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-hw-table-numbers/data-integrity-error-summary-mem-type-hw-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-numbers/data-integrity-error-summary-mem-type-hw-table-log-table-number/data-integrity-error-summary-mem-type-hw-table-log-table-location-instances/data-integrity-error-summary-mem-type-hw-table-log-table-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeHwTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumbers_DataIntegrityErrorSummaryMemTypeHwTableLogTableNumber_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstances_DataIntegrityErrorSummaryMemTypeHwTableLogTableLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-location-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances struct {
	DataIntegrityErrorSummaryMemTypeLocationInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance `path:"data-integrity-error-summary-mem-type-location-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) IsYANGGoStruct() {
}

// NewDataIntegrityErrorSummaryMemTypeLocationInstance creates a new entry in the DataIntegrityErrorSummaryMemTypeLocationInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) NewDataIntegrityErrorSummaryMemTypeLocationInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeLocationInstance == nil {
		t.DataIntegrityErrorSummaryMemTypeLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DataIntegrityErrorSummaryMemTypeLocationInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DataIntegrityErrorSummaryMemTypeLocationInstance", key)
	}

	t.DataIntegrityErrorSummaryMemTypeLocationInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance{
		NodeId: &NodeId,
	}

	return t.DataIntegrityErrorSummaryMemTypeLocationInstance[key], nil
}

// RenameDataIntegrityErrorSummaryMemTypeLocationInstance renames an entry in the list DataIntegrityErrorSummaryMemTypeLocationInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) RenameDataIntegrityErrorSummaryMemTypeLocationInstance(oldK, newK string) error {
	if _, ok := t.DataIntegrityErrorSummaryMemTypeLocationInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DataIntegrityErrorSummaryMemTypeLocationInstance", newK)
	}

	e, ok := t.DataIntegrityErrorSummaryMemTypeLocationInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DataIntegrityErrorSummaryMemTypeLocationInstance", oldK)
	}
	e.NodeId = &newK

	t.DataIntegrityErrorSummaryMemTypeLocationInstance[newK] = e
	delete(t.DataIntegrityErrorSummaryMemTypeLocationInstance, oldK)
	return nil
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeLocationInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) GetOrCreateDataIntegrityErrorSummaryMemTypeLocationInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance {
	if t.DataIntegrityErrorSummaryMemTypeLocationInstance == nil {
		t.DataIntegrityErrorSummaryMemTypeLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance)
	}
	return t.DataIntegrityErrorSummaryMemTypeLocationInstance
}

// GetOrCreateDataIntegrityErrorSummaryMemTypeLocationInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) GetOrCreateDataIntegrityErrorSummaryMemTypeLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance {

	key := NodeId

	if v, ok := t.DataIntegrityErrorSummaryMemTypeLocationInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDataIntegrityErrorSummaryMemTypeLocationInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDataIntegrityErrorSummaryMemTypeLocationInstance got unexpected error: %v", err))
	}
	return v
}

// GetDataIntegrityErrorSummaryMemTypeLocationInstance retrieves the value with the specified key from
// the DataIntegrityErrorSummaryMemTypeLocationInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) GetDataIntegrityErrorSummaryMemTypeLocationInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DataIntegrityErrorSummaryMemTypeLocationInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDataIntegrityErrorSummaryMemTypeLocationInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance struct to the
// list DataIntegrityErrorSummaryMemTypeLocationInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) AppendDataIntegrityErrorSummaryMemTypeLocationInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DataIntegrityErrorSummaryMemTypeLocationInstance == nil {
		t.DataIntegrityErrorSummaryMemTypeLocationInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance)
	}

	if _, ok := t.DataIntegrityErrorSummaryMemTypeLocationInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DataIntegrityErrorSummaryMemTypeLocationInstance %v", key)
	}

	t.DataIntegrityErrorSummaryMemTypeLocationInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-location-instances/data-integrity-error-summary-mem-type-location-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance struct {
	EthswDataIntegrityErrorHistoryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo `path:"ethsw-data-integrity-error-history-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorInformation []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation `path:"ethsw-data-integrity-error-information" module:"Cisco-IOS-XR-switch-oper"`
	EthswDataIntegrityErrorSummaryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo `path:"ethsw-data-integrity-error-summary-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                  *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo                    `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                             *string                                                                                                                                                                                                                                                                                                              `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-location-instances/data-integrity-error-summary-mem-type-location-instance/ethsw-data-integrity-error-history-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo struct {
	EthswDataIntegrityErrorHistoryEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo `path:"ethsw-data-integrity-error-history-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                         *uint32                                                                                                                                                                                                                                                                                                                                                      `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-location-instances/data-integrity-error-summary-mem-type-location-instance/ethsw-data-integrity-error-history-info/ethsw-data-integrity-error-history-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo struct {
	CorrectionMethod   *string `path:"correction-method" module:"Cisco-IOS-XR-switch-oper"`
	ErrorStatus        *string `path:"error-status" module:"Cisco-IOS-XR-switch-oper"`
	ErrorTime          *string `path:"error-time" module:"Cisco-IOS-XR-switch-oper"`
	ErrorType          *string `path:"error-type" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable      *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableIndex *string `path:"hardware-table-index" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName  *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance           *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	Interrupt          *uint32 `path:"interrupt" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable       *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableIndex  *string `path:"logical-table-index" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName   *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryRow          *uint32 `path:"memory-row" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType         *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName     *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryUsage        *string `path:"memory-usage" module:"Cisco-IOS-XR-switch-oper"`
	TcamRuleIndex      *string `path:"tcam-rule-index" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorHistoryInfo_EthswDataIntegrityErrorHistoryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-location-instances/data-integrity-error-summary-mem-type-location-instance/ethsw-data-integrity-error-information YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation struct {
	EthswDataIntegrityErrorInformationEntryInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo `path:"ethsw-data-integrity-error-information-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                          `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-location-instances/data-integrity-error-summary-mem-type-location-instance/ethsw-data-integrity-error-information/ethsw-data-integrity-error-information-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTable                          *string `path:"hardware-table" module:"Cisco-IOS-XR-switch-oper"`
	HardwareTableName                      *string `path:"hardware-table-name" module:"Cisco-IOS-XR-switch-oper"`
	Instance                               *uint32 `path:"instance" module:"Cisco-IOS-XR-switch-oper"`
	LastErrorTime                          *string `path:"last-error-time" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTable                           *string `path:"logical-table" module:"Cisco-IOS-XR-switch-oper"`
	LogicalTableName                       *string `path:"logical-table-name" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ProtectionType                         *string `path:"protection-type" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorInformation_EthswDataIntegrityErrorInformationEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-location-instances/data-integrity-error-summary-mem-type-location-instance/ethsw-data-integrity-error-summary-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo struct {
	EthswDataIntegrityErrorSummaryEntryInfo     []*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo `path:"ethsw-data-integrity-error-summary-entry-info" module:"Cisco-IOS-XR-switch-oper"`
	NumberOfEntries                             *uint32                                                                                                                                                                                                                                                                                                                                                      `path:"number-of-entries" module:"Cisco-IOS-XR-switch-oper"`
	TotalCorrectedErrorCount                    *uint64                                                                                                                                                                                                                                                                                                                                                      `path:"total-corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalMultiBitErrorCorrectionCodeErrorCount  *uint64                                                                                                                                                                                                                                                                                                                                                      `path:"total-multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalParityErrorCount                       *uint64                                                                                                                                                                                                                                                                                                                                                      `path:"total-parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalSingleBitErrorCorrectionCodeErrorCount *uint64                                                                                                                                                                                                                                                                                                                                                      `path:"total-single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	TotalUncorrectedErrorCount                  *uint64                                                                                                                                                                                                                                                                                                                                                      `path:"total-uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-location-instances/data-integrity-error-summary-mem-type-location-instance/ethsw-data-integrity-error-summary-info/ethsw-data-integrity-error-summary-entry-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo struct {
	CorrectedErrorCount                    *uint32 `path:"corrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
	MemoryType                             *uint32 `path:"memory-type" module:"Cisco-IOS-XR-switch-oper"`
	MemoryTypeName                         *string `path:"memory-type-name" module:"Cisco-IOS-XR-switch-oper"`
	MultiBitErrorCorrectionCodeErrorCount  *uint32 `path:"multi-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	ParityErrorCount                       *uint32 `path:"parity-error-count" module:"Cisco-IOS-XR-switch-oper"`
	SingleBitErrorCorrectionCodeErrorCount *uint32 `path:"single-bit-error-correction-code-error-count" module:"Cisco-IOS-XR-switch-oper"`
	UncorrectedErrorCount                  *uint32 `path:"uncorrected-error-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswDataIntegrityErrorSummaryInfo_EthswDataIntegrityErrorSummaryEntryInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/data-integrity/data-integrity-error/data-integrity-error-summary/data-integrity-error-summary-mem-type-numbers/data-integrity-error-summary-mem-type-number/data-integrity-error-summary-mem-type-location-instances/data-integrity-error-summary-mem-type-location-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_DataIntegrity_DataIntegrityError_DataIntegrityErrorSummary_DataIntegrityErrorSummaryMemTypeNumbers_DataIntegrityErrorSummaryMemTypeNumber_DataIntegrityErrorSummaryMemTypeLocationInstances_DataIntegrityErrorSummaryMemTypeLocationInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Debug represents the /Cisco-IOS-XR-switch-oper/show-switch/debug YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Debug struct {
	DebugCounters *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters `path:"debug-counters" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Debug implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug) IsYANGGoStruct() {}

// GetOrCreateDebugCounters retrieves the value of the DebugCounters field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug) GetOrCreateDebugCounters() *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters {
	if t.DebugCounters != nil {
		return t.DebugCounters
	}
	t.DebugCounters = &Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters{}
	return t.DebugCounters
}

// GetDebugCounters returns the value of the DebugCounters struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Debug. If the receiver or the field DebugCounters is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug) GetDebugCounters() *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters {
	if t != nil && t.DebugCounters != nil {
		return t.DebugCounters
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Debug"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Debug.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters represents the /Cisco-IOS-XR-switch-oper/show-switch/debug/debug-counters YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters struct {
	DebugCountersInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances `path:"debug-counters-instances" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters) IsYANGGoStruct() {}

// GetOrCreateDebugCountersInstances retrieves the value of the DebugCountersInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters) GetOrCreateDebugCountersInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances {
	if t.DebugCountersInstances != nil {
		return t.DebugCountersInstances
	}
	t.DebugCountersInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances{}
	return t.DebugCountersInstances
}

// GetDebugCountersInstances returns the value of the DebugCountersInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters. If the receiver or the field DebugCountersInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters) GetDebugCountersInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances {
	if t != nil && t.DebugCountersInstances != nil {
		return t.DebugCountersInstances
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/debug/debug-counters/debug-counters-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances struct {
	DebugCountersInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance `path:"debug-counters-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) IsYANGGoStruct() {
}

// NewDebugCountersInstance creates a new entry in the DebugCountersInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) NewDebugCountersInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DebugCountersInstance == nil {
		t.DebugCountersInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.DebugCountersInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list DebugCountersInstance", key)
	}

	t.DebugCountersInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance{
		NodeId: &NodeId,
	}

	return t.DebugCountersInstance[key], nil
}

// RenameDebugCountersInstance renames an entry in the list DebugCountersInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) RenameDebugCountersInstance(oldK, newK string) error {
	if _, ok := t.DebugCountersInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in DebugCountersInstance", newK)
	}

	e, ok := t.DebugCountersInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in DebugCountersInstance", oldK)
	}
	e.NodeId = &newK

	t.DebugCountersInstance[newK] = e
	delete(t.DebugCountersInstance, oldK)
	return nil
}

// GetOrCreateDebugCountersInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) GetOrCreateDebugCountersInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance {
	if t.DebugCountersInstance == nil {
		t.DebugCountersInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance)
	}
	return t.DebugCountersInstance
}

// GetOrCreateDebugCountersInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) GetOrCreateDebugCountersInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance {

	key := NodeId

	if v, ok := t.DebugCountersInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewDebugCountersInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateDebugCountersInstance got unexpected error: %v", err))
	}
	return v
}

// GetDebugCountersInstance retrieves the value with the specified key from
// the DebugCountersInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) GetDebugCountersInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.DebugCountersInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendDebugCountersInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance struct to the
// list DebugCountersInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) AppendDebugCountersInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.DebugCountersInstance == nil {
		t.DebugCountersInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance)
	}

	if _, ok := t.DebugCountersInstance[key]; ok {
		return fmt.Errorf("duplicate key for list DebugCountersInstance %v", key)
	}

	t.DebugCountersInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/debug/debug-counters/debug-counters-instances/debug-counters-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance struct {
	DmaHealthChecks                      *string                                                                                                                                    `path:"dma-health-checks" module:"Cisco-IOS-XR-switch-oper"`
	DmaMaxRxPacketsDequeuedPerInterrupt  *uint64                                                                                                                                    `path:"dma-max-rx-packets-dequeued-per-interrupt" module:"Cisco-IOS-XR-switch-oper"`
	DmaMaxTxPacketsFreedPerInterrupt     *uint64                                                                                                                                    `path:"dma-max-tx-packets-freed-per-interrupt" module:"Cisco-IOS-XR-switch-oper"`
	DmaRxPacketDequeueErrors             *uint64                                                                                                                                    `path:"dma-rx-packet-dequeue-errors" module:"Cisco-IOS-XR-switch-oper"`
	DmaRxPacketsDequeued                 *uint64                                                                                                                                    `path:"dma-rx-packets-dequeued" module:"Cisco-IOS-XR-switch-oper"`
	DmaTxBufferAllocationCount           *uint64                                                                                                                                    `path:"dma-tx-buffer-allocation-count" module:"Cisco-IOS-XR-switch-oper"`
	DmaTxBufferFreeCount                 *uint64                                                                                                                                    `path:"dma-tx-buffer-free-count" module:"Cisco-IOS-XR-switch-oper"`
	DmaTxPacketCompletionErrors          *uint64                                                                                                                                    `path:"dma-tx-packet-completion-errors" module:"Cisco-IOS-XR-switch-oper"`
	DmaTxPacketMessageTooBigErrors       *uint64                                                                                                                                    `path:"dma-tx-packet-message-too-big-errors" module:"Cisco-IOS-XR-switch-oper"`
	DmaTxPacketNoBufferErrors            *uint64                                                                                                                                    `path:"dma-tx-packet-no-buffer-errors" module:"Cisco-IOS-XR-switch-oper"`
	DmaTxPacketNoMessageErrors           *uint64                                                                                                                                    `path:"dma-tx-packet-no-message-errors" module:"Cisco-IOS-XR-switch-oper"`
	DmaTxPacketQueueErrors               *uint64                                                                                                                                    `path:"dma-tx-packet-queue-errors" module:"Cisco-IOS-XR-switch-oper"`
	DmaTxPacketsCompleted                *uint64                                                                                                                                    `path:"dma-tx-packets-completed" module:"Cisco-IOS-XR-switch-oper"`
	DmaTxPacketsQueued                   *uint64                                                                                                                                    `path:"dma-tx-packets-queued" module:"Cisco-IOS-XR-switch-oper"`
	EthswDebugCountersCoreStatisticsInfo []*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo `path:"ethsw-debug-counters-core-statistics-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo                    *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo                      `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	NodeId                               *string                                                                                                                                    `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
	RxThreadWatchdogCount                *uint64                                                                                                                                    `path:"rx-thread-watchdog-count" module:"Cisco-IOS-XR-switch-oper"`
	TaskLockLongestHeldEvent             *uint32                                                                                                                                    `path:"task-lock-longest-held-event" module:"Cisco-IOS-XR-switch-oper"`
	TaskLockLongestHeldTime              *uint64                                                                                                                                    `path:"task-lock-longest-held-time" module:"Cisco-IOS-XR-switch-oper"`
	TaskLockLongestWaitEvent             *uint32                                                                                                                                    `path:"task-lock-longest-wait-event" module:"Cisco-IOS-XR-switch-oper"`
	TaskLockLongestWaitTime              *uint64                                                                                                                                    `path:"task-lock-longest-wait-time" module:"Cisco-IOS-XR-switch-oper"`
	TaskUnlockLongestWaitEvent           *uint32                                                                                                                                    `path:"task-unlock-longest-wait-event" module:"Cisco-IOS-XR-switch-oper"`
	TaskUnlockLongestWaitTime            *uint64                                                                                                                                    `path:"task-unlock-longest-wait-time" module:"Cisco-IOS-XR-switch-oper"`
	TxThreadWatchdogCount                *uint64                                                                                                                                    `path:"tx-thread-watchdog-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/debug/debug-counters/debug-counters-instances/debug-counters-instance/ethsw-debug-counters-core-statistics-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo struct {
	AerCount                  *uint64 `path:"aer-count" module:"Cisco-IOS-XR-switch-oper"`
	Core                      *uint32 `path:"core" module:"Cisco-IOS-XR-switch-oper"`
	HotplugCount              *uint64 `path:"hotplug-count" module:"Cisco-IOS-XR-switch-oper"`
	MsiCount                  *uint64 `path:"msi-count" module:"Cisco-IOS-XR-switch-oper"`
	TaskLockLongestHeldTime   *uint64 `path:"task-lock-longest-held-time" module:"Cisco-IOS-XR-switch-oper"`
	TaskLockLongestWaitTime   *uint64 `path:"task-lock-longest-wait-time" module:"Cisco-IOS-XR-switch-oper"`
	TaskUnlockLongestWaitTime *uint64 `path:"task-unlock-longest-wait-time" module:"Cisco-IOS-XR-switch-oper"`
	WatchdogCount             *uint64 `path:"watchdog-count" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswDebugCountersCoreStatisticsInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/debug/debug-counters/debug-counters-instances/debug-counters-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Debug_DebugCounters_DebugCountersInstances_DebugCountersInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Events represents the /Cisco-IOS-XR-switch-oper/show-switch/events YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Events struct {
	EventsInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances `path:"events-instances" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Events implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events) IsYANGGoStruct() {}

// GetOrCreateEventsInstances retrieves the value of the EventsInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events) GetOrCreateEventsInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances {
	if t.EventsInstances != nil {
		return t.EventsInstances
	}
	t.EventsInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances{}
	return t.EventsInstances
}

// GetEventsInstances returns the value of the EventsInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Events. If the receiver or the field EventsInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events) GetEventsInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances {
	if t != nil && t.EventsInstances != nil {
		return t.EventsInstances
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Events"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Events.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/events/events-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances struct {
	EventsInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance `path:"events-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) IsYANGGoStruct() {}

// NewEventsInstance creates a new entry in the EventsInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) NewEventsInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.EventsInstance == nil {
		t.EventsInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.EventsInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list EventsInstance", key)
	}

	t.EventsInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance{
		NodeId: &NodeId,
	}

	return t.EventsInstance[key], nil
}

// RenameEventsInstance renames an entry in the list EventsInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) RenameEventsInstance(oldK, newK string) error {
	if _, ok := t.EventsInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in EventsInstance", newK)
	}

	e, ok := t.EventsInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in EventsInstance", oldK)
	}
	e.NodeId = &newK

	t.EventsInstance[newK] = e
	delete(t.EventsInstance, oldK)
	return nil
}

// GetOrCreateEventsInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) GetOrCreateEventsInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance {
	if t.EventsInstance == nil {
		t.EventsInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance)
	}
	return t.EventsInstance
}

// GetOrCreateEventsInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) GetOrCreateEventsInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance {

	key := NodeId

	if v, ok := t.EventsInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewEventsInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateEventsInstance got unexpected error: %v", err))
	}
	return v
}

// GetEventsInstance retrieves the value with the specified key from
// the EventsInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) GetEventsInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.EventsInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendEventsInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance struct to the
// list EventsInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) AppendEventsInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.EventsInstance == nil {
		t.EventsInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance)
	}

	if _, ok := t.EventsInstance[key]; ok {
		return fmt.Errorf("duplicate key for list EventsInstance %v", key)
	}

	t.EventsInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/events/events-instances/events-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance struct {
	EthswEventInfo      []*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo  `path:"ethsw-event-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo   *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	MaxQueuedEvents     *uint32                                                                                    `path:"max-queued-events" module:"Cisco-IOS-XR-switch-oper"`
	MaxQueuedEventsTime *string                                                                                    `path:"max-queued-events-time" module:"Cisco-IOS-XR-switch-oper"`
	NodeId              *string                                                                                    `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
	TotalDropped        *uint64                                                                                    `path:"total-dropped" module:"Cisco-IOS-XR-switch-oper"`
	TotalHandled        *uint64                                                                                    `path:"total-handled" module:"Cisco-IOS-XR-switch-oper"`
	TotalNotified       *uint64                                                                                    `path:"total-notified" module:"Cisco-IOS-XR-switch-oper"`
	TotalQueued         *uint64                                                                                    `path:"total-queued" module:"Cisco-IOS-XR-switch-oper"`
	TotalReceived       *uint64                                                                                    `path:"total-received" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance) IsYANGGoStruct() {}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/events/events-instances/events-instance/ethsw-event-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo struct {
	Dropped  *uint32 `path:"dropped" module:"Cisco-IOS-XR-switch-oper"`
	Handled  *uint32 `path:"handled" module:"Cisco-IOS-XR-switch-oper"`
	Id       *uint32 `path:"id" module:"Cisco-IOS-XR-switch-oper"`
	Name     *string `path:"name" module:"Cisco-IOS-XR-switch-oper"`
	Notified *uint32 `path:"notified" module:"Cisco-IOS-XR-switch-oper"`
	Queued   *uint32 `path:"queued" module:"Cisco-IOS-XR-switch-oper"`
	Received *uint32 `path:"received" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswEventInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/events/events-instances/events-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Events_EventsInstances_EventsInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb struct {
	FdbInstances    *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances    `path:"fdb-instances" module:"Cisco-IOS-XR-switch-oper"`
	FdbMacAddresses *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses `path:"fdb-mac-addresses" module:"Cisco-IOS-XR-switch-oper"`
	FdbPortNumbers  *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers  `path:"fdb-port-numbers" module:"Cisco-IOS-XR-switch-oper"`
	FdbStatistics   *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics   `path:"fdb-statistics" module:"Cisco-IOS-XR-switch-oper"`
	FdbVlanIds      *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbVlanIds      `path:"fdb-vlan-ids" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) IsYANGGoStruct() {}

// GetOrCreateFdbInstances retrieves the value of the FdbInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) GetOrCreateFdbInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances {
	if t.FdbInstances != nil {
		return t.FdbInstances
	}
	t.FdbInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances{}
	return t.FdbInstances
}

// GetOrCreateFdbMacAddresses retrieves the value of the FdbMacAddresses field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) GetOrCreateFdbMacAddresses() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses {
	if t.FdbMacAddresses != nil {
		return t.FdbMacAddresses
	}
	t.FdbMacAddresses = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses{}
	return t.FdbMacAddresses
}

// GetOrCreateFdbPortNumbers retrieves the value of the FdbPortNumbers field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) GetOrCreateFdbPortNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers {
	if t.FdbPortNumbers != nil {
		return t.FdbPortNumbers
	}
	t.FdbPortNumbers = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers{}
	return t.FdbPortNumbers
}

// GetOrCreateFdbStatistics retrieves the value of the FdbStatistics field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) GetOrCreateFdbStatistics() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics {
	if t.FdbStatistics != nil {
		return t.FdbStatistics
	}
	t.FdbStatistics = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics{}
	return t.FdbStatistics
}

// GetOrCreateFdbVlanIds retrieves the value of the FdbVlanIds field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) GetOrCreateFdbVlanIds() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbVlanIds {
	if t.FdbVlanIds != nil {
		return t.FdbVlanIds
	}
	t.FdbVlanIds = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbVlanIds{}
	return t.FdbVlanIds
}

// GetFdbInstances returns the value of the FdbInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb. If the receiver or the field FdbInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) GetFdbInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances {
	if t != nil && t.FdbInstances != nil {
		return t.FdbInstances
	}
	return nil
}

// GetFdbMacAddresses returns the value of the FdbMacAddresses struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb. If the receiver or the field FdbMacAddresses is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) GetFdbMacAddresses() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses {
	if t != nil && t.FdbMacAddresses != nil {
		return t.FdbMacAddresses
	}
	return nil
}

// GetFdbPortNumbers returns the value of the FdbPortNumbers struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb. If the receiver or the field FdbPortNumbers is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) GetFdbPortNumbers() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers {
	if t != nil && t.FdbPortNumbers != nil {
		return t.FdbPortNumbers
	}
	return nil
}

// GetFdbStatistics returns the value of the FdbStatistics struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb. If the receiver or the field FdbStatistics is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) GetFdbStatistics() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics {
	if t != nil && t.FdbStatistics != nil {
		return t.FdbStatistics
	}
	return nil
}

// GetFdbVlanIds returns the value of the FdbVlanIds struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb. If the receiver or the field FdbVlanIds is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) GetFdbVlanIds() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbVlanIds {
	if t != nil && t.FdbVlanIds != nil {
		return t.FdbVlanIds
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances struct {
	FdbInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance `path:"fdb-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) IsYANGGoStruct() {}

// NewFdbInstance creates a new entry in the FdbInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) NewFdbInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbInstance == nil {
		t.FdbInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.FdbInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list FdbInstance", key)
	}

	t.FdbInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance{
		NodeId: &NodeId,
	}

	return t.FdbInstance[key], nil
}

// RenameFdbInstance renames an entry in the list FdbInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) RenameFdbInstance(oldK, newK string) error {
	if _, ok := t.FdbInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in FdbInstance", newK)
	}

	e, ok := t.FdbInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in FdbInstance", oldK)
	}
	e.NodeId = &newK

	t.FdbInstance[newK] = e
	delete(t.FdbInstance, oldK)
	return nil
}

// GetOrCreateFdbInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) GetOrCreateFdbInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance {
	if t.FdbInstance == nil {
		t.FdbInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance)
	}
	return t.FdbInstance
}

// GetOrCreateFdbInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) GetOrCreateFdbInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance {

	key := NodeId

	if v, ok := t.FdbInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewFdbInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateFdbInstance got unexpected error: %v", err))
	}
	return v
}

// GetFdbInstance retrieves the value with the specified key from
// the FdbInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) GetFdbInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.FdbInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendFdbInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance struct to the
// list FdbInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) AppendFdbInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbInstance == nil {
		t.FdbInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance)
	}

	if _, ok := t.FdbInstance[key]; ok {
		return fmt.Errorf("duplicate key for list FdbInstance %v", key)
	}

	t.FdbInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-instances/fdb-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance struct {
	EthswFdbCoreInfo  []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo  `path:"ethsw-fdb-core-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswFdbInfo      []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo      `path:"ethsw-fdb-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswFdbStatistic []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic `path:"ethsw-fdb-statistic" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo   `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	HasTrunkEntry     *string                                                                             `path:"has-trunk-entry" module:"Cisco-IOS-XR-switch-oper"`
	NodeId            *string                                                                             `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
	TrunkEntryMessage *string                                                                             `path:"trunk-entry-message" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance) IsYANGGoStruct() {}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-instances/fdb-instance/ethsw-fdb-core-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo struct {
	FdbEntries       *uint32 `path:"fdb-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbInstance      *string `path:"fdb-instance" module:"Cisco-IOS-XR-switch-oper"`
	FdbStaticEntries *uint32 `path:"fdb-static-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbCoreInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-instances/fdb-instance/ethsw-fdb-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo struct {
	FdbIndex       *uint32 `path:"fdb-index" module:"Cisco-IOS-XR-switch-oper"`
	FdbMacAddr     *string `path:"fdb-mac-addr" module:"Cisco-IOS-XR-switch-oper"`
	FdbPort        *string `path:"fdb-port" module:"Cisco-IOS-XR-switch-oper"`
	FdbStaticEntry *string `path:"fdb-static-entry" module:"Cisco-IOS-XR-switch-oper"`
	FdbSyncedCores *uint32 `path:"fdb-synced-cores" module:"Cisco-IOS-XR-switch-oper"`
	FdbTrapEntry   *string `path:"fdb-trap-entry" module:"Cisco-IOS-XR-switch-oper"`
	FdbVlan        *uint32 `path:"fdb-vlan" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-instances/fdb-instance/ethsw-fdb-statistic YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic struct {
	FdbAddrInsertErrors     *uint32 `path:"fdb-addr-insert-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrQFull            *string `path:"fdb-addr-q-full" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrUpdateErrors     *uint32 `path:"fdb-addr-update-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrUpdatesQ         *uint32 `path:"fdb-addr-updates-q" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddressUpdates       *uint32 `path:"fdb-address-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbAgedUpdates          *uint32 `path:"fdb-aged-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbAllocationErrors     *uint32 `path:"fdb-allocation-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesAdded         *uint32 `path:"fdb-entries-added" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesDeleted       *uint32 `path:"fdb-entries-deleted" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesUpdated       *uint32 `path:"fdb-entries-updated" module:"Cisco-IOS-XR-switch-oper"`
	FdbFlushed              *uint32 `path:"fdb-flushed" module:"Cisco-IOS-XR-switch-oper"`
	FdbForwardingQFull      *string `path:"fdb-forwarding-q-full" module:"Cisco-IOS-XR-switch-oper"`
	FdbForwardingUpdates    *uint32 `path:"fdb-forwarding-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbMaxHashChain         *uint32 `path:"fdb-max-hash-chain" module:"Cisco-IOS-XR-switch-oper"`
	FdbMaxShadowEntries     *uint32 `path:"fdb-max-shadow-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbNewAddress           *uint32 `path:"fdb-new-address" module:"Cisco-IOS-XR-switch-oper"`
	FdbShadowEntries        *uint32 `path:"fdb-shadow-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbTransplantUpdates    *uint32 `path:"fdb-transplant-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbforwardingUpdatesQed *uint32 `path:"fdbforwarding-updates-qed" module:"Cisco-IOS-XR-switch-oper"`
	FdbmemoryErrors         *uint32 `path:"fdbmemory-errors" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswFdbStatistic) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-instances/fdb-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbInstances_FdbInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-mac-addresses YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses struct {
	FdbMacAddress map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress `path:"fdb-mac-address" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) IsYANGGoStruct() {}

// NewFdbMacAddress creates a new entry in the FdbMacAddress list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) NewFdbMacAddress(Mac string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbMacAddress == nil {
		t.FdbMacAddress = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress)
	}

	key := Mac

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.FdbMacAddress[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list FdbMacAddress", key)
	}

	t.FdbMacAddress[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress{
		Mac: &Mac,
	}

	return t.FdbMacAddress[key], nil
}

// RenameFdbMacAddress renames an entry in the list FdbMacAddress within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) RenameFdbMacAddress(oldK, newK string) error {
	if _, ok := t.FdbMacAddress[newK]; ok {
		return fmt.Errorf("key %v already exists in FdbMacAddress", newK)
	}

	e, ok := t.FdbMacAddress[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in FdbMacAddress", oldK)
	}
	e.Mac = &newK

	t.FdbMacAddress[newK] = e
	delete(t.FdbMacAddress, oldK)
	return nil
}

// GetOrCreateFdbMacAddressMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) GetOrCreateFdbMacAddressMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress {
	if t.FdbMacAddress == nil {
		t.FdbMacAddress = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress)
	}
	return t.FdbMacAddress
}

// GetOrCreateFdbMacAddress retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) GetOrCreateFdbMacAddress(Mac string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress {

	key := Mac

	if v, ok := t.FdbMacAddress[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewFdbMacAddress(Mac)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateFdbMacAddress got unexpected error: %v", err))
	}
	return v
}

// GetFdbMacAddress retrieves the value with the specified key from
// the FdbMacAddress map field of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) GetFdbMacAddress(Mac string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress {

	if t == nil {
		return nil
	}

	key := Mac

	if lm, ok := t.FdbMacAddress[key]; ok {
		return lm
	}
	return nil
}

// AppendFdbMacAddress appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress struct to the
// list FdbMacAddress of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) AppendFdbMacAddress(v *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress) error {
	if v.Mac == nil {
		return fmt.Errorf("invalid nil key received for Mac")
	}

	key := *v.Mac

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbMacAddress == nil {
		t.FdbMacAddress = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress)
	}

	if _, ok := t.FdbMacAddress[key]; ok {
		return fmt.Errorf("duplicate key for list FdbMacAddress %v", key)
	}

	t.FdbMacAddress[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-mac-addresses/fdb-mac-address YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress struct {
	FdbMacInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances `path:"fdb-mac-instances" module:"Cisco-IOS-XR-switch-oper"`
	Mac             *string                                                                              `path:"mac" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress) IsYANGGoStruct() {}

// GetOrCreateFdbMacInstances retrieves the value of the FdbMacInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress) GetOrCreateFdbMacInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances {
	if t.FdbMacInstances != nil {
		return t.FdbMacInstances
	}
	t.FdbMacInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances{}
	return t.FdbMacInstances
}

// GetFdbMacInstances returns the value of the FdbMacInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress. If the receiver or the field FdbMacInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress) GetFdbMacInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances {
	if t != nil && t.FdbMacInstances != nil {
		return t.FdbMacInstances
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress) ΛListKeyMap() (map[string]interface{}, error) {
	if t.Mac == nil {
		return nil, fmt.Errorf("nil value for key Mac")
	}

	return map[string]interface{}{
		"mac": *t.Mac,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-mac-addresses/fdb-mac-address/fdb-mac-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances struct {
	FdbMacInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance `path:"fdb-mac-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) IsYANGGoStruct() {
}

// NewFdbMacInstance creates a new entry in the FdbMacInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) NewFdbMacInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbMacInstance == nil {
		t.FdbMacInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.FdbMacInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list FdbMacInstance", key)
	}

	t.FdbMacInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance{
		NodeId: &NodeId,
	}

	return t.FdbMacInstance[key], nil
}

// RenameFdbMacInstance renames an entry in the list FdbMacInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) RenameFdbMacInstance(oldK, newK string) error {
	if _, ok := t.FdbMacInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in FdbMacInstance", newK)
	}

	e, ok := t.FdbMacInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in FdbMacInstance", oldK)
	}
	e.NodeId = &newK

	t.FdbMacInstance[newK] = e
	delete(t.FdbMacInstance, oldK)
	return nil
}

// GetOrCreateFdbMacInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) GetOrCreateFdbMacInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance {
	if t.FdbMacInstance == nil {
		t.FdbMacInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance)
	}
	return t.FdbMacInstance
}

// GetOrCreateFdbMacInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) GetOrCreateFdbMacInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance {

	key := NodeId

	if v, ok := t.FdbMacInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewFdbMacInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateFdbMacInstance got unexpected error: %v", err))
	}
	return v
}

// GetFdbMacInstance retrieves the value with the specified key from
// the FdbMacInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) GetFdbMacInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.FdbMacInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendFdbMacInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance struct to the
// list FdbMacInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) AppendFdbMacInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbMacInstance == nil {
		t.FdbMacInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance)
	}

	if _, ok := t.FdbMacInstance[key]; ok {
		return fmt.Errorf("duplicate key for list FdbMacInstance %v", key)
	}

	t.FdbMacInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-mac-addresses/fdb-mac-address/fdb-mac-instances/fdb-mac-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance struct {
	EthswFdbCoreInfo  []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo  `path:"ethsw-fdb-core-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswFdbInfo      []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo      `path:"ethsw-fdb-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswFdbStatistic []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic `path:"ethsw-fdb-statistic" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo   `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	HasTrunkEntry     *string                                                                                                                 `path:"has-trunk-entry" module:"Cisco-IOS-XR-switch-oper"`
	NodeId            *string                                                                                                                 `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
	TrunkEntryMessage *string                                                                                                                 `path:"trunk-entry-message" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-mac-addresses/fdb-mac-address/fdb-mac-instances/fdb-mac-instance/ethsw-fdb-core-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo struct {
	FdbEntries       *uint32 `path:"fdb-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbInstance      *string `path:"fdb-instance" module:"Cisco-IOS-XR-switch-oper"`
	FdbStaticEntries *uint32 `path:"fdb-static-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbCoreInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-mac-addresses/fdb-mac-address/fdb-mac-instances/fdb-mac-instance/ethsw-fdb-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo struct {
	FdbIndex       *uint32 `path:"fdb-index" module:"Cisco-IOS-XR-switch-oper"`
	FdbMacAddr     *string `path:"fdb-mac-addr" module:"Cisco-IOS-XR-switch-oper"`
	FdbPort        *string `path:"fdb-port" module:"Cisco-IOS-XR-switch-oper"`
	FdbStaticEntry *string `path:"fdb-static-entry" module:"Cisco-IOS-XR-switch-oper"`
	FdbSyncedCores *uint32 `path:"fdb-synced-cores" module:"Cisco-IOS-XR-switch-oper"`
	FdbTrapEntry   *string `path:"fdb-trap-entry" module:"Cisco-IOS-XR-switch-oper"`
	FdbVlan        *uint32 `path:"fdb-vlan" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-mac-addresses/fdb-mac-address/fdb-mac-instances/fdb-mac-instance/ethsw-fdb-statistic YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic struct {
	FdbAddrInsertErrors     *uint32 `path:"fdb-addr-insert-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrQFull            *string `path:"fdb-addr-q-full" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrUpdateErrors     *uint32 `path:"fdb-addr-update-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrUpdatesQ         *uint32 `path:"fdb-addr-updates-q" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddressUpdates       *uint32 `path:"fdb-address-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbAgedUpdates          *uint32 `path:"fdb-aged-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbAllocationErrors     *uint32 `path:"fdb-allocation-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesAdded         *uint32 `path:"fdb-entries-added" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesDeleted       *uint32 `path:"fdb-entries-deleted" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesUpdated       *uint32 `path:"fdb-entries-updated" module:"Cisco-IOS-XR-switch-oper"`
	FdbFlushed              *uint32 `path:"fdb-flushed" module:"Cisco-IOS-XR-switch-oper"`
	FdbForwardingQFull      *string `path:"fdb-forwarding-q-full" module:"Cisco-IOS-XR-switch-oper"`
	FdbForwardingUpdates    *uint32 `path:"fdb-forwarding-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbMaxHashChain         *uint32 `path:"fdb-max-hash-chain" module:"Cisco-IOS-XR-switch-oper"`
	FdbMaxShadowEntries     *uint32 `path:"fdb-max-shadow-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbNewAddress           *uint32 `path:"fdb-new-address" module:"Cisco-IOS-XR-switch-oper"`
	FdbShadowEntries        *uint32 `path:"fdb-shadow-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbTransplantUpdates    *uint32 `path:"fdb-transplant-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbforwardingUpdatesQed *uint32 `path:"fdbforwarding-updates-qed" module:"Cisco-IOS-XR-switch-oper"`
	FdbmemoryErrors         *uint32 `path:"fdbmemory-errors" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswFdbStatistic) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-mac-addresses/fdb-mac-address/fdb-mac-instances/fdb-mac-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbMacAddresses_FdbMacAddress_FdbMacInstances_FdbMacInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-port-numbers YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers struct {
	FdbPortNumber map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber `path:"fdb-port-number" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) IsYANGGoStruct() {}

// NewFdbPortNumber creates a new entry in the FdbPortNumber list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) NewFdbPortNumber(Port uint32) (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbPortNumber == nil {
		t.FdbPortNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber)
	}

	key := Port

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.FdbPortNumber[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list FdbPortNumber", key)
	}

	t.FdbPortNumber[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber{
		Port: &Port,
	}

	return t.FdbPortNumber[key], nil
}

// RenameFdbPortNumber renames an entry in the list FdbPortNumber within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) RenameFdbPortNumber(oldK, newK uint32) error {
	if _, ok := t.FdbPortNumber[newK]; ok {
		return fmt.Errorf("key %v already exists in FdbPortNumber", newK)
	}

	e, ok := t.FdbPortNumber[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in FdbPortNumber", oldK)
	}
	e.Port = &newK

	t.FdbPortNumber[newK] = e
	delete(t.FdbPortNumber, oldK)
	return nil
}

// GetOrCreateFdbPortNumberMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) GetOrCreateFdbPortNumberMap() map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber {
	if t.FdbPortNumber == nil {
		t.FdbPortNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber)
	}
	return t.FdbPortNumber
}

// GetOrCreateFdbPortNumber retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) GetOrCreateFdbPortNumber(Port uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber {

	key := Port

	if v, ok := t.FdbPortNumber[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewFdbPortNumber(Port)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateFdbPortNumber got unexpected error: %v", err))
	}
	return v
}

// GetFdbPortNumber retrieves the value with the specified key from
// the FdbPortNumber map field of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) GetFdbPortNumber(Port uint32) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber {

	if t == nil {
		return nil
	}

	key := Port

	if lm, ok := t.FdbPortNumber[key]; ok {
		return lm
	}
	return nil
}

// AppendFdbPortNumber appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber struct to the
// list FdbPortNumber of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) AppendFdbPortNumber(v *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber) error {
	if v.Port == nil {
		return fmt.Errorf("invalid nil key received for Port")
	}

	key := *v.Port

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbPortNumber == nil {
		t.FdbPortNumber = make(map[uint32]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber)
	}

	if _, ok := t.FdbPortNumber[key]; ok {
		return fmt.Errorf("duplicate key for list FdbPortNumber %v", key)
	}

	t.FdbPortNumber[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-port-numbers/fdb-port-number YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber struct {
	FdbPortInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances `path:"fdb-port-instances" module:"Cisco-IOS-XR-switch-oper"`
	Port             *uint32                                                                              `path:"port" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber) IsYANGGoStruct() {}

// GetOrCreateFdbPortInstances retrieves the value of the FdbPortInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber) GetOrCreateFdbPortInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances {
	if t.FdbPortInstances != nil {
		return t.FdbPortInstances
	}
	t.FdbPortInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances{}
	return t.FdbPortInstances
}

// GetFdbPortInstances returns the value of the FdbPortInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber. If the receiver or the field FdbPortInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber) GetFdbPortInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances {
	if t != nil && t.FdbPortInstances != nil {
		return t.FdbPortInstances
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber) ΛListKeyMap() (map[string]interface{}, error) {
	if t.Port == nil {
		return nil, fmt.Errorf("nil value for key Port")
	}

	return map[string]interface{}{
		"port": *t.Port,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-port-numbers/fdb-port-number/fdb-port-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances struct {
	FdbPortInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance `path:"fdb-port-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) IsYANGGoStruct() {
}

// NewFdbPortInstance creates a new entry in the FdbPortInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) NewFdbPortInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbPortInstance == nil {
		t.FdbPortInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.FdbPortInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list FdbPortInstance", key)
	}

	t.FdbPortInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance{
		NodeId: &NodeId,
	}

	return t.FdbPortInstance[key], nil
}

// RenameFdbPortInstance renames an entry in the list FdbPortInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) RenameFdbPortInstance(oldK, newK string) error {
	if _, ok := t.FdbPortInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in FdbPortInstance", newK)
	}

	e, ok := t.FdbPortInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in FdbPortInstance", oldK)
	}
	e.NodeId = &newK

	t.FdbPortInstance[newK] = e
	delete(t.FdbPortInstance, oldK)
	return nil
}

// GetOrCreateFdbPortInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) GetOrCreateFdbPortInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance {
	if t.FdbPortInstance == nil {
		t.FdbPortInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance)
	}
	return t.FdbPortInstance
}

// GetOrCreateFdbPortInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) GetOrCreateFdbPortInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance {

	key := NodeId

	if v, ok := t.FdbPortInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewFdbPortInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateFdbPortInstance got unexpected error: %v", err))
	}
	return v
}

// GetFdbPortInstance retrieves the value with the specified key from
// the FdbPortInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) GetFdbPortInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.FdbPortInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendFdbPortInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance struct to the
// list FdbPortInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) AppendFdbPortInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbPortInstance == nil {
		t.FdbPortInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance)
	}

	if _, ok := t.FdbPortInstance[key]; ok {
		return fmt.Errorf("duplicate key for list FdbPortInstance %v", key)
	}

	t.FdbPortInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-port-numbers/fdb-port-number/fdb-port-instances/fdb-port-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance struct {
	EthswFdbCoreInfo  []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo  `path:"ethsw-fdb-core-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswFdbInfo      []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo      `path:"ethsw-fdb-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswFdbStatistic []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic `path:"ethsw-fdb-statistic" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo   `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	HasTrunkEntry     *string                                                                                                                  `path:"has-trunk-entry" module:"Cisco-IOS-XR-switch-oper"`
	NodeId            *string                                                                                                                  `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
	TrunkEntryMessage *string                                                                                                                  `path:"trunk-entry-message" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-port-numbers/fdb-port-number/fdb-port-instances/fdb-port-instance/ethsw-fdb-core-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo struct {
	FdbEntries       *uint32 `path:"fdb-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbInstance      *string `path:"fdb-instance" module:"Cisco-IOS-XR-switch-oper"`
	FdbStaticEntries *uint32 `path:"fdb-static-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbCoreInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-port-numbers/fdb-port-number/fdb-port-instances/fdb-port-instance/ethsw-fdb-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo struct {
	FdbIndex       *uint32 `path:"fdb-index" module:"Cisco-IOS-XR-switch-oper"`
	FdbMacAddr     *string `path:"fdb-mac-addr" module:"Cisco-IOS-XR-switch-oper"`
	FdbPort        *string `path:"fdb-port" module:"Cisco-IOS-XR-switch-oper"`
	FdbStaticEntry *string `path:"fdb-static-entry" module:"Cisco-IOS-XR-switch-oper"`
	FdbSyncedCores *uint32 `path:"fdb-synced-cores" module:"Cisco-IOS-XR-switch-oper"`
	FdbTrapEntry   *string `path:"fdb-trap-entry" module:"Cisco-IOS-XR-switch-oper"`
	FdbVlan        *uint32 `path:"fdb-vlan" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-port-numbers/fdb-port-number/fdb-port-instances/fdb-port-instance/ethsw-fdb-statistic YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic struct {
	FdbAddrInsertErrors     *uint32 `path:"fdb-addr-insert-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrQFull            *string `path:"fdb-addr-q-full" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrUpdateErrors     *uint32 `path:"fdb-addr-update-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrUpdatesQ         *uint32 `path:"fdb-addr-updates-q" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddressUpdates       *uint32 `path:"fdb-address-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbAgedUpdates          *uint32 `path:"fdb-aged-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbAllocationErrors     *uint32 `path:"fdb-allocation-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesAdded         *uint32 `path:"fdb-entries-added" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesDeleted       *uint32 `path:"fdb-entries-deleted" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesUpdated       *uint32 `path:"fdb-entries-updated" module:"Cisco-IOS-XR-switch-oper"`
	FdbFlushed              *uint32 `path:"fdb-flushed" module:"Cisco-IOS-XR-switch-oper"`
	FdbForwardingQFull      *string `path:"fdb-forwarding-q-full" module:"Cisco-IOS-XR-switch-oper"`
	FdbForwardingUpdates    *uint32 `path:"fdb-forwarding-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbMaxHashChain         *uint32 `path:"fdb-max-hash-chain" module:"Cisco-IOS-XR-switch-oper"`
	FdbMaxShadowEntries     *uint32 `path:"fdb-max-shadow-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbNewAddress           *uint32 `path:"fdb-new-address" module:"Cisco-IOS-XR-switch-oper"`
	FdbShadowEntries        *uint32 `path:"fdb-shadow-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbTransplantUpdates    *uint32 `path:"fdb-transplant-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbforwardingUpdatesQed *uint32 `path:"fdbforwarding-updates-qed" module:"Cisco-IOS-XR-switch-oper"`
	FdbmemoryErrors         *uint32 `path:"fdbmemory-errors" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswFdbStatistic) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-port-numbers/fdb-port-number/fdb-port-instances/fdb-port-instance/ethsw-location-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo struct {
	Card      *string `path:"card" module:"Cisco-IOS-XR-switch-oper"`
	Rack      *uint8  `path:"rack" module:"Cisco-IOS-XR-switch-oper"`
	SerialNum *string `path:"serial-num" module:"Cisco-IOS-XR-switch-oper"`
	Switch    *string `path:"switch" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbPortNumbers_FdbPortNumber_FdbPortInstances_FdbPortInstance_EthswLocationInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-statistics YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics struct {
	FdbStatisticsInstances *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances `path:"fdb-statistics-instances" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics) IsYANGGoStruct() {}

// GetOrCreateFdbStatisticsInstances retrieves the value of the FdbStatisticsInstances field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics) GetOrCreateFdbStatisticsInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances {
	if t.FdbStatisticsInstances != nil {
		return t.FdbStatisticsInstances
	}
	t.FdbStatisticsInstances = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances{}
	return t.FdbStatisticsInstances
}

// GetFdbStatisticsInstances returns the value of the FdbStatisticsInstances struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics. If the receiver or the field FdbStatisticsInstances is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics) GetFdbStatisticsInstances() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances {
	if t != nil && t.FdbStatisticsInstances != nil {
		return t.FdbStatisticsInstances
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-statistics/fdb-statistics-instances YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances struct {
	FdbStatisticsInstance map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance `path:"fdb-statistics-instance" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) IsYANGGoStruct() {}

// NewFdbStatisticsInstance creates a new entry in the FdbStatisticsInstance list of the
// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances struct. The keys of the list are populated from the input
// arguments.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) NewFdbStatisticsInstance(NodeId string) (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance, error) {

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbStatisticsInstance == nil {
		t.FdbStatisticsInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance)
	}

	key := NodeId

	// Ensure that this key has not already been used in the
	// list. Keyed YANG lists do not allow duplicate keys to
	// be created.
	if _, ok := t.FdbStatisticsInstance[key]; ok {
		return nil, fmt.Errorf("duplicate key %v for list FdbStatisticsInstance", key)
	}

	t.FdbStatisticsInstance[key] = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance{
		NodeId: &NodeId,
	}

	return t.FdbStatisticsInstance[key], nil
}

// RenameFdbStatisticsInstance renames an entry in the list FdbStatisticsInstance within
// the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances struct. The entry with key oldK is renamed to newK updating
// the key within the value.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) RenameFdbStatisticsInstance(oldK, newK string) error {
	if _, ok := t.FdbStatisticsInstance[newK]; ok {
		return fmt.Errorf("key %v already exists in FdbStatisticsInstance", newK)
	}

	e, ok := t.FdbStatisticsInstance[oldK]
	if !ok {
		return fmt.Errorf("key %v not found in FdbStatisticsInstance", oldK)
	}
	e.NodeId = &newK

	t.FdbStatisticsInstance[newK] = e
	delete(t.FdbStatisticsInstance, oldK)
	return nil
}

// GetOrCreateFdbStatisticsInstanceMap returns the list (map) from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances.
//
// It initializes the field if not already initialized.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) GetOrCreateFdbStatisticsInstanceMap() map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance {
	if t.FdbStatisticsInstance == nil {
		t.FdbStatisticsInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance)
	}
	return t.FdbStatisticsInstance
}

// GetOrCreateFdbStatisticsInstance retrieves the value with the specified keys from
// the receiver Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances. If the entry does not exist, then it is created.
// It returns the existing or new list member.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) GetOrCreateFdbStatisticsInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance {

	key := NodeId

	if v, ok := t.FdbStatisticsInstance[key]; ok {
		return v
	}
	// Panic if we receive an error, since we should have retrieved an existing
	// list member. This allows chaining of GetOrCreate methods.
	v, err := t.NewFdbStatisticsInstance(NodeId)
	if err != nil {
		panic(fmt.Sprintf("GetOrCreateFdbStatisticsInstance got unexpected error: %v", err))
	}
	return v
}

// GetFdbStatisticsInstance retrieves the value with the specified key from
// the FdbStatisticsInstance map field of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances. If the receiver is nil, or
// the specified key is not present in the list, nil is returned such that Get*
// methods may be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) GetFdbStatisticsInstance(NodeId string) *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance {

	if t == nil {
		return nil
	}

	key := NodeId

	if lm, ok := t.FdbStatisticsInstance[key]; ok {
		return lm
	}
	return nil
}

// AppendFdbStatisticsInstance appends the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance struct to the
// list FdbStatisticsInstance of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances. If the key value(s) specified in
// the supplied Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance already exist in the list, an error is
// returned.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) AppendFdbStatisticsInstance(v *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance) error {
	if v.NodeId == nil {
		return fmt.Errorf("invalid nil key received for NodeId")
	}

	key := *v.NodeId

	// Initialise the list within the receiver struct if it has not already been
	// created.
	if t.FdbStatisticsInstance == nil {
		t.FdbStatisticsInstance = make(map[string]*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance)
	}

	if _, ok := t.FdbStatisticsInstance[key]; ok {
		return fmt.Errorf("duplicate key for list FdbStatisticsInstance %v", key)
	}

	t.FdbStatisticsInstance[key] = v
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-statistics/fdb-statistics-instances/fdb-statistics-instance YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance struct {
	EthswFdbCoreInfo  []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo  `path:"ethsw-fdb-core-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswFdbInfo      []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo      `path:"ethsw-fdb-info" module:"Cisco-IOS-XR-switch-oper"`
	EthswFdbStatistic []*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic `path:"ethsw-fdb-statistic" module:"Cisco-IOS-XR-switch-oper"`
	EthswLocationInfo *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswLocationInfo   `path:"ethsw-location-info" module:"Cisco-IOS-XR-switch-oper"`
	HasTrunkEntry     *string                                                                                                               `path:"has-trunk-entry" module:"Cisco-IOS-XR-switch-oper"`
	NodeId            *string                                                                                                               `path:"node-id" module:"Cisco-IOS-XR-switch-oper"`
	TrunkEntryMessage *string                                                                                                               `path:"trunk-entry-message" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance) IsYANGGoStruct() {
}

// GetOrCreateEthswLocationInfo retrieves the value of the EthswLocationInfo field
// or returns the existing field if it already exists.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance) GetOrCreateEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswLocationInfo {
	if t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	t.EthswLocationInfo = &Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswLocationInfo{}
	return t.EthswLocationInfo
}

// GetEthswLocationInfo returns the value of the EthswLocationInfo struct pointer
// from Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance. If the receiver or the field EthswLocationInfo is nil, nil
// is returned such that the Get* methods can be safely chained.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance) GetEthswLocationInfo() *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswLocationInfo {
	if t != nil && t.EthswLocationInfo != nil {
		return t.EthswLocationInfo
	}
	return nil
}

// ΛListKeyMap returns the keys of the Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance struct, which is a YANG list entry.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance) ΛListKeyMap() (map[string]interface{}, error) {
	if t.NodeId == nil {
		return nil, fmt.Errorf("nil value for key NodeId")
	}

	return map[string]interface{}{
		"node-id": *t.NodeId,
	}, nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-statistics/fdb-statistics-instances/fdb-statistics-instance/ethsw-fdb-core-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo struct {
	FdbEntries       *uint32 `path:"fdb-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbInstance      *string `path:"fdb-instance" module:"Cisco-IOS-XR-switch-oper"`
	FdbStaticEntries *uint32 `path:"fdb-static-entries" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbCoreInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-statistics/fdb-statistics-instances/fdb-statistics-instance/ethsw-fdb-info YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo struct {
	FdbIndex       *uint32 `path:"fdb-index" module:"Cisco-IOS-XR-switch-oper"`
	FdbMacAddr     *string `path:"fdb-mac-addr" module:"Cisco-IOS-XR-switch-oper"`
	FdbPort        *string `path:"fdb-port" module:"Cisco-IOS-XR-switch-oper"`
	FdbStaticEntry *string `path:"fdb-static-entry" module:"Cisco-IOS-XR-switch-oper"`
	FdbSyncedCores *uint32 `path:"fdb-synced-cores" module:"Cisco-IOS-XR-switch-oper"`
	FdbTrapEntry   *string `path:"fdb-trap-entry" module:"Cisco-IOS-XR-switch-oper"`
	FdbVlan        *uint32 `path:"fdb-vlan" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbInfo) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}

// Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic represents the /Cisco-IOS-XR-switch-oper/show-switch/fdb/fdb-statistics/fdb-statistics-instances/fdb-statistics-instance/ethsw-fdb-statistic YANG schema element.
type Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic struct {
	FdbAddrInsertErrors     *uint32 `path:"fdb-addr-insert-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrQFull            *string `path:"fdb-addr-q-full" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrUpdateErrors     *uint32 `path:"fdb-addr-update-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddrUpdatesQ         *uint32 `path:"fdb-addr-updates-q" module:"Cisco-IOS-XR-switch-oper"`
	FdbAddressUpdates       *uint32 `path:"fdb-address-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbAgedUpdates          *uint32 `path:"fdb-aged-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbAllocationErrors     *uint32 `path:"fdb-allocation-errors" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesAdded         *uint32 `path:"fdb-entries-added" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesDeleted       *uint32 `path:"fdb-entries-deleted" module:"Cisco-IOS-XR-switch-oper"`
	FdbEntriesUpdated       *uint32 `path:"fdb-entries-updated" module:"Cisco-IOS-XR-switch-oper"`
	FdbFlushed              *uint32 `path:"fdb-flushed" module:"Cisco-IOS-XR-switch-oper"`
	FdbForwardingQFull      *string `path:"fdb-forwarding-q-full" module:"Cisco-IOS-XR-switch-oper"`
	FdbForwardingUpdates    *uint32 `path:"fdb-forwarding-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbMaxHashChain         *uint32 `path:"fdb-max-hash-chain" module:"Cisco-IOS-XR-switch-oper"`
	FdbMaxShadowEntries     *uint32 `path:"fdb-max-shadow-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbNewAddress           *uint32 `path:"fdb-new-address" module:"Cisco-IOS-XR-switch-oper"`
	FdbShadowEntries        *uint32 `path:"fdb-shadow-entries" module:"Cisco-IOS-XR-switch-oper"`
	FdbTransplantUpdates    *uint32 `path:"fdb-transplant-updates" module:"Cisco-IOS-XR-switch-oper"`
	FdbforwardingUpdatesQed *uint32 `path:"fdbforwarding-updates-qed" module:"Cisco-IOS-XR-switch-oper"`
	FdbmemoryErrors         *uint32 `path:"fdbmemory-errors" module:"Cisco-IOS-XR-switch-oper"`
}

// IsYANGGoStruct ensures that Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic) IsYANGGoStruct() {
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic) ΛValidate(opts ...ygot.ValidationOption) error {
	if err := ytypes.Validate(SchemaTree["Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic"], t, opts...); err != nil {
		return err
	}
	return nil
}

// Validate validates s against the YANG schema corresponding to its type.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic) Validate(opts ...ygot.ValidationOption) error {
	return t.ΛValidate(opts...)
}

// ΛEnumTypeMap returns a map, keyed by YANG schema path, of the enumerated types
// that are included in the generated code.
func (t *Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic) ΛEnumTypeMap() map[string][]reflect.Type {
	return ΛEnumTypes
}

// ΛBelongingModule returns the name of the module that defines the namespace
// of Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic.
func (*Cisco_IOS_XRSwitchOper_ShowSwitch_Fdb_FdbStatistics_FdbStatisticsInstances_FdbStatisticsInstance_EthswFdbStatistic) ΛBelongingModule() string {
	return "Cisco-IOS-XR-switch-oper"
}
